- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Designing and Building a Vulnerable Active Directory Lab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organizations around the world rely on **Active Directory** to centralize the
    management of network resources and user accounts. Its widespread adoption and
    usage globally make it a common target for attackers seeking to compromise large-scale
    networks. In response to evolving attacks, setting up penetration testing lab
    environments that mimic real-world implementations can help organizations simulate
    various types of attacks and strengthen their security measures to keep their
    network resources and data safe.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will set up and configure an Active Directory lab inside
    an isolated network environment in Microsoft Azure. In this lab setup, we will
    have various security misconfigurations along with deliberately weak configurations
    present in actual Active Directory implementations. Once the lab environment is
    ready, we will perform a penetration testing simulation to validate our lab setup
    configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the necessary components and prerequisites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching the target VM instances
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up and configuring the Active Directory lab
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simulating penetration testing in the lab environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cleaning up
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With these in mind, let’s begin!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we start, we must have the following ready:'
  prefs: []
  type: TYPE_NORMAL
- en: The **Microsoft Azure** account we used in *[Chapter 5](B19755_05.xhtml)*, *Setting
    Up Isolated Penetration Testing Lab Environments* *on Azure*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Microsoft Remote Desktop** application installed on your local machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The golden image of the Kali Linux VM instance created in the *Leveraging Terraform
    to automatically set up the attacker VM instance* section of *[Chapter 5](B19755_05.xhtml)*,
    *Setting Up Isolated Penetration Testing Lab Environments* *on Azure*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any text editor (such as Notepad++, Visual Studio Code, or Sublime Text) where
    we can temporarily store specific values (for example, your local machine’s IP
    address) that will be used in the hands-on solutions in this chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may proceed with the next steps once these requirements are ready.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you have worked on the hands-on solutions of *[Chapter 5](B19755_05.xhtml)*
    before proceeding. This chapter assumes that we have already created the golden
    VM image of the attacker VM instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'The source code and other files for each chapter are available in this book’s
    GitHub repository: [https://github.com/PacktPublishing/Building-and-Automating-Penetration-Testing-Labs-in-the-Cloud](https://github.com/PacktPublishing/Building-and-Automating-Penetration-Testing-Labs-in-the-Cloud).'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the necessary components and prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will set up the isolated network environment where the
    target resources will be launched. This will ensure that vulnerable and misconfigured
    resources and services can only be accessed by trusted machines – our local machine
    and the attacker’s machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/B19755_08_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.1 — Preparing the prerequisites
  prefs: []
  type: TYPE_NORMAL
- en: We will also generate the SSH keys (the public key and the private key) for
    accessing the attacker VM instance later in this chapter. As shown in *Figure
    8**.1*, the private key will be stored inside your local machine while the public
    key will be stored inside the attacker VM instance. With this setup, the server
    (the attacker VM instance) can confirm the identity of the client (your local
    machine) using the private key. This will allow us to access the attacker VM instance
    via SSH and run commands remotely. In addition to this, we will make sure that
    the attacker VM instance is ready so that we can focus on setting up and validating
    the configuration of our vulnerable Active Directory lab in the succeeding sections
    of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'That said, we’ll divide this section into three parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Part 1 of 3 – Generating SSH keys to access the attacker* *VM instance*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 2 of 3 – Setting up the lab network environment* *with Terraform*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 3 of 3 – Accessing the attacker* *VM instance*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 of 3 – Generating SSH keys to access the attacker VM instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s start by generating the SSH keys for accessing the attacker VM instance
    later in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the **Cloud Shell** editor by clicking the button highlighted in *Figure
    8**.2*:![](image/B19755_08_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.2 – Opening Cloud Shell
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will open a terminal where we can run bash commands.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: In rare cases where Cloud Shell fails to mount the Azure file share (that is,
    you received a warning stating **Failed to mount the Azure file share. Your cloud
    drive won’t be available**), simply restart Cloud Shell (and check if that fixes
    the issue).
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Terminal (right after the **$** sign), run the following commands to
    create a new directory (named **kali_keys_ad**) and navigate to it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We will store the generated keys inside this directory.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Generate a new SSH key pair and save the generated key files in the **kali_keys_ad**
    directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: When asked for a passphrase, just press *Enter*. This will generate two files
    – **kali-ad-lab-ssh** (the private key) and **kali-ad-lab-ssh.pub** (the public
    key).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '*How do these SSH key files work?* SSH key files consist of a **private key**
    (stored and kept on the client’s machine) and a corresponding **public key** that’s
    uploaded to the remote server. During authentication, the client uses its private
    key to generate a digital signature, and the server verifies it using the corresponding
    public key. Here, the server can confirm the client’s identity based on their
    possession of the private key without having to transmit sensitive credentials.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Print the public key value using the **cat** command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Store this value in a text editor on your local machine as we will use this
    later in the succeeding sections of this chapter.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Upload/Download files** button, as highlighted in the top-left corner
    of *Figure 8**.3*:![](image/B19755_08_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.3 — Downloading the private key we generated
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select the **Download** option from the list of options available. When you
    see the **Download a file** pop-up window, type **/kali_keys_ad/kali-ad-lab-ssh**
    in the input field highlighted in *Figure 8**.3* and then click **Download**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Click here to download your file** link to proceed with the actual
    download operation. This will download the **kali-ad-lab-ssh** key file from the
    Cloud Shell environment to your local machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 2 of 3 – Setting up the lab network environment with Terraform
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Cloud Shell Terminal (right after the **$** sign), run the following
    commands to create a new directory (named **ch8_environment**) and navigate to
    it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download the ZIP file containing the Terraform configuration files for this
    chapter’s lab environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This will download the **ad_lab_environment.zip** file to the **ch8_environment**
    directory. Make sure that the download link specified is correct (no spaces) and
    pointing to the **ad_lab_environment.zip** file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You can find the ZIP file containing the Terraform configuration files in this
    book’s GitHub repository at [https://github.com/PacktPublishing/Building-and-Automating-Penetration-Testing-Labs-in-the-Cloud/tree/main/ch08](https://github.com/PacktPublishing/Building-and-Automating-Penetration-Testing-Labs-in-the-Cloud/tree/main/ch08).
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the **unzip** command to extract the contents of the ZIP file you downloaded:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following logs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, we can see the files that were extracted from the ZIP file we just downloaded.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now that we have extracted the files from the ZIP file, we can delete the ZIP
    file as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Open the editor by clicking the button highlighted in *Figure 8**.4*:![](image/B19755_08_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.4 — Opening the Cloud Shell editor
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should open a file tree, along with an editor where we can modify the code
    of our files directly.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Open the **ch8_environment/terraform.tfvars** file in the editor by clicking
    on the file from the file tree:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Make sure you replace **<IP ADDRESS>** with the IP address of your local machine
    and **<PUBLIC SSH KEY>** with the string value of the public SSH key (which we
    printed using the **cat** command earlier). Update **<KALI IMAGE ID>** with the
    resource ID of the golden image we created in *[Chapter 5](B19755_05.xhtml)*,
    *Setting Up Isolated Penetration Testing Lab Environments on Azure*. If you are
    wondering what this value looks like, the value for the **"<KALI IMAGE ID>**”
    placeholder should have a format similar to the following:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Make sure you save the changes you’ve made to the **ch8_environment/terraform.tfvars**
    file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you are looking for the value for the **<KALI IMAGE ID>** placeholder, type
    **1.0.0** in the search bar and select **VM image version 1.0.0** from the list
    of resources returned in the search results. On the details page (the **Overview**
    blade) of **1.0.0 (gallery/kali_image/1.0.0) VM image version**, click the **JSON
    View** link and then copy the **Resource ID** value from the **Resource** **JSON**
    page.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use the **terraform init** command to initialize the Terraform working
    directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Note that we are using Terraform version **v1.3.X** for the hands-on solutions
    in this chapter since this is the version that’s been configured in our Cloud
    Shell environment (as of this writing). If your Terraform version is higher, you
    may set up and use a lower version (for example, **v1.3.2**) in case you encounter
    issues running the Terraform commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s run **terraform plan** to preview the changes to be performed by Terraform:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Running this command may yield a few deprecation warnings. This should be okay,
    so long as we can successfully run the command without errors.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use the **terraform apply** command to implement the changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should return the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If the **terraform apply** command runs without any errors, we should have
    the following environment setup:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.5 — VNet peering setup
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we have a **VNet peering** setup similar to what we configured in *[Chapter
    5](B19755_05.xhtml)*, *Setting Up Isolated Penetration Testing Lab Environments
    on Azure*. In addition to the network environment, we should also have the attacker
    VM instance (**vm-kali**) set up as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This step may take around 10 to 15 minutes to complete. Feel free to grab a
    cup of coffee or tea while waiting! Note that it may take a few minutes for the
    attacker VM instance to be ready (after the **terraform apply** command has finished
    running).
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify that the resources have been created successfully using the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should return the resources that were created, along with the following
    outputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Take note of the value of **<VM KALI PUBLIC IP>** as we will use this value
    in the succeeding set of steps.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Part 3 of 3 – Accessing the attacker VM instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s access the desktop environment of the attacker machine remotely
    from the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a new browser tab and access the web-based **noVNC** client using the **http://<VM
    KALI PUBLIC IP>:8081/vnc.html** URL. Make sure you replace **<VM KALI PUBLIC IP>**
    with the **Public IP address** value you copied to the clipboard earlier:![](image/B19755_08_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.6 — noVNC welcome screen
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should open a welcome screen with a **Connect** button, similar to what
    is shown in *Figure 8**.6*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you find yourself unable to access the welcome screen, your IP address might
    have changed already. Simply open the Cloud Shell editor and update the **terraform.tfvars**
    file. Once the **terraform.tfvars** file has been updated with the new IP address
    of your local machine, run the **terraform apply** command again to update the
    firewall rule to whitelist your new IP address.
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Connect** button and then use **kali123** as the password (or use
    the password you specified in *[Chapter 5](B19755_05.xhtml)* when setting up the
    Kali Linux attacker machine) to access the desktop environment:![](image/B19755_04_32.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.7 — Accessing the Kali Linux desktop/GUI environment in the browser
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We will use this desktop/GUI environment in this chapter. Feel free to open
    the Terminal (inside the desktop environment of the attacker machine) and run
    **ifconfig** to confirm that the Kali Linux VM instance has been launched in **vnet-02**
    (**192.168.0.0/16**).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Note that you may also access the attacker Kali Linux server directly from your
    local machine using the **ssh -i kali-ad-lab-ssh kali_admin@<VM KALI PUBLIC IP>**
    command (that is, after running **chmod** **400 kali-ad-lab-ssh**).
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have set up the isolated network environment and the attacker
    VM instance in just a few steps! Now, let’s proceed with launching the target
    VM instances.
  prefs: []
  type: TYPE_NORMAL
- en: Launching the target VM instances
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will launch two Windows VM instances for the target resources
    inside the network environment. The first VM instance will serve as the **domain
    controller**, while the second VM instance will serve as the workstation machine
    that will be joined to the domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/B19755_08_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.8 — Launching the target VM instances
  prefs: []
  type: TYPE_NORMAL
- en: If this is your first time setting up Active Directory, then we can think of
    the **domain controller** as the *brain* of the network that oversees user authentication,
    resource management, and directory services. We can think of the workstation machine
    as one of the arms connected to the body, which interacts with the brain (domain
    controller) to access and utilize network resources and services. It is important
    to note that we can have multiple machines joined to the domain, each acting as
    a separate arm but still under the control and guidance of the domain controller.
    However, in this chapter, we’ll only set up one workstation machine joined to
    the domain.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This section primarily focuses on launching the Windows VM instances inside
    our Microsoft Azure account. We have a dedicated section right after this on (mis)configuring
    the actual Active Directory setup.
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll divide this section into three subparts:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Part 1 of 3 – Launching the VM instance for the* *domain controller*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 2 of 3 – Launching the VM instance for the* *workstation machine*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 3 of 3 – Testing* *network connectivity*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 of 3 – Launching the VM instance for the domain controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s start by launching our first Windows VM instance:'
  prefs: []
  type: TYPE_NORMAL
- en: In the search bar, type **virtual machines** and press *Enter*:![](image/B19755_08_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.9 — Navigating to the Virtual machines page
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Virtual machines** from the list of available options to navigate to
    the **Virtual** **machines** page.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the **Virtual machines** page, click the **Create** button. Choose **Azure
    virtual machine** from the list of options from the drop-down menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the **Create a virtual machine** page, specify the following configuration
    values under the **Basics** tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project details** > **Subscription**: (Use existing subscription)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project details** > **Resource** **group**: **resource-group-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Virtual machine** **name**: **ad-domain-controller**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Region**: **(US)** **East US**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Security** **type**: **Standard**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Image**: Click the **See all** **images** link'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Clicking **See all images** will redirect you to the **Select an** **image**
    page.
  prefs: []
  type: TYPE_NORMAL
- en: On the **Select an image** page, type **windows** in the search box and then
    press *Enter*:![](image/B19755_08_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.10 — Selecting the Windows Server image
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Choose **Windows Server** by clicking the **Select** button, as highlighted
    in *Figure 8**.10*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Windows Server 2019 Datacenter – x64 Gen 2** (or if there are other
    newer versions, choose the closest one from the list of options):![](image/B19755_08_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.11 — Selecting the image for the domain controller VM instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should redirect you back to the **Create a virtual** **machine** page.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you are having issues selecting the Windows Server image and making it appear
    in the drop-down menu as the selected image, simply refresh the page and then
    try again. Note that you will need to input the other VM configuration settings
    again.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuing where we left off on the **Create a virtual machine** page, specify
    the following configuration values as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project details** > **Size**: **Standard_B2ms – 2 vcpus, 8** **GiB memory**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Username**: **admin_user**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Password**: **Windows1234!!!**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Confirm** **password**: **Windows1234!!!**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inbound port rules** > **Public inbound** **ports**: **None**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click the **Next : Disks >** button after.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Accept the default configuration under the **Disks** tab and click **Next :**
    **Networking >**.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Under the **Networking** tab, make sure that the following configuration values
    are set:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Virtual** **network**: **vnet-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subnet**: **subnet-01 (10.0.1.0/24)**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIC network security** **group**: **Advanced**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configure network security** **group**: **nsg-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delete public IP and NIC when VM is** **deleted**: **(checked)**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Here, we are configuring our Windows VM instance to be launched inside the VNet
    (**vnet-01**) we set up automatically using Terraform in the previous section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, continue clicking the **Next** button until you reach the last tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Simply accept the default settings under **Disks**, **Networking**, **Management**,
    **Monitoring**, **Advanced**, **Tags**, and **Review +** **create**.
  prefs: []
  type: TYPE_NORMAL
- en: Once you reach the **Review + create** tab, click the **Create** button after
    reviewing the configuration details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait until you see the **Your deployment is complete** message. Scroll down
    and click the **Go to resource** button. This should redirect you to the **Overview**
    blade of the VM we just created (**ad-domain-controller**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Locate and select **Connect** under the **Settings** section of the resource
    menu in the left pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Download RDP File**, as highlighted in *Figure 8**.12*:![](image/B19755_08_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.12 — Download RDP File
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will download an RDP file (**ad-domain-controller.rdp**) to your local
    machine. If you are seeing a newer version of the **Connect** page of the portal,
    simply click the **Select** button under **Native RDP** (under **Most common**)
    before clicking the **Download RDP** **File** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '**Remote Desktop Protocol** (**RDP**) is a secure protocol (developed by Microsoft)
    that allows users to access and control a computer’s desktop interface over a
    network. With this, an RDP file is simply a configuration file that contains the
    necessary information to access a remote machine’s interface over a network. For
    more information about this topic, feel free to check out [https://learn.microsoft.com/en-us/azure/virtual-machines/windows/connect-rdp](https://learn.microsoft.com/en-us/azure/virtual-machines/windows/connect-rdp).'
  prefs: []
  type: TYPE_NORMAL
- en: Open the RDP file using the **Microsoft Remote Desktop** app. If the Microsoft
    Remote Desktop app has been installed already, we can simply double-click the
    RDP file stored inside our **Downloads** folder (or alternative) to connect to
    the Windows VM instance (**ad-domain-controller**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Simply use **admin_user** as the username and **Windows1234!!!** as the password
    when you’re prompted for the credentials of the user account:![](image/B19755_08_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.13 — Enter Your User Account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Click the **Continue** button when you see the **You are connecting to the
    RDP** **host...** popup:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: In rare cases where we encounter a black screen, simply restart the VM instance
    and then try connecting again. Otherwise, delete the VM instance, recreate it,
    and then connect again.
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/B19755_08_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.14 — Server Manager open upon signing in
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We should see **Server Manager** open upon signing into the **admin_user** user
    account.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If this is your first time using **Server Manager**, you can think of it as
    a centralized interface where administrators can perform various tasks and manage
    different aspects of a Windows Server environment. This includes configuring server
    roles and features, monitoring server performance, setting up and configuring
    Active Directory, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Click the search button and type **cmd** in the search box, similar to what
    we have in *Figure 8**.15*:![](image/B19755_08_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.15 — Opening the Command Prompt application
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Command Prompt** (under **Best match**) to open the Command Prompt application.
    Here, we can run various commands to interact with the operating system and perform
    tasks such as file and directory manipulation, system configuration, network diagnostics,
    and more.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Inside the Command Prompt, run **ipconfig** to retrieve the private IP address
    of the VM instance:![](image/B19755_08_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.16 — Results after running ipconfig
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that the private IP address of our first Windows VM instance
    (which will serve as the Active Directory domain controller once we’ve configured
    it later in this chapter) is **1.0.1.4**. Note that you might get a different
    private IP address value after running **ipconfig**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: In the succeeding set of steps in this chapter, we will assume that the private
    IP address of our domain controller machine is **1.0.1.4**. Make sure you update
    the IP address value that’s used in the commands in case you get a different private
    IP address value after running **ipconfig** in the previous step.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have a single Windows VM instance (in addition to the attacker
    VM instance) running inside our isolated network environment. **Note that this
    Windows VM instance does not have Active Directory set up yet!** That said, do
    not close the RDP session yet for this VM instance (**ad-domain-controller**)
    as we will set up and configure Active Directory in this instance in the next
    section. For now, you can minimize the RDP session window and navigate back to
    the browser where we have the Azure portal open.
  prefs: []
  type: TYPE_NORMAL
- en: Part 2 of 3 – Launching the VM instance for the workstation machine
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s launch a second Windows VM instance for the workstation machine:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate back to the browser where we have the Azure portal open. In the search
    bar (of the Microsoft Azure portal), type **virtual machines** and press *Enter*:![](image/B19755_08_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.17 — Navigating to the Virtual machines page
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Virtual machines** from the list of available options to navigate to
    the **Virtual machines** page (similar to what is shown in *Figure 8**.17*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the **Virtual machines** page, click the **Create** button. Choose **Azure
    virtual machine** from the list of options from the drop-down menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the **Create a virtual machine** page, specify the following configuration
    values under the **Basics** tab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project details** > **Subscription**: (Use existing subscription)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project details** > **Resource** **group**: **resource-group-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Virtual machine** **name**: **ad-workstation-machine**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Region**: **(US)** **East US**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Security** **type**: **Standard**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Instance details** > **Image**: Click the **See all** **images** link'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Clicking **See all images** will redirect you to the **Select an** **image**
    page.
  prefs: []
  type: TYPE_NORMAL
- en: On the **Select an image** page, type **windows** in the search box and then
    press *Enter*:![](image/B19755_08_18.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.18 — Selecting the Microsoft Windows 10 image
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Choose **Microsoft Windows 10** by clicking the **Select** button, as highlighted
    in *Figure 8**.18*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Windows 10 Enterprise, version 22H2 – x64 Gen2** (or if there are other
    newer versions, choose the closest one from the list of options):![](image/B19755_08_19.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.19 — Selecting the image for the workstation VM instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should redirect you back to the **Create a virtual** **machine** page.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you are having issues selecting the Windows Server image and making it reflect
    in the drop-down menu as the selected image, simply refresh the page and then
    try again. Note that you will need to input the VM configuration settings again.
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuing where we left off on the **Create a virtual machine** page, specify
    the following configuration values as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project details** > **Size**: **Standard_B2ms – 2 vcpus, 8** **GiB memory**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Username**: **workstation_user**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Password**: **Workstation1234!!!**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrator account** > **Confirm** **password**: **Workstation1234!!!**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inbound port rules** > **Public inbound** **ports**: **None**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Licensing** > **I confirm I have an eligible Windows 10/11 license with multi-tenant
    hosting** **rights**: (checked)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click the **Next : Disks >** button after you''ve added the specified values.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Accept the default configuration under the **Disks** tab and click **Next :**
    **Networking >**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Under the **Networking** tab, make sure that the following configuration values
    are set:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Virtual** **network**: **vnet-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subnet**: **subnet-01 (10.0.1.0/24)**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIC network security** **group**: **Advanced**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configure network security** **group**: **nsg-01**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Delete public IP and NIC when VM is** **deleted**: **(checked)**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Here, we are configuring our second Windows VM instance (**ad-workstation-machine**)
    so that it’s deployed inside the same VNet (and subnet) as the first Windows VM
    instance. Note that these network resources already exist and were created automatically
    using Terraform in the previous section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, continue clicking the **Next** button until you reach the last tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Simply accept the default settings under **Disks**, **Networking**, **Management**,
    **Monitoring**, **Advanced**, **Tags**, and **Review +** **create**.
  prefs: []
  type: TYPE_NORMAL
- en: Once you reach the **Review + create** tab, click the **Create** button after
    reviewing the configuration details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait until you see the **Your deployment is complete** message. Scroll down
    and click the **Go to resource** button. This should redirect you to the **Overview**
    blade of the VM we just created (**ad-workstation-machine**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Locate and select **Connect** under the **Settings** section of the resource
    menu in the left pane.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Download RDP File**, as highlighted in *Figure 8**.20*:![](image/B19755_08_20.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.20 — Download RDP File
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will download an RDP file (**ad-workstation-machine.rdp**) to your local
    machine. If you are viewing a newer version of the **Connect** page of the portal,
    simply click the **Select** button under **Native RDP** (under **Most common**)
    before clicking the **Download RDP** **File** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Open the RDP file using the **Microsoft Remote Desktop** app. Simply use **workstation_user**
    as the username and **Workstation1234!!!** as the password when prompted for the
    credentials:![](image/B19755_08_21.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.21 — Enter Your User Account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Continue** button when you see the **You are connecting to the RDP**
    **host...** popup.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: In rare cases where we encounter a black screen, simply restart the VM instance
    and then try connecting again. Otherwise, delete the VM instance, recreate it,
    and then connect again.
  prefs: []
  type: TYPE_NORMAL
- en: On the **Choose privacy settings for your device** screen, click **Accept**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type **cmd** in the search bar (located in the lower left corner of the screen),
    similar to what is shown in *Figure 8**.22*:![](image/B19755_08_22.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.22 — Opening the Command Prompt
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Command Prompt** (under **Best match**) to open the Command Prompt application.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Run **ipconfig** to check the private IP address of the VM instance:![](image/B19755_08_23.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.23 — Results after running ipconfig inside the workstation VM instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should return a set of configuration values similar to what we have in
    *Figure 8**.23*. Note that you might get a different IP address value for **IPv4
    Address**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Part 3 of 3 – Testing network connectivity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With the target VM instances launched, we need to verify if the target instances
    inside one VNet (**vnet-01**) can be reached from the attacker VM instance launched
    in another VNet (**vnet-02**) to test the VNet peering that we set up automatically
    using Terraform earlier:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/B19755_08_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.24 — Testing network connectivity
  prefs: []
  type: TYPE_NORMAL
- en: 'That said, let’s quickly check if both Windows instances (**ad-domain-controller**
    and **ad-workstation-machine**) are reachable from the attacker VM instance (**vm-kali**)
    before we proceed with the succeeding set of steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate back to the browser tab you used to access the desktop/GUI environment
    of the attacker machine. If you have closed the browser tab already, simply go
    to **http://<VM KALI PUBLIC IP>:8081/vnc.html** in a new browser tab. Make sure
    you replace **<VM KALI PUBLIC IP>** with the **Public IP address** value of the
    Kali Linux VM instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Use **kali123** as the password (or the password you specified in *[Chapter
    5](B19755_05.xhtml)*, *Setting Up Isolated Penetration Testing Lab Environments
    on Azure*, when setting up the Kali Linux attacker machine) to access the desktop
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Open a Terminal window inside the Kali Linux instance by clicking the icon highlighted
    in *Figure 8**.25*:![](image/B19755_08_25.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.25 — Opening a Terminal window
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This should open a Terminal window where we can run commands after the **$**
    sign.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, let’s run the following commands to scan the VM instance that will serve
    as the domain controller (**ad-domain-controller**):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Make sure you update the **IP** variable value with the actual private IP address
    of the first target VM instance (**ad-domain-controller**). Running this command
    should give us the following results:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_26.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.26 — Initial scan on the domain controller VM instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that network traffic from the attacker machine (**vm-kali**)
    can reach the domain controller VM instance (**ad-domain-controller**).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, let’s run the following commands to perform a scan of the second target
    VM instance (**ad-workstation-machine**). This will serve as the workstation that
    will be joined to the domain controller later in this chapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Again, make sure you update the **IP** variable value with the actual private
    IP address of the second target VM instance (**ad-workstation-machine**). This
    should give us the following results:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_27.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.27 — Initial scan on the workstation machine (ad-workstation-machine)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that network traffic from the attacker machine (**vm-kali**)
    can reach the second Windows VM instance (**ad-workstation-machine**).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: At this point, we have our Windows VM instances ready. **Note that these Windows
    VM instances do not have Active Directory set up yet!** In the next section, we
    will complete our lab environment and set up and (mis)configure Active Directory
    inside these Windows VM instances.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Setting up and configuring the Active Directory lab
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will set up the Active Directory domain controller, along
    with the workstation machine (which will be joined to the domain). Before we proceed
    with the hands-on portion of this section, let’s discuss some of the relevant
    concepts and terminologies first:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Domain**: This represents a logical group of network resources. We can think
    of a domain as a virtual city with its own unique identity and infrastructure.
    Just as a city groups together various neighborhoods, a domain logically groups
    network resources together.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain controller**: This is a server that’s responsible for providing authentication
    and authorization services for domain users and computers. We can think of a domain
    controller as the city’s main security office that ensures only authorized individuals
    can access different parts of the city.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Forest**: This represents the highest hierarchical level in Active Directory
    and contains multiple domains (along with other resources). We can think of a
    forest as a region containing multiple cities where each city (domain) operates
    independently, but they all belong to the same forest.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organizational unit** (**OU**): This is a container within a domain that
    can be used to contain users, computers, and other objects. We can think of an
    OU as a district within a city. It’s like a container that’s used to organize
    and manage resources, similar to how districts categorize buildings and services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Object**: This represents a single element or resource part of the Active
    Directory network (including user accounts, groups, and shared folders). We can
    think of objects as the individual elements that make up a city (such as houses,
    businesses, and parks).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Note that there are other Active Directory concepts we can explore and discuss
    (which we did not include here). However, this should do the trick for now as
    an introduction to the fundamental concepts and components when working with Active
    Directory.
  prefs: []
  type: TYPE_NORMAL
- en: With some of the key concepts defined, let’s define and describe Active Directory.
    As we can see, **Active Directory** is simply a *directory service* that’s designed
    to manage network resources and user accounts. Just as a city’s administration
    manages various neighborhoods and resources, Active Directory centrally manages
    network elements, user identities, and access controls within a digital ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have a better understanding of the key concepts for this section,
    we can proceed with setting up and (mis)configuring Active Directory inside the
    two Windows VM instances we launched in the previous section. Given that setting
    up the Active Directory lab requires a relatively long sequence of steps, we will
    divide this section into 12 parts:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Part 1 of 12 – Installing Active Directory* *Domain Services*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 2 of 12 – Promoting the VM instance to become the* *domain controller*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 3 of 12 – Setting up Active Directory* *Certificate Services*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 4 of 12 – Configuring Active Directory* *Certificate Services*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 5 of 12 – Updating the trusted hosts configuration and enabling* *PowerShell
    Remoting*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 6 of 12 – Setting up the flag inside the* *domain controller*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 7 of 12 – Creating the John* *Doe user*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 8 of 12 – Creating the Jane* *Doe user*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 9 of 12 – Creating the Service* *Account user*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 10 of 12 – Setting up the SPN for the* *service account*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 11 of 12 – Adding the Service Account user to the Remote Management*
    *Users group*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Part 12 of 12 – Configuring the* *workstation machine*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Without further ado, let’s begin!
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 of 1 – Installing Active Directory Domain Services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Remember the RDP session we minimized in a previous section?* Let’s use that
    session again as we will be installing **Active Directory Domain Services** inside
    the first VM instance (**ad-domain-controller**):'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that you have the RDP session to the first VM instance (**ad-domain-controller**)
    open before proceeding to the next step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '**Active Directory** and **Active Directory Domain Services** (**AD DS**) are
    terms that are sometimes used interchangeably. However, while AD DS specifically
    refers to the core directory service component of Active Directory, it’s important
    to note that Active Directory (as a whole) encompasses a broader range of services
    and components than just AD DS.'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Server Manager** > **Dashboard** and click **Add roles** **and features**:![](image/B19755_08_28.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.28 — Add roles and features
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can find the **Add roles and features** link under **Configure this local
    server** (as highlighted in *Figure 8**.28*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Before you begin** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Installation Type**, make sure that the **Role-based or feature-based
    installation** option is selected. Click the **Next >** button after.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Server Selection**, make sure that the **Select a server from the server
    pool** option is selected before clicking **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Server Roles**, toggle *on* (check) the **Active Directory Domain**
    **Services** checkbox:![](image/B19755_08_29.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.29 — Server Roles
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Find the checkbox highlighted in *Figure 8**.29*. Make sure you click the correct
    checkbox (that is, the checkbox corresponding to the **Active Directory Domain
    Services** option) since there are multiple options whose names start with “Active
    Directory”.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Checking the checkbox from the previous step should open the **Add Roles and
    Features Wizard** area (similar to what we have in *Figure 8**.30*):![](image/B19755_08_30.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.30 — Add Features
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Add Features** button (highlighted in *Figure 8**.30*) and then
    click **Next >** after (in the **Server** **Roles** tab).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Features** and **AD DS** tabs, click **Next >** (twice) to proceed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Confirmation** tab, click **Install**:![](image/B19755_08_31.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.31 — Confirm installation selections
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Close** button once the installation has finished. *Wasn’t that
    easy?* **At this point, we should have AD DS installed already!** Of course, we
    are not done yet as we will be working on other configuration steps in the succeeding
    parts of this section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This step may take 10 to 15 minutes to complete. Feel free to grab a cup of
    coffee or tea while waiting!
  prefs: []
  type: TYPE_NORMAL
- en: Part 2 of 12 – Promoting the VM instance to become the domain controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, it’s time to promote the machine (**ad-domain-controller**) so that it
    becomes the domain controller:'
  prefs: []
  type: TYPE_NORMAL
- en: Click the flag button (highlighted in *Figure 8**.32*) and then click **Promote
    this server to a** **domain controller**:![](image/B19755_08_32.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.32 — Promoting the machine to a domain controller
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*What does it mean to be a domain controller?* Once a server is promoted to
    a domain controller, it will be responsible for managing user authentication,
    authorization, and resource management within the network.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under **Deployment Configuration**, select **Add a** **new forest**:![](image/B19755_08_33.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.33 — Deployment Configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For the **Root domain name** value, specify **domain.local** (similar to what
    is shown in *Figure 8**.33*). Click **Next >** after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under **Domain Controller Options**, use **Restore1234!!!** for the password:![](image/B19755_08_34.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.34 — Deployment Controller Options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Make sure you specify **Restore1234!!!** for both the **Password** and **Confirm
    password** fields (similar to what is shown in *Figure 8**.34*). Leave everything
    else as-is before clicking **Next >**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **DNS Options** tab, click **Next** **>.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Additional Options** tab, verify that the auto-populated **The NetBIOS
    domain name** field value is **DOMAIN**:![](image/B19755_08_35.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.35 — Additional Options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Next >** button after (as highlighted in *Figure 8**.35*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Paths** tab, leave everything as-is and click the **Next >** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Review Options** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Prerequisites Check** tab, click the **Install** button (as highlighted
    in *Figure 8**.36*):![](image/B19755_08_36.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.36 — Prerequisites Check
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This step may take around 5 to 10 minutes to complete. This will automatically
    reboot the Windows VM instance (**ad-domain-controller**) and you will lose the
    RDP connection a few seconds after getting the **You’re about to be signed out**
    notification pop-up window. Wait for around 5 minutes before proceeding with the
    next set of steps.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Do not worry – we can connect to the first Windows VM instance (**ad-domain-controller**)
    via RDP again after a few minutes. This time, we should be able to sign in using
    the domain credentials (as we’ll see in the next set of steps)!
  prefs: []
  type: TYPE_NORMAL
- en: Part 3 of 12 – Setting up Active Directory Certificate Services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, we will be setting up **Active Directory Certificate Services** (**AD
    CS**):'
  prefs: []
  type: TYPE_NORMAL
- en: Connect to the first Windows VM instance (**ad-domain-controller**) via RDP
    again. Simply use **domain\admin_user** as the username and **Windows1234!!!**
    as the password:![](image/B19755_08_37.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.37 — Enter Your User Account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Continue** button when you see the **You are connecting to the RDP**
    **host...** popup.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You may need to wait for around 5 minutes before you can sign in and proceed
    to the next step.
  prefs: []
  type: TYPE_NORMAL
- en: Click **Add roles** **and features**:![](image/B19755_08_38.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.38 — Add roles and features
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can find the **Add roles and features** link under **Configure this local
    server** (as highlighted in *Figure 8**.38*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Before You Begin** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Installation Type** tab, make sure that the **Role-based or feature-based
    installation** option is selected before clicking the **Next >** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Server Selection** tab, leave everything as-is and then click **Next
    >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Server Roles** tab, locate the checkbox corresponding to **Active Directory**
    **Certificate Services**:![](image/B19755_08_39.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.39 — Active Directory Certificate Services
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select (and check) **Active Directory Certificate Services**, as highlighted
    in *Figure 8**.39*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: AD CS is a specific component of Active Directory that focuses on providing
    a **public key infrastructure** (**PKI**) for issuing and managing digital certificates.
    Similar to AD DS, AD CS plays a crucial role in enhancing security within a network
    environment by enabling encryption, authentication, and secure communication.
  prefs: []
  type: TYPE_NORMAL
- en: Checking the checkbox from the previous step should open the **Add Roles and
    Features Wizard** area. Click the **Add Features** button and then click **Next
    >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Features** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **AD CS** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **AD CS > Role Services** tab, ensure the **Certification Authority**
    checkbox is toggled *on* (checked). Click the **Next >** button after:![](image/B19755_08_40.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.40 — AD CS > Role Services
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Other than making sure that the **Certification Authority** checkbox is checked,
    we can leave everything else as-is.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Confirmation** tab, check the **Restart the destination server automatically
    if** **required** checkbox:![](image/B19755_08_41.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.41 — Confirm installation selections
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A pop-up window similar to what is shown in *Figure 8**.41* will appear. Select
    **Yes**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Install** button after. Once the installation is complete, which
    will be after around 5 minutes (**Configuration required. Installation succeeded
    on ad-domain-contr.domain.local**), click **Close**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '**At this point, we should have AD CS installed**. Similar to AD DS, we will
    have to work on a few more steps to configure what we just installed.'
  prefs: []
  type: TYPE_NORMAL
- en: Part 4 of 12 – Configuring Active Directory Certificate Services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s configure AD CS:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the flag (with a warning sign) and select **Configure Active Directory
    Certificate Services on the destination server** (as highlighted in *Figure 8**.42*):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](image/B19755_08_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8.42 — Configure Active Directory Certificate Services on the destination
    server
  prefs: []
  type: TYPE_NORMAL
- en: In the **Credentials** tab, click **Next >**:![](image/B19755_08_43.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.43 — The Credentials tab
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Since we won’t be modifying the currently set configuration in this tab, we
    can leave everything else as-is.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Role Services** tab, check **Certification Authority**. Click the **Next
    >** button after:![](image/B19755_08_44.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.44 — Select Role Services to configure
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Other than checking the first checkbox (as highlighted in *Figure 8**.44*),
    we can leave everything else as-is.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Setup Type** tab, ensure **Enterprise CA** is selected. Click the **Next
    >** button after.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **CA Type** tab, ensure **Root CA** is selected and then click **Next
    >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Private Key** tab, ensure **Create a new private key** is selected
    and then click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Cryptography** tab, leave everything else as-is and then click **Next
    >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **CA Name** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Validity Period** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Certificate Locations** tab, click **Next >**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Confirmation** tab, click **Configure**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Results** tab, click **Close**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 5 of 12 – Updating the trusted hosts configuration and enabling PowerShell
    Remoting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have successfully configured AD CS, let’s quickly update the trusted
    hosts configuration and enable PowerShell Remoting:'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start by clicking the Windows icon (located in the lower left corner of
    the screen):![](image/B19755_08_45.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.45 — Opening Windows PowerShell
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Locate and select **Windows PowerShell**, as highlighted in *Figure 8**.45*.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Run **Enable-PsRemoting**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, we are enabling **PowerShell Remoting**, a feature that allows remote
    access to execute PowerShell commands and scripts on a computer.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let’s run the following to verify that port **5985** is listening:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should return the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the trusted hosts configuration by running the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: When asked if you want to modify the **TrustedHosts** list for the WinRM client,
    enter **Y**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Verify that the previous command worked by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This should confirm that the configuration value has been successfully updated
    to *****.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Run the following command to modify the firewall rule to allow incoming WinRM
    traffic:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have updated the trusted hosts configuration to allow connections
    from any host (*****). In addition to this, we have modified the firewall rule
    to allow incoming WinRM (**port** **5985**) traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Part 6 of 12 – Setting up the flag inside the domain controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Continuing where we left off in the previous part, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s navigate to **C:\** by running the following commands in the terminal
    (one line at a time):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a **flag.txt** file inside **C:\**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Restart the VM instance (**ad-domain-controller**) using **Restart-Computer**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Wait for 3 to 5 minutes for the VM instance (**ad-domain-controller**) to complete
    the restart operation. Feel free to grab a cup of coffee or tea while waiting!
  prefs: []
  type: TYPE_NORMAL
- en: Part 7 of 12 – Creating the John Doe user
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect to the first VM instance (**ad-domain-controller**) via RDP again. Simply
    use **domain\admin_user** as the username and **Windows1234!!!** as the password:![](image/B19755_08_37.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.46 — Enter Your User Account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Continue** button when you see the **You are connecting to the RDP**
    **host...** popup.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under **Server Manager** > **Dashboard**, click **Tools** (the top right-hand
    corner of the window) and then select **Active Directory Users and Computers**
    from the list of options available:![](image/B19755_08_47.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.47 — Active Directory Users and Computers
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Make sure you select the correct option from the multiple options available
    (similar to what is shown in *Figure 8**.47*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In **Active Directory Users and Computers**, expand **domain.local** (in the
    tree) and then right-click on **Users**:![](image/B19755_08_48.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.48 — Users > New > User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **New** > **User** from the context menu (similar to what is shown in
    *Figure 8**.48*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Using the **New Object - User** window, let’s create the **John Doe** (**johndoe**)
    user:![](image/B19755_08_49.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.49 — Creating a new user (John Doe)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here, we must specify the following field values: **First name** – **John**,
    **Last name** – **Doe**, **Full name** – **John Doe**, and **User logon name**
    – **johndoe**. Click the **Next >** button after.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let’s configure the password settings for the **John Doe** (**johndoe**)
    user. Set **Passw0rd** as the password (for both the **Password** and **Confirm**
    **password** fields):![](image/B19755_08_50.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.50 — Setting a password
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Uncheck **User must change password at next logon** and then check **Password
    never expires**, similar to what is shown in *Figure 8**.50*. After that, click
    the **Next >** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Here, we have specified **Passw0rd** as the password with a capital **P** and
    a zero (**0**) instead of a letter, **o**. Note that these types of passwords
    are relatively common due to their simplicity and the false sense of security
    they provide. Unfortunately, using minor variations of common words or phrases,
    such as replacing letters with numbers or using easily guessable patterns such
    as **P@ssw0rd** (with **@** instead of **a**), does not significantly enhance
    security.
  prefs: []
  type: TYPE_NORMAL
- en: Click **Finish** after.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we should have the **John Doe** (**johndoe**) user created. As
    you can see, it’s relatively straightforward to create new users since we have
    a user interface to assist us during the creation process.
  prefs: []
  type: TYPE_NORMAL
- en: Part 8 of 12 – Creating the Jane Doe user
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s create another user. Right-click on **Users**:![](image/B19755_08_51.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.51 — New > User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **New** > **User** from the list of options available in the context
    menu.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This time, we will be creating the **Jane Doe** (**janedoe**) user:![](image/B19755_08_52.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.52 — Creating Jane Doe
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here, we must specify the following field values: **First name** – **Jane**,
    **Last name** – **Doe**, **Full name** – **Jane Doe**, and **User logon name**
    – **janedoe**. Click the **Next >** button after.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let’s configure the password settings for the **Jane Doe** (**janedoe**)
    user. Set **Passw0rd** as the password (for both the **Password** and **Confirm**
    **password** fields):![](image/B19755_08_53.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.53 — Configuring the password settings
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Let’s also uncheck **User must change password at next logon**. Check **User
    cannot change password**, **Password never expires**, and **Account is disabled**
    (similar to what we have in *Figure 8**.53*). Click the **Next >** button after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Finish**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we should have the **Jane Doe** (**janedoe**) user created. When
    building penetration testing lab environments, we must have “dummy” resources
    to make the lab setup mimic real-world environments. That said, we have the option
    to create as many user entities as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Part 9 of 12 – Creating the Service Account user
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s create the **Service Account** user (with administrator-level permissions):'
  prefs: []
  type: TYPE_NORMAL
- en: Click **Users** (from the tree) and then locate **admin_user** from the list
    of users:![](image/B19755_08_54.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.54 — Copying admin_user
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Right-click on **admin_user** and then select **Copy...** (similar to what is
    shown in *Figure 8**.54*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Copy Object - User** window, specify the following field values to
    create the **Service** **Account** user:![](image/B19755_08_55.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.55 — Creating a Service Account user
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here, we must specify the following field values: **First name** – **Service**,
    **Last name** – **Account**, **Full name** – **Service Account**, and **User logon
    name** – **service_account**. Click the **Next >** button after.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let’s configure the password settings for the **Service Account** (**service_account**)
    user. Set **Passw0rd** as the password (for both the **Password** and **Confirm**
    **password** fields):![](image/B19755_08_56.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.56 — Specifying the password for the Service Account user
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Let’s also make sure that **User must change password at next logon**, **User
    cannot change password**, **Password never expires**, and **Account is disabled**
    are all unchecked (similar to what we have in *Figure 8**.56*). Click the **Next
    >** button after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Finish**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: User accounts in Active Directory are meant for individual human users. These
    accounts allow them to access resources and perform tasks within the network.
    Service accounts, on the other hand, are used by applications and services to
    interact with resources without the need to rely on user credentials.
  prefs: []
  type: TYPE_NORMAL
- en: Part 10 of 12 – Setting up the SPN for the service account
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Wait – there’s more! We’ll now configure the **Service Principal Name** (**SPN**)
    for the service account we created in the previous step. SPNs are identifiers
    that are used in Active Directory to associate services with service accounts
    and enable authentication for secure communication. By using SPNs to map a service
    instance to a service sign-in account, client applications gain the ability to
    request service authentication for that account, even if the client itself doesn’t
    possess the account name:'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Later, in the *Simulating penetration testing in the lab environment* section
    of this chapter, we’ll see how the (mis)configurations involving the SPNs of service
    accounts allow an attacker to abuse the authentication protocol. For more information
    about SPNs, feel free to check out [https://learn.microsoft.com/en-us/windows/win32/ad/service-principal-names](https://learn.microsoft.com/en-us/windows/win32/ad/service-principal-names).
  prefs: []
  type: TYPE_NORMAL
- en: When you are ready, open a **Windows** **PowerShell** window:![](image/B19755_08_57.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.57 — Opening Windows PowerShell
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will open a PowerShell window where we will set up the SPN for the service
    account (**service_account**) in the next set of steps.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let’s get the hostname of the domain controller:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This should return **ad-domain-contr**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Add the specified SPN to **domain\service_account**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to validate this using **setspn -T domain.local -****Q */***.
  prefs: []
  type: TYPE_NORMAL
- en: Close the PowerShell window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 11 of 12 – Adding the Service Account user to the Remote Management Users
    group
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate back to the **Active Directory Users and Computers** window and locate
    the **Service Account** user inside **Users**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click **Service Account** to open **Service Account Properties**. Go
    to the **Member Of** tab (similar to what is shown in *Figure 8**.58*). Click
    the **Add** button after:![](image/B19755_08_58.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.58 — Service Account Properties
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, you can see that the **Service Account** (**service_account**) user is
    a member of various groups, including the **Administrators**, **Domain Admins**,
    **Domain Users**, and **Enterprise Admins** groups (and more). **Yikes!**
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Type **Remote Management Users** and then click the **Check** **Names** button:![](image/B19755_08_59.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.59 — Remote Management Users
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **OK** button after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Apply** and then click the **OK** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 12 of 12 – Configuring the workstation machine
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We’re almost done! In this last part, we’ll configure the workstation machine
    and have it join the domain we created in the previous set of steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s access the second Windows VM instance (**ad-workstation-machine**) via
    RDP.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type **settings** in the search bar (located at the lower left portion of the
    screen) and then select **Settings** from the list of search results. Locate and
    select **Network & Internet** from the list of options available under **Windows
    Settings**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the sidebar, click **Ethernet**:![](image/B19755_08_60.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.60 — Ethernet
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Change adapter options** (under **Related settings**).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Right-click on **Ethernet** and then choose **Properties**:![](image/B19755_08_61.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.61 — Opening the Ethernet Properties window
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will open the **Ethernet Properties** window. In this window, select **Internet
    Protocol Version 4 (TCP/IPv4)** and then click **Properties**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Use the following DNS server addresses:** (similar to what is shown
    in *Figure 8**.62*):![](image/B19755_08_62.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Figure 8.62 — Use the following DNS server addresses:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Specify **10.0.1.4** for the **Preferred DNS server** value. Note that we are
    using the private IP address of the domain controller as the DNS server address.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you use the actual private IP address value of your domain controller
    instance (**ad-domain-controller**) when setting the **Preferred DNS** **server**
    value.
  prefs: []
  type: TYPE_NORMAL
- en: Click the **OK** button and then click **Close**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Note that the RDP Connection to the workstation (**ad-workstation-machine**)
    VM instance will be disconnected (without any warning or notification).
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the VM instance details page (the **Overview** blade) of the **ad-workstation-machine**
    instance (in the Azure portal). Locate and click the **Restart** button (highlighted
    in *Figure 8**.63*):![](image/B19755_08_63.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.63 — Restarting the workstation VM instance
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Yes** button when you’re asked to restart **ad-workstation-machine**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Wait for 10 to 15 minutes for the VM instance to restart. Feel free to grab
    a cup of coffee or tea while waiting! You should see a notification message once
    the VM has been successfully restarted. Wait for another 5 minutes before proceeding
    to the next set of steps.
  prefs: []
  type: TYPE_NORMAL
- en: Connect to the workstation VM instance (**ad-workstation-machine**) again with
    RDP:![](image/B19755_08_21.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.64 — Enter Your User Account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Simply use **workstation_user** as the username and **Workstation1234!!!** as
    the password.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Type **Access work or school** in the search box:![](image/B19755_08_65.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.65 — Access work or school
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select **Access work or school** from the search results (as highlighted in
    *Figure 8**.65*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Under **Access work or school**, locate and click the **Connect** button. After
    that, click **Join this device to a local Active Directory domain** under **Alternate
    actions**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Specify **domain.local** under **Domain name** on the **Join a domain** screen.
    Click the **Next** button after:![](image/B19755_08_66.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.66 — Join a domain
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use **admin_user** as the username and **Windows1234!!!** as the password when
    you’re prompted to enter a domain account.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Add an account** window, select **Skip**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Restart now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The RDP connection to the workstation VM instance (**ad-workstation-machine**)
    will be disconnected.
  prefs: []
  type: TYPE_NORMAL
- en: Back in the domain controller (**ad-domain-controller**) RDP connection, verify
    if the workstation VM instance shows up under **Computers**:![](image/B19755_08_67.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.67 — The workstation VM instance (ad-workstation-machine) now shows
    up under Computers
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that the workstation VM instance (**ad-workstation-machine**)
    is now showing up under **Computers**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Close the RDP connection for **Domain Controller VM** **instance** (**ad-domain-controller**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect to the workstation VM instance (**ad-workstation-machine**) again. This
    time, use **DOMAIN\admin_user** for the username and **Windows1234!!!** for the
    password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open **Computer Management**:![](image/B19755_08_68.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.68 — Opening Computer Management
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To open **Computer Management**, simply type **Computer Management** in the
    search box and then select **Computer Management** from the list of results (as
    highlighted in *Figure 8**.68*).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Expand **Local Users and Groups** (in the tree):![](image/B19755_08_69.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.69 — Local Users and Groups
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Groups**, as highlighted in *Figure 8**.69*. Double-click on **Administrators**
    after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Locate and click the **Add** button in the **Administrators** **Properties**
    window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Input **John Doe** in the text area highlighted in *Figure 8**.70*:![](image/B19755_08_70.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.70 — Adding John Doe to the Administrators group
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Check Names**. Click **OK** after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Apply** and then click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Close the RDP connection for the workstation VM instance (**ad-workstation-machine**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**At this point, our lab environment setup is complete!** With everything ready,
    let’s proceed to the next section.'
  prefs: []
  type: TYPE_NORMAL
- en: Simulating penetration testing in the lab environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Given that our lab environment in Azure has been set up successfully, we can
    now focus on performing the penetration testing simulation to verify that everything
    has been configured correctly. Similar to the previous chapters, we will work
    with a simplified penetration process since our primary goal is to assess if the
    penetration testing lab environment has been set up and (mis)configured correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Our simulation will start with a port scan to check the open ports of one of
    the target Windows VM instances (**ad-domain-controller**). We will then use **ldapsearch**
    to retrieve the domain name (**domain.local**) that’s used in our Active Directory
    setup. Next, we will use **Kerbrute** to enumerate valid usernames along with
    brute-forcing the password of one of the enumerated user accounts (**johndoe**).
    Using the domain (**domain.local**) along with the credentials of the **johndoe**
    account, we will use **Impacket** to obtain the **service_account** account, along
    with its hash value. We will then crack this hash value and retrieve the password
    using **John the Ripper**. With the **service_acccount** account credentials,
    we will use **evil-winrm** to gain remote access to the target machine (**ad-domain-controller**).
    Finally, we will retrieve the flag stored inside the target machine. *Looks like
    we’ll be using several tools in* *this section!*
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: It is unethical and illegal to attack cloud resources owned by another user
    or company. Before proceeding, make sure you read the *Examining the considerations
    when building penetration testing lab environments in the cloud* section of *[Chapter
    1](B19755_01.xhtml)*, *Getting Started with Penetration Testing Labs in the Cloud*,
    since we will be simulating the attack process to validate if misconfigurations
    and vulnerabilities present in the applications and services running in the target
    VM instance are exploitable.
  prefs: []
  type: TYPE_NORMAL
- en: 'With these aspects in mind, we can now start the penetration testing simulation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Kali Linux desktop/GUI environment (in the browser), run the following
    commands in the terminal to check and scan the open ports on the Active Directory
    domain controller instance (**ad-domain-controller**). Make sure you set the **IP**
    variable value with the private IP address of the domain controller before running
    this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Here, we used the **--top-ports** option to specify the number of top ports
    that Nmap will scan. This speeds up the scanning process by focusing on the most
    commonly used ports. In addition to this, we used the **-Pn** option to disable
    host discovery and assume that the host is online.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Running this command should give us the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_71.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.71 — Using nmap to scan the ports
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In *Figure 8**.71*, we can see that more ports are open compared to when we
    last used Nmap to scan the ports of the domain controller VM instance (**ad-domain-controller**).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This time, let’s try checking all the ports by running the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Similar to the previous command we ran, we used the **-Pn** option to disable
    host discovery. Now, we have **-p-**, indicating that we want to scan all 65,535
    ports. In addition to this, we also used **-v** to increase the verbosity level
    of the output. After a few minutes, we should get the following result:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_72.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.72 — Using nmap to scan all the ports
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In *Figure 8**.72*, we can see that port **5985** for the WinRM service is open.
    This means that we may be able to use tools such as **evil-winrm** to give us
    remote access with the right set of credentials!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'If port **5985** is not open (and potentially in a **filtered** state), make
    sure you run the following command in the **Administrator: Windows PowerShell**
    window of the first Windows VM instance (**ad-domain-controller**): **Set-NetFirewallRule
    -Name "WINRM-HTTP-In-TCP-PUBLIC" -RemoteAddress Any**. Note that additional troubleshooting
    steps might be needed if this does not fix the connectivity issues.'
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s perform an LDAP search operation to retrieve the naming context(s)
    using **ldapsearch**. *What do we mean by retrieving the naming context?* This
    essentially means that we are obtaining information about the structure and organization
    of the LDAP directory (such as the domains or directory partitions that exist
    within it).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When you are ready, run the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following results:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_73.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.73 — Using ldapsearch
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Running the preceding command allowed us to retrieve the domain name (**domain.local**)
    that we used in the Active Directory setup of our lab environment.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Before installing Kerbrute, we need to install Golang:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Feel free to verify that we were able to install Golang successfully by running
    **which go**. Running **which go** should return **/usr/bin/go**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This step may take around 5 minutes to complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'Set up **Kerbrute** in your Kali Linux attacker machine using the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are wondering what Kerbrute is, it is a tool that’s used to assess Kerberos
    security by brute-forcing and enumerating valid Active Directory accounts. It
    is similar to the **VNC login auxiliary scanner** Metasploit module we used in
    *[Chapter 5](B19755_05.xhtml)*, *Setting Up Isolated Penetration Testing Lab Environments
    on Azure*. This time, however, we have a tool designed specifically for the Kerberos
    authentication mechanism. You can find the GitHub repository of Kerbrute here:
    [https://github.com/ropnop/kerbrute](https://github.com/ropnop/kerbrute).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s run the following commands (one line at a time) to check if **kerbrute_linux_386**
    and **kerbrute_linux_amd64** are inside the **dist** directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, let’s use the **touch** command to create two empty files – **usernames.txt**
    and **passwords.txt**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Run the following command to open the empty **usernames.txt** file using Vim:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Press **i** to switch to **insert mode** so that we can edit the file. Type
    or paste the following usernames (one username per line) into our **usernames.txt**
    file:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Press the *Esc* key to switch to **normal mode**. Type **:wq!**. Press *Enter*
    after. This will save the changes that were made to **usernames.txt** and then
    exit Vim as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: In case you have forgotten already, **insert mode** in Vim allows us to type
    and make changes as we would in a regular text editor. In this mode, we can freely
    add, delete, or modify characters without affecting the surrounding text. On the
    other hand, **normal mode** allows us to navigate through the text, execute commands,
    and perform various operations on the file. In this mode, specific keystrokes
    (such as **:wq!**) can be used to move the cursor, search for text, copy and paste,
    and perform editing actions such as deleting, replacing, and undoing changes.
    For instance, **w** represents the *write* command (which saves changes to the
    file), and **q** represents the *quit* command (which exits the editor). What’s
    the exclamation point (**!**) for? The exclamation point, **!**, is simply an
    optional modifier that forces the command to execute, even if there are unsaved
    changes along with other warnings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, let’s run the following command to open the empty **passwords.txt**
    file using Vim:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, press **i** to switch to **insert mode** so that we can edit the file.
    Type or paste the following passwords (one password per line) into our **passwords.txt**
    file:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Press the *Esc* key to switch to **normal mode**. Type **:wq!**. Press *Enter*
    after. This will save the changes we’ve made to **passwords.txt** and then exit
    Vim as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: We are intentionally using short lists of usernames and passwords to demonstrate
    how to use Kerbrute. In real life, a much wider range of passwords needs to be
    prepared to maximize the chances of getting unauthorized access during a penetration
    testing activity or simulation.
  prefs: []
  type: TYPE_NORMAL
- en: 'With everything ready, let’s use Kerbrute to enumerate valid Active Directory
    users using the username list file (**usernames.txt**) we prepared earlier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_74.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.74 — Using Kerbrute for enumerating valid Active Directory usernames
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here, we can see that two valid usernames were found using Kerbrute: **johndoe@domain**
    and **admin_user@domain**.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, let’s run the following command to brute force the **johndoe** password
    using the password list file (**passwords.txt**) we prepared earlier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_75.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.75 — Using Kerbrute to brute force the password of the johndoe user
    account
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that the password of the **johndoe** user account is **Passw0rd**!
    *What can we do with this password?* We’ll look at this in the next set of steps!
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let’s run the following command to request the SPN for the **DOMAIN.local/johndoe**
    user account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Specify **Passw0rd** when prompted for the password. This should yield the
    following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_76.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.76 — KRB_TGS ticket
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see the **service_account** account and the password hash value
    (that is, the **KRB_TGS ticket** of the service account) under **CCache file is
    not found.** **Skipping ...**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: We won’t dive deep into how the authentication protocol works in this book.
    Feel free to check out [https://learn.microsoft.com/en-us/windows/win32/secauthn/microsoft-kerberos](https://learn.microsoft.com/en-us/windows/win32/secauthn/microsoft-kerberos)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: Highlight and copy the hash value, similar to what is shown in *Figure 8**.77*:![](image/B19755_08_77.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Figure 8.77 — Copying the hash value
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we right-click on the highlighted hash value and then select **Copy Selection**
    from the list of options available.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, let’s use the **touch** command to create an empty *hash* file. Let’s
    open this file using Vim as well:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Next, press *i* to switch to insert mode so that we can edit the file. Paste
    the copied string value by right-clicking and choose **Paste Selection** from
    the list of options available. Press the *Esc* key to switch to normal mode. Type
    **:wq!**. Press *Enter* after.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to verify if the hash value has been copied to the file correctly
    by running **cat hash**.
  prefs: []
  type: TYPE_NORMAL
- en: With the *hash* file ready, we can now use **John the Ripper** (a widely used
    password-cracking tool for detecting and uncovering weak passwords) to crack the
    TGS hash and retrieve the cracked password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When you are ready, simply run the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield logs similar to what we have in *Figure 8**.78*:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_78.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.78 — Using John the Ripper to crack the TGS hash
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Looks like we were able to successfully crack the password!** Feel free to
    run **john --format=krb5tgs hash --show** to show the cracked password (**Passw0rd**).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Behind the scenes, John the Ripper employs multiple techniques (such as dictionary
    attacks and brute-force attacks) to iteratively guess potential passwords and
    hash them to compare them with the target hash value.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know the password, let’s use **evil-winrm** to gain remote access
    to the target machine. Here, we’re using a tool for establishing a remote connection
    to the Active Directory domain controller instance (**ad-domain-controller**)
    using the cracked credentials.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When you are ready, run the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Running this command should succeed and give us access similar to what is shown
    in *Figure 8**.79*:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_79.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.79 — Using evil-winrm to gain remote access
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Looks like we were able to successfully gain shell access!** Now that we
    have shell access, we can run commands to locate the flag (which is what we’ll
    do in the next set of steps!)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Make sure that port **5985** of the first Windows VM instance (**ad-domain-controller**)
    is **open** in case you encounter issues running the **evil-winrm** command. Feel
    free to run **nmap -p5985 -Pn 10.0.1.4** to verify that the **STATE** value is
    **open** and not **filtered**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to the **C:\** directory and then list the files inside it using the
    **dir** cmdlet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should yield the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![](image/B19755_08_80.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure 8.80 — Results after running dir cmdlet
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we can see that our **flag.txt** file is inside **C:\**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Finally, let’s print the flag value inside **flag.txt** using the **cat** (**Get-Content**)
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This should yield **FLAG** as the value! **Congratulations on successfully retrieving**
    **the flag!**
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Right now, you are probably excited to try out other exploits and techniques
    in our lab environment setup. Feel free to modify the configuration of the target
    VM instances (**ad-domain-controller** and **ad-workstation-machine**) and then
    test if certain attacks or techniques work.
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning up
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cleaning up the cloud resources we created or deployed is a crucial step when
    working with vulnerable cloud applications and environments. If we don’t clean
    up and delete the resources we created right away, we might end up paying for
    unused cloud resources. At a *minimum*, we will be paying for the time the following
    resources are running:'
  prefs: []
  type: TYPE_NORMAL
- en: 1 x **Standard_DS1_v2** Azure VM instance for the attacker machine
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2 x **Standard_B2ms** Azure VM instances for the target machines (**ad-domain-controller**
    and **ad-workstation-machine**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Please be aware that there are other costs we have to take into account as well
    – including data transfer fees, storage costs for persistent data used by the
    instances, potential charges for other Azure services utilized in the account,
    along with any applicable taxes or fees associated to the usage of Azure resources.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'Since the overall cost when running these resources depends on several parameters,
    it is best to refer to the pricing documentation page provided by the cloud platform:
    [https://azure.microsoft.com/en-us/pricing/details/virtual-machines/windows/](https://azure.microsoft.com/en-us/pricing/details/virtual-machines/windows/).
    You can also utilize the **Azure Pricing Calculator** to estimate the cost of
    deploying resources on Azure. You can access the Azure Pricing Calculator at [https://azure.microsoft.com/en-us/pricing/calculator/](https://azure.microsoft.com/en-us/pricing/calculator/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'That said, let’s proceed with deleting the resources we created in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Close all open RDP connections.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Manually turn off and delete the Windows VM instances (**ad-domain-controller**
    and **ad-workstation-machine**), along with their associated resources that were
    created in this chapter, via the Azure portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Cloud Shell terminal, navigate to the **~/ch8_environment** directory
    and then use **terraform destroy** to clean up the resources we created earlier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Feel free to run the **terraform destroy** command a few times in case some
    resources fail to delete (or take a bit of time to delete). If all else fails,
    you may delete resources manually using the user interface of the Azure portal.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This step may take 10 to 15 minutes to complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify that the resources have been destroyed successfully using the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This should return an empty response since all the resources should have been
    deleted successfully.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to perform a full audit of your Microsoft Azure account. This will
    help ensure that all resources have been properly deleted, minimize the risk of
    unintended costs, and address any potential security concerns.
  prefs: []
  type: TYPE_NORMAL
- en: That’s pretty much it! At this point, we should have a good idea of how to prepare
    a vulnerable Active Directory lab environment on Microsoft Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we were able to successfully set up an Active Directory Lab
    inside an isolated network environment in Microsoft Azure. We started by using
    Terraform to set up the isolated network environment so that we could secure the
    lab environment resources from external attacks. Inside this isolated network
    environment, we then launched two Windows VM instances. After that, we prepared
    and configured an Active Directory setup (using the VM instances we launched)
    with one domain controller and one workstation machine. After completing the lab
    environment, we performed a penetration testing simulation to verify if our lab
    had been (mis)configured correctly.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will discuss the best practices and strategies when
    building and automating penetration testing labs in the cloud. We will tackle
    specific techniques that will help us build on top of what we’ve learned in the
    chapters of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For additional information on the topics covered in this chapter, you may find
    the following resources helpful:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Active Directory Domain Services* *Overview* ([https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/get-started/virtual-dc/active-directory-domain-services-overview](https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/get-started/virtual-dc/active-directory-domain-services-overview))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*What is Active Directory Certificate* *Services?* ([https://learn.microsoft.com/en-us/windows-server/identity/ad-cs/active-directory-certificate-services-overview](https://learn.microsoft.com/en-us/windows-server/identity/ad-cs/active-directory-certificate-services-overview))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft* *Kerberos* ([https://learn.microsoft.com/en-us/windows/win32/secauthn/microsoft-kerberos](https://learn.microsoft.com/en-us/windows/win32/secauthn/microsoft-kerberos))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Using Windows Remote* *Management* ([https://learn.microsoft.com/en-us/windows/win32/winrm/using-windows-remote-management](https://learn.microsoft.com/en-us/windows/win32/winrm/using-windows-remote-management))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
