- en: Chapter 2. Planning Your Lab Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with any building, software, device, or other type of technical and non-technical
    projects, you need to start with a proper planning before proceeding to build
    a lab. This order is necessary to get the most benefits from your lab environment
    and at the same time to stay safe from any kinds of unwanted attacks. Preliminary
    planning also helps to avoid an unnecessary repetition of some installation and
    configuration tasks that can suddenly arise during the implementation phase if
    you realize that something is missing or some significant changes should be done
    in an almost finished lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will guide you through the whole planning phase from understanding
    what do you need a lab for to choosing the lab components and topology based on
    your own requirements. To reach this goal, we will cover the following topics
    in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding what tasks your lab should fulfill
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning the network topology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choosing appropriate components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning lab security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding what tasks your lab should fulfill
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Under this topic, we are going to help you to determine your needs and what
    you want to achieve with your lab. After understanding your needs, you will be
    able to set requirements for your lab—stating what should it contain and how should
    its components interact. This step allows you to prepare the basis of the next
    step—deciding which lab components do you need to include in a lab and which roles
    to assign them.
  prefs: []
  type: TYPE_NORMAL
- en: Objectives of a lab
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s start from listing the typical purposes for having a lab:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Learn practical penetration testing**: It is essential for a beginner to
    have an environment where they can practice penetration testing techniques they
    learn and consolidate newly learned information. During this education, you most
    likely will want to have a model of a real-world corporate network and you can
    emulate it in a lab.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improve and maintain penetration testing skills**: Experienced professionals
    also need a lab to periodically try some new attack techniques, research vulnerabilities,
    or refresh their knowledge. Penetration testing knowledge and hacking skills tend
    to be forgotten or go extinct without regular practical exercises and this is
    equally true for pentesters and all other professions and specialties.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate penetration testing tools and frameworks**: You can use a lab to
    quickly deploy new penetration testing frameworks and attack suites, test their
    capabilities and convenience, their effectiveness, and result quality. It can
    be especially helpful when dealing with one or more commercial tools or frameworks
    and you need to understand is it is worth paying for, do you get what you expect
    from that tool, and compare several tools to decide which one you are going to
    buy and use. Even black-hat hackers are interested in testing various security
    solutions to tweak their attack tools, develop or modify malware which is not
    supposed to be detected or beaten by security solutions, or perform a research
    for the purpose of identifying and abusing new vulnerabilities in security solutions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate security tools and solutions**: Normally, almost all penetration
    testing projects include not only hacking activities, but also a phase of developing
    security recommendations based on results of a test. To be able to provide deep
    and qualitative recommendations, a security professional has to be familiar with
    the recommended solutions and one of the opportunities to do so is to try security
    solutions himself.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demonstrate attacks and security risks**: Sometimes, a customer or a company
    management (who is also a customer for a security specialist, but an internal
    one) wants to better understand risks associated with certain vulnerabilities
    to be able to make a correct risk-management decision. Attack demonstrations can
    also be very helpful in an education process when teaching other people while
    giving security testing classes. Various attack techniques can be demonstrated
    in real time or can be recorded in a lab environment and then shown in a class.
    As it was already mentioned earlier, seeing in an example how does an attack works
    increases the education quality significantly. A lot of companies worldwide maintain
    awareness programs to educate their employees in security to reduce the risks
    associated with the so-called "human factor." A lot of awareness programs face
    the same problem: it is hard to realize the security risks for non-security professionals,
    thus it is hard for them to remember and follow security rules and recommendations.
    Using a lab in an awareness program to demonstrate to employees the risks helps
    them to better understand and remember them, because they already understand what
    and how can happen. Another example is when a security specialist needs to demonstrate
    attacks and associated risks for marketing purposes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although there are some other very specific reasons why one needs to have a
    lab, most of the cases usually fit into the purposes listed above and can be categorized
    this way.
  prefs: []
  type: TYPE_NORMAL
- en: Lab tasks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now it is time for you to determine what you want to improve, test, research,
    or demonstrate with your lab; which areas of security testing; and which skills
    are your main points of interest. To simplify our list, we combine them by areas.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Sometimes, it could seem odd why we refer to IT-infrastructure hacking in a
    book about a wireless lab, but we would like to clarify this point: when we talk
    about corporate networks (where penetration testing makes sense), we should keep
    in mind, that wireless networks have their own underlying network infrastructure,
    and they are usually connected to other networks with important corporate IT resources.
    This is what we want to emulate in a lab—having WLANs protected in a different
    way for practicing wireless penetration testing and at the same time providing
    wireless access to a model of a real-world network for other types of hacking.'
  prefs: []
  type: TYPE_NORMAL
- en: Network reconnaissance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To perform a successful penetration test, it is essential to understand a target
    of an attack and a network reconnaissance is the basis for that purpose. As probably
    the most important stage of the penetration testing, network reconnaissance is
    basically gathering and processing all the available information about an attack
    target, its features, and capabilities. Network reconnaissance can be:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Active**: This involves interactions with a target, by sending a specially
    crafted packet and the subsequent analysis of the target reaction to external
    impact'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passive**: This does not require any interaction, and it is performed by
    listening to the radio and wired network traffic'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The goals of an activity could be:'
  prefs: []
  type: TYPE_NORMAL
- en: To collect sensitive data, which is being transmitted unencrypted, for example,
    the content of network frames
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To collect information about a target network topology and network protocols
    in use (including obsolete and dangerous protocols detection)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To obtain versions of network services, system software, and applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To identify vendors and models of hardware in use
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The final part of a network reconnaissance is a comprehensive analysis of the
    gathered information suggesting potential vulnerabilities and misconfigurations
    of a target environment that can be exploited in order to develop an attack plan.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, the more information you collect, the more chances of success you will
    have.
  prefs: []
  type: TYPE_NORMAL
- en: Web application hacking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Probably, the most popular and one of the most demanded topics nowadays as more
    and more desktop software and old-fashioned static websites migrate into web applications.
    That is why web application hacking became a must-have skill for professional
    penetration testers.
  prefs: []
  type: TYPE_NORMAL
- en: The list of web application attacks includes but is not limited to cross-site
    scripting, injection attacks, cross-site request forgery, application logic attacks,
    fuzzing parameters, authentication bypass, session management attacks, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to have a look at the currently most critical web security vulnerabilities,
    you can refer to the OWASP Top 10 list at [https://www.owasp.org/index.php/Top_10_2013-Top_10](https://www.owasp.org/index.php/Top_10_2013-Top_10).
  prefs: []
  type: TYPE_NORMAL
- en: Hacking and researching network services
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Network services (SMB, FTP, and SSH) along with their vulnerabilities and misconfigurations
    usually serve as gates to operating systems and not only for legitimate users.
    They also have their own specifics and an understanding of their operation can
    lead an attacker from anonymous access to control over a whole system. Improperly
    configured integrated OS mechanisms and permissions can also serve that purpose.
  prefs: []
  type: TYPE_NORMAL
- en: With network services, you can practice overflow vulnerabilities exploitation,
    attacking weak cryptography and weak permissions, privilege escalation, authentication
    bypass, credentials guessing, network reconnaissance, and other skills.
  prefs: []
  type: TYPE_NORMAL
- en: AD hacking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Microsoft Active Directory is the key to owning a whole enterprise network and
    as with any technology it also has its own specifics and flaws. AD is usually
    very complicated to integrate and maintain in complex enterprise networks what
    leads to numerous misconfigurations, so it is always a juicy target for penetration
    testers and hackers. But some of its flaws and misconfigurations are not easy
    to abuse without detailed understanding of how it works and can be attacked.
  prefs: []
  type: TYPE_NORMAL
- en: This category implies network reconnaissance techniques, abusing group policies,
    stealing credentials, pass-the-hash and hash cracking attacks, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: DBMS hacking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: DBMS surely overlaps with web application and network service hacking in some
    aspects, but it's a huge separate topic which includes much more than just interacting
    with web applications and listener security. If you want to go deeper into database
    hacking, there are plenty of things to research and practice.
  prefs: []
  type: TYPE_NORMAL
- en: DBMS hacking includes classic vulnerability exploitations, authentication bypass,
    and so on, but it goes deeper into DB specifics taking into account various levels
    of permissions, various roles, and other DBMS specifics.
  prefs: []
  type: TYPE_NORMAL
- en: Network layer attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Network layer attacks are definitely a less popular topic, because network technologies
    develop less rapidly than web topics and there is an opinion that almost everything
    was already researched and hacked in this topic. But it is a must for every penetration
    tester and most of the security specialists.
  prefs: []
  type: TYPE_NORMAL
- en: Attacks of this group include bypassing firewalls and access control lists,
    breaking out of VLANs, man-in-the-middle attacks, DoS-attacks, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Bypassing firewalls and breaking out of VLANs have slightly different underlying
    attack techniques, but the goal is the same—to bypass existing access control
    rules and measures in order to reach normally unreachable network elements (network
    services, subnets, network segments, and so on) and attack or misuse them.
  prefs: []
  type: TYPE_NORMAL
- en: Wi-Fi penetration testing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As we are building a lab accessible via Wi-Fi, it would be wise to get additional
    benefits from it by practicing Wi-Fi penetration testing among the other tasks,
    especially since Wi-Fi became widespread and firmly entrenched as one of the most
    important enterprise technologies.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Wi-Fi topic, the following skills can be practiced: attacking WPA-PSK,
    attacking WPA-Enterprise, flooding, de-authentication attacks, attacking weak
    cryptography, WEP cracking, man-in-the-middle attacks, and sniffing attacks.'
  prefs: []
  type: TYPE_NORMAL
- en: Man-in-the-middle attacks
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Man-in-the-middle** (**MiTM**) attacks are a subtype of network layer attacks,
    but they should be reviewed separately for wireless network connections. The first
    thing we should understand is that MiTM attacks make it possible to intercept
    network traffic by physically or virtually placing an attacking machine between
    a source and a target of network traffic.'
  prefs: []
  type: TYPE_NORMAL
- en: In case of 802.11, a wireless network is a public network, and if it is unencrypted
    or if it has weak encryption, an attacker can intercept all data on the target
    wireless network, even without a logical connection. But if attackers set a rogue
    access point, they are able to read and modify other clients' network traffic
    and directly attack them (evil-twin attack) regardless of the WLAN protection
    type.
  prefs: []
  type: TYPE_NORMAL
- en: MiTM attacks in wireless networks are performed through monitoring and injecting
    wireless communication traffic. Thus, it is possible to attack WLANs on the first
    and the second levels of the OSI model. MiTM attacks are often used in conjunction
    with de-authentication attacks, to make a participant disconnect from the network
    on behalf of an access point. De-authentication attacks are also often used to
    carry out **Denial-of-Service** (**DoS**) attacks.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of wireless networks, DoS attacks can be a part of complex attacks
    on a WLAN along with social engineering attacks, MiTM attacks, attacks on authentication,
    and so on. But an attacker can perform a pure DoS attack intended to interrupt
    a WLAN service, for example, flooding a WLAN with jamming signals or garbage traffic.
    We have listed only the most common areas of practical security and of course,
    you can have your own specific tasks which you would like to perform in a lab,
    but in almost all cases they could be referred to one or several categories in
    our list.
  prefs: []
  type: TYPE_NORMAL
- en: Planning the network topology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An essential step in building a network is developing a network topology. A
    network topology determines how lab components can be interconnected physically
    and logically, significantly influences data flows inside a network and sets requirements
    and limitations on network protocols usage.
  prefs: []
  type: TYPE_NORMAL
- en: Network segmentation is another important mechanism to think about in the planning
    stage. A network segmentation allows us to implement network management protocols
    to practice more network layer attacks, and it allows us to use integrated security
    features of network devices and dedicated network-based firewalls to provide better
    inter-segment isolation and network access control.
  prefs: []
  type: TYPE_NORMAL
- en: Thus, if you want to implement certain network protocols operating in a lab,
    which make sense with practicing certain attack types and provide security to
    the lab at the same time, we need to plan a segmental lab's network with several
    subnets and virtual LANs instead of just connecting all lab components to one
    switch. We are not going to implement the security measures mentioned earlier,
    but we will implement some network segmentation to secure the lab and allow you
    to improve the lab security later if you want.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lab environment security is also highly dependent on a network topology that
    is implemented in a lab, so we should state general security requirements before
    we start to plan subnets and network segments:'
  prefs: []
  type: TYPE_NORMAL
- en: We need to keep our internal network segments insecure to allow practice various
    attacks and, at the same time, we do not want to see somebody unauthorized accessing
    our lab whatever intentions they may have
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The lab should be accessible for authorized users and devices via a protected
    WLAN, but it should be also possible to connect testing machines directly to the
    lab LAN to practice certain network attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After we have understood our lab security requirements, let's proceed with defining
    subnets and network segments which we would like to have in our lab.
  prefs: []
  type: TYPE_NORMAL
- en: It is common practice to separate server and user workspaces in enterprise networks
    and assign different IP ranges to them. That is what we are going to implement
    to imitate a real network. Additionally, we are going to establish a separate
    management VLAN for managing servers—again, as in a real enterprise network. This
    will allow you to practice attack scenarios such as getting management access
    to a server after privilege escalation on a normal user workstation or build a
    network tunnel from a hacker's machine to a management interface of a network
    device via a hacked server.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, large companies want to provide Internet access to their visitors and
    still keep their internal networks safe from the possible risks associated with
    untrusted connections. Such risks can be represented, for example, by intended
    malicious behavior or even non-intended malware spreading from visitor devices.
  prefs: []
  type: TYPE_NORMAL
- en: To minimize those risks, companies usually implement guest network segments.
    They are normally logically or physically isolated from other enterprise networks
    and network segments but allow visitors to access the Internet. With the high
    popularity of mobile devices, WLAN became the most convenient and widely spread
    technology for guest networks.
  prefs: []
  type: TYPE_NORMAL
- en: We also would like to have a guest WLAN in the lab and mostly because we don't
    want to ever switch our trusted WLAN in a less secure mode than the one which
    protects our lab in the best way. Our lab is supposed to be accessible mostly
    via Wi-Fi (remember the book's name?) but to be vulnerable inside, so it a very
    important point to do not reduce the security of the trusted WLAN.
  prefs: []
  type: TYPE_NORMAL
- en: 'Taking into account all requirements provided previously along with the idea
    to imitate a real network without building a huge and expensive infrastructure,
    let''s design a lab with a popular scheme for small offices called **Router-on-a-Stick**.
    It is assumed in this scheme that the whole network is built on two network devices:
    a switch and a router that is connected just to one port on a switch.'
  prefs: []
  type: TYPE_NORMAL
- en: The Router-on-a-Stick scheme assumes that a local network is connected to an
    external network (or ISP) via only one designated and logically isolated switch
    port. Please keep in mind that everything outside this port is an untrusted environment.
    The guest WLAN subnet is also an untrusted network environment because it is exposed
    to the air and destined for connecting untrusted devices.
  prefs: []
  type: TYPE_NORMAL
- en: We think it is a good idea for a lab to join untrusted network areas and connect
    the guest WLAN via a SOHO Wi-Fi router.
  prefs: []
  type: TYPE_NORMAL
- en: If you decide to get an additional network-based firewall with an IPS module,
    a good place to install it is between a SOHO and a core routers. Thus, it will
    become an additional layer of security and will protect the internal lab network
    against attacks originated from external and guest networks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To better represent all the ideas described till now, let''s depict the resulting
    network topology in a diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Planning the network topology](../images/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The lab network topology diagram
  prefs: []
  type: TYPE_NORMAL
- en: As the last step, let's define an addressing scheme for our network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The server subnet will have static IP addresses as in real networks and the
    user subnet can operate a DHCP server to provide dynamic IP addresses to workstations.
    The guest network and the trusted WLAN should also assign dynamic IP addresses.
    You can find the IP ranges for each subnet in the following list:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Server subnet**: 10.0.0.0/24'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User subnet**: 172.16.0.0/24'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Guest WLAN**: 192.168.0.0/24'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trusted WLAN**: 172.16.1.0/24'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Management VLAN**: 10.1.0.0/24'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So, the network topology has been developed and we can continue with choosing
    lab components.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing appropriate components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Under this topic, we are going to decide which lab components can fulfill the
    tasks determined in the previous topic.
  prefs: []
  type: TYPE_NORMAL
- en: As it is not always easy to get enough budget and hardware to build a penetration
    testing lab in an enterprise environment and even harder to do it at home, we
    are going to use virtualization and free software as much as possible in this
    book. That decision influences the next topics significantly, because it sets
    additional requirements for a lab.
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization has also another significant advantage—flexibility to quickly
    modify the lab environment content according to current tasks by simply turning
    virtual hosts on and off.
  prefs: []
  type: TYPE_NORMAL
- en: For a virtual lab, you will need a computer powerful enough to run three to
    four virtual machines at the same time. We would recommend having at least four
    cores CPU and 8 GB of RAM. Additionally, you will need at least 150 GB of free
    space on a hard drive. Of course, if you have a bigger hard drive and if it is
    an SSD drive, your lab will work much better.
  prefs: []
  type: TYPE_NORMAL
- en: If you are going to build the lab on hardware network devices, it is better
    to have a couple of computers (probably less powerful, than the one described
    in the previous paragraph) to connect them to various switch ports and run VMs
    in different VLANs at the same time. But you will need them for a limited number
    of lab tasks only. If you have an opportunity to deploy a hardware virtualization
    platform based on a hypervisor such as ESXi or Xen with enough resources to run
    five to six virtual machines at once, it would be even better.
  prefs: []
  type: TYPE_NORMAL
- en: Network devices
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As a basis for every network environment, we are going to start by choosing
    network devices for our lab. There are several options depending on an amount
    of budget that you are ready to spend on a lab and we will provide manuals for
    two of them:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Option 1 (0 budget)**: Installing and configuring virtual network devices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Option 2 (budget 50-55 € or above)**: Buying and configuring old Cisco devices'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can always find old and relatively cheap network devices at your local advertisement
    boards and online shops such as eBay or Amazon. We recommend you to check shops
    and delivery options available in your country and city to assess price options
    and make the best choice from the options mentioned above.
  prefs: []
  type: TYPE_NORMAL
- en: For example, our three Cisco devices cost us 15€ each on eBay.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to implement both the options so you can choose
    which one is more suitable for you. Of course, each of the options has its own
    advantages and disadvantages.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main advantage of using hardware devices is getting very good performance,
    but the disadvantages are obvious: usually you need to pay for them, they are
    pretty noisy and they consume additional electricity.'
  prefs: []
  type: TYPE_NORMAL
- en: The advantage of virtual network devices is their price and flexibility, but
    you can experience a lack of performance.
  prefs: []
  type: TYPE_NORMAL
- en: In our examples, we will use an old Cisco 1700 Series router and a Cisco 2900
    Series switch for a hardware option (see the following image) and GNS3 as a free
    solution for virtual network devices.
  prefs: []
  type: TYPE_NORMAL
- en: '![Network devices](../images/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Cisco switch and router
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Alternatively, you can use virtual network devices from the company Brocade,
    but they are not free and we have not tried them.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will also employ two Wi-Fi access points: a simple and cheap SOHO Wi-Fi
    router for a guest WLAN, Internet connection, and a Cisco AIR-AP521G-E-K9 access
    point for a trusted WLAN. You can see what it looks like at the following image:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Network devices](../images/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Cisco switch and router
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As an alternative to a simple SOHO Wi-Fi router, you can get a Wi-Fi router
    that supports open-source firmware images such as OpenWRT or DD-WRT. It will allow
    you to extend Wi-Fi security capabilities and play with a greater number of wireless
    attack types. For example, some Linksys routers support it.
  prefs: []
  type: TYPE_NORMAL
- en: If your budget permits, you can buy newer devices and a separated network firewall
    with an IPS module to provide higher security for our internal lab network, but
    we will not cover these topics in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Server and workstation components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Servers and workstations are actually the end-attack points in almost every
    scenario, because they perform most of network communications, generate and process
    data and network traffic, and store information and server users. In other words,
    enterprise networks are being hacked mainly because of them.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we should pay enough attention to planning the most important lab
    part as it will determine what we will actually be able to practice in a lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: Our lab will consist of about a dozen hosts, but to simulate real-world conditions,
    we need a centralized administrative system to manage user accounts and hosts
    as one of the most important lab components. Solutions usually used for such purposes
    are based on directory services serving via a client-server interconnection model
    based on **Lightweight Directory Access Protocol** (**LDAP**). In our case, we
    are going to implement Microsoft Active Directory solution for such a centralized
    infrastructure management imitation.
  prefs: []
  type: TYPE_NORMAL
- en: Other lab components will serve certain application and representation-level
    tasks and we want to provide our readers with a certain level of flexibility during
    the lab building process in order to be able to customize the lab environment
    according to your own tasks and requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'A very comfortable and fast way to plan such customization is to create a self-explanatory
    table that will allow us to quickly define the correspondence between lab components
    and the certain tasks they allow us to fulfill:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Tasks and attacks | Desired lab components |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Network reconnaissance | Linux and Windows workstations and serversWindows
    Domain with at least one domain controllerHost-based firewallsHost-based IDPSHost-based
    antivirus solutionsMisconfigured switch and routerDHCP and DNS server |'
  prefs: []
  type: TYPE_TB
- en: '| Hacking and researching network services |'
  prefs: []
  type: TYPE_TB
- en: '| Network layer attacks and tunneling techniques |'
  prefs: []
  type: TYPE_TB
- en: '| Web application hackingDBMS hacking | Web servers with various vulnerable
    web applications and DBMS installedWeb application firewall |'
  prefs: []
  type: TYPE_TB
- en: '| Password and hash attacks | Linux and Windows workstations and serversWindows
    domain with at least one domain controllerFTP serviceSSH service |'
  prefs: []
  type: TYPE_TB
- en: '| Wireless attacks | Wireless access pointsRADIUS serverAny client Wi-Fi device
    (preferably several various devices) |'
  prefs: []
  type: TYPE_TB
- en: '| Privilege escalation techniques | Windows and Linux workstations and servers
    with vulnerable software |'
  prefs: []
  type: TYPE_TB
- en: In the following chapters, we will create virtual machines with certain parameters
    for the chosen lab components depending on their expected functionality.
  prefs: []
  type: TYPE_NORMAL
- en: Planning lab security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After defining the lab topology and choosing the lab components, it is time
    to have a closer look at the security. Obviously, we do not want to become somebody's
    victim due to the fact that we intentionally leave a lot of vulnerabilities in
    a lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, practicing security evasion techniques is definitely important
    for penetration testers and security specialists, especially for developing their
    skills to the advanced level.
  prefs: []
  type: TYPE_NORMAL
- en: 'According to our general security requirements and the purpose of building
    a lab, we are going to configure maximal security at the entry points to our lab
    network: at the gateway and at the trusted WLAN.'
  prefs: []
  type: TYPE_NORMAL
- en: Further, we want to define the lab security requirements in detail and group
    them by areas.
  prefs: []
  type: TYPE_NORMAL
- en: Access control
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Access control is a powerful measure that allows us to enforce security if it
    is designed and configured properly. At the same time, it increases network complexity
    making attacks more sophisticated and providing the ability to make hacking exercises
    more interesting and more useful in the meaning of acquired skills.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purposes of our lab, access control can be represented at two main
    levels: network-based, implemented on network devices, and host-based, implemented
    on network hosts.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Keeping that in mind, let''s define network-based access control requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: If we are going to let our lab components access the Internet, but leave them
    directly inaccessible in the other direction (from the Internet), we should use
    **network address translation** (**NAT**) technology at the both of our routers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Workstations should be accessible from the server segment without any limitations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To protect our internal lab from unauthorized intrusion through a guest WLAN,
    the internal network should not be accessible from the guest subnet at all, as
    well as the guest WLAN should not be accessible from the internal network. Untrusted
    guest devices should be able to only access Internet.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To allow all attacks, the whole network should be accessible for authenticated
    WLAN users without any limitations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If correctly implemented, these access control rules combined with the chosen
    network topology will significantly rise our lab's security and bring practicing
    network attacks to a higher level.
  prefs: []
  type: TYPE_NORMAL
- en: Integrated security mechanisms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The security of any infrastructure can be measured by its weakest component.
    Therefore, protection of the infrastructure should consist of several levels and
    only the complex protection can provide a high level of security. It is important
    to understand that information security systems consist not only of information
    security imposed solutions, but also of integrated security mechanisms built-in
    to components of an infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: To review and choose built-in security mechanisms, we will use an approach going
    up from low to high and from hardware to software levels.
  prefs: []
  type: TYPE_NORMAL
- en: Often, cheap wired network devices have a limited set of basic security mechanisms,
    such as access control mechanisms and basic traffic filtering (simple rule-based
    firewalling capabilities), for example, access filtering based on MAC-address
    values. But in most cases, these measures will be sufficient to significantly
    reduce security violation risks and to protect from self-distributing malicious
    software and potential attackers with an average skill level.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to mention that network devices have management interfaces which
    should be protected very properly because they possess great risks for the whole
    network infrastructure. Usually, there are several such interfaces available by
    various network ports (Telnet, SSH, and Web) and access to these interfaces is
    granted by a combination of login and password. Also, if a potential attacker
    gains access to these interfaces, the consequences could be painful for the infrastructure
    up to intercepting business critical information and interrupting all network
    services of the entire company.
  prefs: []
  type: TYPE_NORMAL
- en: According to our security requirements, we are going to use integrated security
    mechanisms in different ways on the network entry points (gateway and wireless
    access points) which have to be protected and on the internal network devices
    that have to be vulnerable for training purposes.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will list all built-in security features configured by default on internal
    network devices and will configure the following ones on the network entry points:'
  prefs: []
  type: TYPE_NORMAL
- en: Strong network-based access control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong password policies for authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event logging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypted management communications where possible (HTTPS and SSH)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next level of a network abstraction is hosts (servers and workstations).
    When we consider all the hosts from the information security point of view, we
    consider their operating systems. In the context of security issues, an operating
    system is a system software with a set of local and network services that provide
    interaction between a user and an infrastructure. Needless to say, modern operating
    systems come with a set of built-in security features, which are primarily aimed
    at protection against unauthorized access. Here are some of the typical security
    features:'
  prefs: []
  type: TYPE_NORMAL
- en: Identification and authentication (account management, password policies, and
    so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access differentiation to data stores
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Access control to software installation and software execution
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Access control to OS services management
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Access control to change OS and system applications settings
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Network activity filtration (built-in firewalls)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrity control of OS system data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event logging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In our lab, we will have to distinguish host configurations based on two roles,
    the server and workstation, since there are functional differences.
  prefs: []
  type: TYPE_NORMAL
- en: To allow analysis and investigation of security incidents and attacks, event
    logging subsystem should be also activated on all hosts. In the case of the server,
    event logging should be more detailed than on the workstation, for example, it
    is important to log successful or failed attempts to login. A more interesting
    event for logging on workstations is periodical stopping and starting of services,
    because it is very likely a malware activity.
  prefs: []
  type: TYPE_NORMAL
- en: Information systems that will be used in our testing infrastructure generally
    have a minimum set of security mechanisms. Usually, these are authentication,
    access control and event logging. The set of security mechanisms and possible
    settings in each information system is individual.
  prefs: []
  type: TYPE_NORMAL
- en: Built-in security mechanisms configured by default on modern Windows and Linux
    workstations provide a sufficient level of security for our needs. Therefore,
    we are going to let them stay as is in most cases, but we will enforce workstation
    security with additional third-party security solutions that we will discuss in
    the next topic.
  prefs: []
  type: TYPE_NORMAL
- en: As we are going to have all servers and workstations as virtual machines, it
    is wise to use such a convenient virtualization feature as a snapshot. A snapshot
    is basically a saved system state which can be quickly restored. We recommend
    that you have at least two security states saved in snapshots. The first one is
    less secure for practicing simple and medium complicated attacks on it, and the
    second one will be used for practicing advanced attack techniques or in cases
    when you do not need to attack this host at the moment, but it should be turned
    on to provide some services to other hosts being attacked.
  prefs: []
  type: TYPE_NORMAL
- en: Security solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Though network access control and integrated security mechanisms provide a good
    level of security, having additional security solutions is a good idea. The intention
    to practice security evasion and breaking techniques along with the idea to imitate
    a real enterprise network with our lab are other fundamental requirements for
    implementing additional security solutions.
  prefs: []
  type: TYPE_NORMAL
- en: First of all, we need to secure the access to the WLAN which will be used to
    connect authorized users to the lab environment. We will configure WPA-Enterprise
    with mutual digital certificate-based authentication as the most secure solution
    and use a RADIUS server with FreeRADIUS software for that purpose. This is a free
    and open source software providing us a lot of authentication options and it is
    relatively easy to configure.
  prefs: []
  type: TYPE_NORMAL
- en: An additional security for some workstations will be provided by **host-based
    IDPS** (**HIDPS**) and antivirus solutions installed on them. It will also let
    you practice existing or developing new security evasion attack techniques. We
    will use free HIDPS with antivirus features developed by COMODO because it has
    all the necessary capabilities and is not complicated in configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Security hints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the course of this book, sometimes we are going to give you additional security
    hints on building and using a lab or just regarding currently discussed technologies.
    Security hints will be provided separately because normally they do not belong
    to the main content of the book, but in our opinion they are still worth mentioning
    and emphasizing.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let''s present the first security hints:'
  prefs: []
  type: TYPE_NORMAL
- en: Despite that we apply a lot of security features in the lab, it still contains
    a lot of vulnerabilities and you are going to test dangerous tools that can be
    unpredictable sometimes, so we recommend you to connect your lab to an external
    network or the Internet only when it is really necessary.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interoperability with third-party devices should be minimized. For this purpose,
    access points should be placed in a controlled area. Additionally, signal ranges
    of our WLANs should be limited, for example, by reducing a signal power of an
    access point.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you need to practice hacking WEP or other weak network security mechanisms,
    it is wise to save a safe configuration of affected devices and revert to it after
    practicing to do not forget to configure some important parameters into their
    safe values.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When practicing WEP and WPA-PSK hacking, it is wise to physically disconnect
    a Wi-Fi router from a lab network, so nobody will be able to hack your lab during
    that time when it stays poorly protected while you are practicing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we developed a basis structure for our lab that allows us to
    start building a lab systematically, clearly understanding why we have chosen
    certain lab components and which tasks they will fulfill for us.
  prefs: []
  type: TYPE_NORMAL
- en: We hope that after reading this chapter, you can identify your personal needs
    and tasks in the provided lists and make a deliberate conclusion what do you want
    to have in your lab and what is not necessary for you.
  prefs: []
  type: TYPE_NORMAL
- en: The developed network topology combines principles used for building real enterprise
    networks and enough complexity to practice various types of penetration testing
    techniques. It is affordable for a home lab as well as in a corporate network.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will actually start building the lab network according
    to our topology and show you how to install and configure network devices.
  prefs: []
  type: TYPE_NORMAL
