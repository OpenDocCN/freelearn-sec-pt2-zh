["```\n**sudo apt-get update && sudo apt-get install -y aircrack-ng wifite reaver sslstrip wifite nmap dnsmasq**\n\n```", "```\n**sudo dpkg --install freeradius-server-wpe_2.1.12-1_i386.deb && sudo ldconfig**\n\n```", "```\n**radius -v**\n\n```", "```\n**radiusd -x**\n\n```", "```\n**sudo apt-get update && sudo apt-get install -y git libssl-dev libnl-dev**\n\n```", "```\n**git clone https://github.com/OpenSecurityResearch/hostapd-wpe**\n**wget http://hostap.epitest.fi/releases/hostapd-2.2.tar.gz**\n**tar -zxf hostapd-2.2.tar.gz**\n\n```", "```\n**cd hostapd-2.2**\n**patch -p1 < ../hostapd-wpe/hostapd-wpe.patch**\n\n```", "```\n**cd hostapd**\n**make**\n\n```", "```\n**sudo ./hostapd-wpe %config_file_name%**\n\n```", "```\n[keyfile]\nunmanaged-devices=mac:xx:xx:xx:xx:xx:xx\n```", "```\n**sudo /etc/init.d/networking restart**\n\n```", "```\n**sudo airmon-ng check kill**\n\n```", "```\n**unzip mana-master.zip**\n\n```", "```\n**cd mana-master/**\n**nano ubuntu-install.sh**\n\n```", "```\necho \"deb http://http.kali.org/kali kali main non-free contrib\" > /etc/apt/sources.list.d/mana-kali.list\n```", "```\necho \"deb http://http.kali.org/kali sana main non-free contrib\" > /etc/apt/sources.list.d/mana-kali.list\n```", "```\n**sudo apt-get update && sudo ./ubuntu-install.sh**\n\n```", "```\n**sudo apt-get install screen**\n\n```", "```\n**tar jxf wifi_honey_1.0.tar.bz2**\n\n```", "```\n**chmod +x wifi_honey.sh**\n\n```", "```\n**sudo apt-get install openssl libpcap0.8-dev**\n\n```", "```\n**tar zxvf cowpatty-4.6.tgz**\n\n```", "```\n**cd cowpatty-4.6/**\n**make**\n\n```", "```\n**./cowpatty**\n\n```", "```\ninterface=wlan0\ndriver=nl80211\nssid=Free Wi-Fi\nchannel=8\n```", "```\ninterface=wlan0\ndriver=nl80211\nssid=YourSSID\nchannel=8\nwpa_passphrase=your_passphrase\nwpa=2\nwpa_key_mgmt=WPA-PSK\nwpa_pairwise=TKIP CCMP\n```", "```\n**sudo hostapd open.conf**\n\n```", "```\ninterface=wlan0\ndhcp-range=192.168.0.2,192.168.0.255,12h\ndhcp-option=3,192.168.0.1\ndhcp-option=6,192.168.0.1\nlog-facility=/var/log/dnsmasq.log\nlog-queries\n```", "```\n#!/bin/bash\n#show usage tips if no argument supplied\nif [[ $# < 1 ]]\nthen\n    echo -e \"Usage: ./hostap_standalone.sh options\"\n    echo -e \"\\t-i|--interface - wlan interface to use (default wlan0)\"\n    echo -e \"\\t-s|--ssid - ssid to set (default \\\"Free WiFi\\\"\"\n    echo -e \"\\t-d|--driver - driver, corresponding to hostapd (default nl80211)\"\n    echo -e \"\\t--security - security type: open, wpa, wpa2 (default \\\"open\\\")\"\n    exit\nfi\n#Let's save all command line arguments into variables\nwhile [[ $# > 1 ]]\ndo\nkey=\"$1\"\n\ncase $key in\n    -i|--interface)\n    WIFIINTERFACE=\"$2\"\n    shift # pass next argument\n    ;;\n    -s|--ssid)\n    SSID=\"$2\"\n    shift # pass next argument\n    ;;\n    -d|--driver)\n    DRIVER=\"$2\"\n    shift # pass next argument\n    ;;\n    --security)\n    SECURITY=\"$2\"\n    shift # pass next argument\n    ;;\n    *)\n            # unknown option\n    ;;\nesac\nshift # pass next argument\ndone\n#Check if parameters were set\nif [ -z \"$WIFIINTERFACE\" ]\nthen\n    echo \"WIFI interface not set ( -i | --interface ), using default wlan0\"\n    WIFIINTERFACE=\"wlan0\"\nfi\nif [ -z \"$SSID\" ]\nthen\n    echo -e \"SSID not set ( -s | --ssid ), using default \\\"Free WiFi\\\"\"\n    SSID=\"Free WiFi\"\nfi\nif [ -z \"$DRIVER\" ]\nthen\n    echo \"Driver not set ( -d | --driver ), using default nl80211\"\n    DRIVER=\"nl80211\"\nfi\nif [ ! -z \"$SECURITY\" ]\nthen\n    case $SECURITY in\n    wpa|WPA)\n    wpa=\"wpa=1\"\n    echo \"Enter WPA passphrase:\"\n    read PASS\n    ;;\n    wpa2|WPA2)\n    wpa=\"wpa=2\"\n    echo \"Enter WPA passphrase:\"\n    read PASS\n    ;;\n    open|Open|OPEN)\n\n    ;;\n    *)\n    echo \"Unknown security type, setting an open AP\"\n    SECURITY=\"open\"\n    ;;\n     esac\nelse\n    echo \"Security not set ( --security ), setting an open AP\"\n     SECURITY=\"open\"\nfi\n#Creating a temporary configuration file\necho \"interface=$WIFIINTERFACE\" >> temp.conf\necho \"driver=$DRIVER\" >> temp.conf\necho \"channel=8\" >> temp.conf\necho \"ssid=$SSID\" >> temp.conf\nif [ \"$SECURITY\" != \"open\" ]\nthen\n    echo $wpa >> temp.conf\n    echo \"wpa_passphrase=$PASS\" >> temp.conf\n    echo \"wpa_key_mgmt=WPA-PSK\" >> temp.conf\n    echo \"wpa_pairwise=TKIP CCMP\" >> temp.conf\nfi\n#Preparing the host for network traffic processing\n#Stopping the networking service to exclude conflicts\n/etc/init.d/networking stop\n#set the IP parameters for wireless interface\nifconfig $WIFIINTERFACE 192.168.0.1 netmask 255.255.255.0\nroute add -net 192.168.0.0 netmask 255.255.255.0 gw 192.168.0.1\n#start dhcp and dns server\nservice dnsmasq start\n#Prepare network traffic processing rules\niptables -F\niptables -t nat -F\niptables -A FORWARD -i eth0 -d 192.168.0.0/255.255.255.0 -j ACCEPT\niptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n#You can uncomment the following line to redirect client ssl traffic to TCP port 10000\n#iptables -t nat -A PREROUTING -p tcp --destination-port 443 -j REDIRECT --to-port 10000\n#enable network traffic forwarding\necho 1 > /proc/sys/net/ipv4/ip_forward\n#Starting AP\necho \"Starting an AP with the following parameters:\"\necho \"SSID: $SSID\"\necho \"SECURITY: $SECURITY\"\necho \"Interface: $WIFIINTERFACE\"\necho \"Driver: $DRIVER\"\nhostapd temp.conf\nwait\n#Removing the temporary configuration file\nrm temp.conf\n#Stopping dnsmasq\nservice dnsmasq stop\n#Starting networking service\n/etc/init.d/networking start\n```", "```\n**./bootstrap**\n\n```", "```\ninterface=wlan0\ndriver=nl80211\nssid=YourSSID\nieee8021x=1\neapol_key_index_workaround=0\nown_ip_addr=192.168.0.1\nauth_server_addr=127.0.0.1\nauth_server_port=1812\nauth_server_shared_secret=YourRADIUSsecret\nwpa=1\nwpa_key_mgmt=WPA-EAP\nchannel=1\nwpa_pairwise=TKIP CCMP\nlogger_stdout=-1\nlogger_stdout_level=0\ndump_file=hostapd.dump\n```", "```\ninterface=wlan0\nssid=PACKT\n\neap_user_file=hostapd-wpe.eap_user\nca_cert=../../hostapd-wpe/certs/ca.pem\nserver_cert=../../hostapd-wpe/certs/server.pem\nprivate_key=../../hostapd-wpe/certs/server.pem\nprivate_key_passwd=whatever\ndh_file=../../hostapd-wpe/certs/dh\n\nhw_mode=g\nchannel=1\n\neap_server=1\neap_fast_a_id=101112131415161718191a1b1c1d1e1f\neap_fast_a_id_info=hostapd-wpe\neap_fast_prov=3\nieee8021x=1\npac_key_lifetime=604800\npac_key_refresh_time=86400\npac_opaque_encr_key=000102030405060708090a0b0c0d0e0f\nwpa=1\nwpa_key_mgmt=WPA-EAP\nwpa_pairwise=TKIP CCMP\n```", "```\n    **dd if=kali-linux-2.0-amd64.iso of=/dev/sdb bs=512k**\n\n    ```", "```\n    **du -bcm kali-linux-2.0-amd64.iso**\n\n    ```", "```\n    **parted /dev/sdb mkpart primary 3167 7gb**\n\n    ```", "```\n    **cryptsetup --verbose --verify-passphrase luksFormat /dev/sdb3**\n\n    ```", "```\n    **cryptsetup luksOpen /dev/sdb3 kali_stor**\n\n    ```", "```\n    **mkfs.ext3 -L persistence /dev/mapper/kali_stor && e2label /dev/mapper/kali_stor persistence**\n\n    ```", "```\n    **mkdir -p /mnt/kali_stor && mount /dev/mapper/kali_stor /mnt/kali_stor**\n\n    ```", "```\n    **echo \"/ union\" > /mnt/kali_stor/persistence.conf**\n\n    ```", "```\n    **umount /dev/mapper/kali_stor && cryptsetup luksClose /dev/mapper/kali_stor**\n\n    ```"]