["```\n $ ping google.com &\n```", "```\n $ sudo tcpdump -i eth0 -w packets.cap &\n```", "```\n #!/bin/bash\ngrep -i \"failed password\" /var/log/auth.log > /tmp/failed-login-attempts.log &\n```", "```\n #!/usr/bin/env bash\nfor i in {1..5}; do\n  echo \"Processing item $i\"\n  sleep 1 &\ndone\nwait\necho \"All processes complete.\"\n```", "```\n #!/usr/bin/env bash\nips=(\"192.168.1.1\" \"192.168.1.2\" \"192.168.1.3\")\nfor ip in \"${ips[@]}\"; do\n  nmap -sS \"$ip\" > \"scan_$ip.txt\" &\ndone\nwait\necho \"Scanning complete.\"\n```", "```\n command | xargs [options] [command [initial-arguments]]\n```", "```\n $ echo \"file1 file2 file3\" | xargs rm\n```", "```\n $ ls *.log | xargs -P 4 -I {} gzip {}\n```", "```\n $ cat hosts.txt | xargs -P 5 -I {} nmap -sS -oN {}_scan.txt {}\n```", "```\n    cat hosts.txt | xargs -P 5 -I {} sh -c 'nmap -sS {} > {}_scan.txt 2>&1'\n    ```", "```\n $ sudo apt-get update && sudo apt-get install parallel\n```", "```\n $ parallel echo ::: A B C D\n```", "```\n $ ls *.txt | parallel wc -l\n```", "```\n $ cat ips.txt | parallel ./scan.sh\n```", "```\n $ cat ips.txt | parallel -j 4 ./scan.sh\n```", "```\n $ parallel -a ips.txt -a ports.txt ./ch07_parallel_1.sh\n```", "```\n #!/usr/bin/env bash\nIP_ADDRESS=$1\nPORT=$2\necho \"Scanning IP: $IP_ADDRESS on Port: $PORT\"\n```", "```\n Scanning IP: 192.168.1.1 on Port: 80\nScanning IP: 192.168.1.1 on Port: 443\nScanning IP: 192.168.1.1 on Port: 8080\nScanning IP: 192.168.1.2 on Port: 80\nScanning IP: 192.168.1.2 on Port: 443\nScanning IP: 192.168.1.2 on Port: 8080\nScanning IP: 192.168.1.3 on Port: 80\nScanning IP: 192.168.1.3 on Port: 443\nScanning IP: 192.168.1.3 on Port: 8080\n```", "```\n $ parallel ./scan.sh {} '>' results/{#}.out '2>' errors/{#}.err :::: ips.txt\n```", "```\n $ parallel -a file1 -a file2 ::: arg1 arg2 :::: file3 :::: file4 command\n```", "```\n 10.2.10.10\n10.2.10.11\n```", "```\n 80,445\n22,3389\n```", "```\n quick\nthorough\n```", "```\n txt\njson\n```", "```\n #!/usr/bin/env bash\nperform_security_check() {\n    server=\"$1\"\n    ports=\"$2\"\n    scan_type=\"$3\"\n    output_format=\"$4\"\n    echo \"Performing $scan_type security check on $server (ports: $ports) with $output_format output\"\n    # Simulating nmap scan\n    nmap_options=\"\"\n    if [ \"$scan_type\" == \"quick\" ]; then\n        nmap_options=\"-T4 -F\"\n    else\n        nmap_options=\"-sV -sC -O\"\n    fi\n    output_file=\"scan_${server//./}_${scan_type}_${output_format}.${output_format}\"\n    nmap $nmap_options -p $ports $server -oN $output_file\n    # Simulating additional security checks\n    echo \"Running vulnerability scan on $server\" >> $output_file\n    echo \"Checking for misconfigurations on $server\" >> $output_file\n    echo \"Performing brute force attack simulation on $server\" >> $output_file\n    echo \"Security check completed for $server. Results saved in $output_file\"\n    echo \"-----\"\n}\nexport -f perform_security_check\nparallel -a servers.txt -a ports.txt :::: scan_types.txt :::: output_formats.txt perform_security_check\n```", "```\n $ ./ch07_parallel_3.sh\nPerforming quick security check on 10.2.10.10 (ports: 80,445) with txt output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_quick_txt.txt\n-----\nPerforming quick security check on 10.2.10.10 (ports: 80,445) with json output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_quick_json.json\n-----\nPerforming thorough security check on 10.2.10.10 (ports: 80,445) with txt output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_thorough_txt.txt\n-----\nPerforming thorough security check on 10.2.10.10 (ports: 80,445) with json output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_thorough_json.json\n-----\nPerforming quick security check on 10.2.10.10 (ports: 22,3389) with txt output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_quick_txt.txt\n-----\nPerforming quick security check on 10.2.10.10 (ports: 22,3389) with json output\nSecurity check completed for 10.2.10.10\\. Results saved in scan_1021010_quick_json.json\n-----\n```", "```\n $ sudo apt update && sudo apt install -y screen\n```", "```\n perform_task() {\n    echo \"Starting task $1\"\n    sleep 5  # Simulating work\n    echo \"Finished task $1\"\n}\n```", "```\n screen -dmS parallel_tasks\n```", "```\n for i in {1..5}; do\n    screen -S parallel_tasks -X screen -t \"Task $i\" bash -c \"perform_task $i; exec bash\"\ndone\n```", "```\n screen -S parallel_tasks -X windowlist -b\n```", "```\n screen -S parallel_tasks -X quit\n```", "```\n #!/usr/bin/env bash\nurls=(\"http://example.com/login.php\" \"http://test.com/index.php\" \"http://site.com/search.php\")\necho \"${urls[@]}\" | parallel -j 3 'sqlmap -u {} --batch --crawl=2'\necho \"All SQL injection tests completed.\"\n```", "```\n #!/usr/bin/env bash\nips=$(seq 1 254 | awk '{print \"192.168.1.\" $1}')\necho \"$ips\" | xargs -n 1 -P 10 -I {} bash -c 'nmap -sP {}'\necho \"Network scan completed.\"\n```", "```\n #!/usr/bin/env bash\nIP_RANGE=\"10.2.10.{1..20}\"\nnLIVE_HOSTS=()\nfor IP in $(eval echo $IP_RANGE); do\n    if ping -c 1 -W 1 $IP > /dev/null 2>&1; then\n        LIVE_HOSTS+=($IP)\n    fi\ndone\nscan_ports() {\n    local IP=$1\n    for PORT in \"${PORTS[@]}\"; do\n        (echo >/dev/tcp/$IP/$PORT) > /dev/null 2>&1 && echo \"$IP:$PORT\"\n    done\n}\n# Export the function to use in subshells\nexport -f scan_ports\n# Loop through live hosts and scan ports in parallel\nfor IP in \"${LIVE_HOSTS[@]}\"; do\n    scan_ports $IP &\ndone\necho \"Waiting for port scans to complete…\"\nwait\n```", "```\n $ parallel -j 3 wget ::: http://example.com/file1 http://example.com/file2 http://example.com/file3\n```"]