- en: Understanding the Cybersecurity Kill Chain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The last chapter, you learned about the incident response process and how it
    fits into the overall enhancement of a company''s security posture. Now it is
    time to start thinking as an attacker and understand the rationale, the motivation,
    and the steps of performing an attack. We call this the cybersecurity kill chain,
    which is something that we briefly covered in [Chapter 1](3a4a477a-d673-4f0d-bbe8-f8e2a1289d38.xhtml),
    *Secure Posture*. Today, the most advanced cyber-attacks are reported to involve
    intrusions inside a target''s network that last a long time before doing damage
    or being discovered. This reveals a unique characteristic of today''s attackers:
    they have an astounding ability to remain undetected until the time is right.
    This means that they operate on well-structured and scheduled plans. The precision
    of their attacks has been under study and has revealed that most cyber attackers
    use a series of similar phases to pull off successful attacks.'
  prefs: []
  type: TYPE_NORMAL
- en: To enhance your security posture, you need to ensure that all phases of the
    cybersecurity kill chain are covered from a protection and detection perspective.
    But the only way to do that is to ensure that you understand how each phase works,
    the mindset of an attacker, and the tolls that are taken on each phase.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to be covering the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: External reconnaissance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compromising the system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lateral movement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Privilege escalation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concluding the mission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: External reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this phase, an attacker is simply looking for a vulnerable target to attack.
    The motive is to harvest as much information as possible from outside the target's
    network and systems. This may be information about the target's supply chain,
    obsolete device disposal, and employee social media activities. This will enable
    the attacker to decide on the exploitation techniques that are suitable for each
    vulnerability identified about a particular target. The list of targets might
    be endless, but attackers have a particular taste for na√Øve users that hold certain
    privileges in systems. However, anyone in an organization can be targeted, including
    suppliers and customers. All that is needed is a weak point for the attackers
    to get an entrance into an organization's network.
  prefs: []
  type: TYPE_NORMAL
- en: There are two commonly used techniques in this stage-phishing and social engineering.
  prefs: []
  type: TYPE_NORMAL
- en: Phishing is done through emails where attackers send the target some carefully
    crafted emails to cause them to reveal secret information or open a network to
    attacks. It is common for attackers to attach malware to their emails that infect
    a target's computer after the infected attachment is opened. At other times, phishing
    emails will claim to be from reputable institutions, thereby inducing unsuspicious
    targets into divulging some sensitive information. Social engineering works in
    a similar fashion where attackers closely follow targets, collecting information
    about them which they, later on, use to get some private information. Social engineering
    happens mostly through social media where an attacker will follow a target through
    his/her various favorite social networks.
  prefs: []
  type: TYPE_NORMAL
- en: The attacker will find the target's likes, dislikes, and in between, their weaknesses.
  prefs: []
  type: TYPE_NORMAL
- en: Once either of these or another technique is used, the attacker will find a
    point of entrance. This might be through stolen passwords or malware infection
    of a computer within the target organization's network. Stolen passwords will
    give the attacker direct access to computers, servers, or devices within the internal
    network of an organization. Malware, on the other hand, can be used to infect
    even more computers or servers, thus bringing them under the command of the hacker.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this subphase of reconaissance, an attacker will critically examine weak
    points identified in the reconnaissance phase. It involves the use of various
    scanning tools to find loopholes that can be exploited to stage an attack. Attackers
    take a considerable amount of time in this stage as they know that it determines
    a significant percentage of their success.
  prefs: []
  type: TYPE_NORMAL
- en: From the numerous available scanning tools, the ones presented in the sections
    that follow are the most commonly used ones.
  prefs: []
  type: TYPE_NORMAL
- en: NMap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NMap is a free and open source network mapping tool that is available for Windows,
    Linux, and macOS. Network admins have appreciated the immense power that this
    free tool has. The tool works using raw IP packets that are sent throughout a
    network. This tool can do an inventory of the devices connected to a target network,
    identify the open ports that could be exploited, and monitor the uptime of hosts
    in the network.
  prefs: []
  type: TYPE_NORMAL
- en: This tool is also able to tell the services running on a network's hosts to
    fingerprint the operating systems used by the hosts and to identify the firewall
    rules being enforced in the network. NMap has a command-line interface, but there
    is a similar tool that has a graphical user interface called Zenmap. Zenmap is
    a tool for beginners that is simpler to use, and that comes with all the functionalities
    of NMap. The functionalities are, however, listed in menus, and thus, users do
    not have to remember commands, as is the case for NMap. Zenmap was created by
    the same developers of NMap just to serve the users that wished to have a GUI
    on their scanning tools for viewing results in a simplified way.
  prefs: []
  type: TYPE_NORMAL
- en: 'NMap works mainly through commands supplied by a user on a command-line interface.
    Users begin by scanning a system or network for vulnerabilities. A common way
    of doing this is by typing one of the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For the preceding commands, the target site is the one you wish to have NMap
    scan. It works with either the site''s URL or IP address. This basic command is
    mostly used in combination with other commands, such as TCP SYN Scan and Connect,
    UDP Scan, and FIN Scan. All of these have their equivalent command phrases. *Figure
    1* shows a screenshot of the NMap scanning two IP addresses. In the screenshot,
    the IP addresses being scanned are 205.217.153.62 and 192.168.12.3. Note how NMap
    shows the results for the scans, giving the open or closed ports and the services
    they allow to run:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ccb527fc-f209-4459-b886-1264ba9e4478.png)Figure 1: A screenshot
    of the NMap interface'
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a Linux-based hacking framework that has been used countless times by
    hackers. This is because Metasploit is made up of numerous hacking tools and frameworks
    that have been made to effect different types of attacks on a target. The tool
    has received attention from cybersecurity professionals and is today used to teach
    ethical hacking. The framework provides its users with vital information about
    multiple vulnerabilities and exploitation techniques. As well as being used by
    hackers, the framework is also used for penetration testing to assure organizations
    that they are protected from penetration techniques that attackers commonly use.
  prefs: []
  type: TYPE_NORMAL
- en: The Metasploit is run from a Linux terminal, which gives a command-line interface
    console from which exploits can be launched. The framework will tell the user
    the number of exploits and payloads that can be used. The user has to search for
    an exploit to use based on the target or what is to be scanned on a target's network.
    Normally, when one selects an exploit, he or she is given the payloads that can
    be used under that exploit.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows screenshots of the Metasploit interface. This screenshot
    shows the exploit being set to target the host on IP address 192.168.1.71:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ff33a3e9-6b54-42a4-8a82-2ef4f27f32c6.png)Figure 2: A screenshot
    of Metasploit'
  prefs: []
  type: TYPE_NORMAL
- en: 'This screenshot shows the compatible payloads that can be deployed on the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f2181009-ea49-4577-ac2c-a3149cdb1d40.png)'
  prefs: []
  type: TYPE_IMG
- en: John the Ripper
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This a powerful password-cracking tool available on Linux and Windows operating
    systems that is used by hackers to perform dictionary attacks. The tool is used
    to retrieve the actual user passwords from encrypted databases of desktop or web-based
    systems and applications. The tool works by sampling commonly used passwords and
    then encrypting them with the same algorithm and key used by a given system. The
    tool does a comparison between its results and those that have been stored in
    the database to see if there are matches.
  prefs: []
  type: TYPE_NORMAL
- en: The tool cracks passwords in only two steps. First, it identifies the encryption
    type of a password. It could be RC4, SHA, or MD5, among other common encryption
    algorithms. It also looks at whether the encryption is salted.
  prefs: []
  type: TYPE_NORMAL
- en: Salted means that extra characters have been added to the encryption to make
    it more difficult to go back to the original password.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the second step, the tool attempts to retrieve the original password by
    comparing the hashed password with many other hashes stored in its database. *Figure
    4* shows a screenshot of John the Ripper recovering a password from an encrypted
    hash:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0b96ce43-5cbf-49aa-9e2d-7312336e5c6a.jpg)Figure 4: Screenshot of
    John the Ripper recovering an encrypted password'
  prefs: []
  type: TYPE_NORMAL
- en: THC Hydra
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is similar to the previously discussed tool, the only difference being that
    Hydra works online while John the Ripper works offline. Hydra is, however, more
    powerful and thus more popular among hackers. It is available for Windows, Linux,
    and macOSX. The tool is commonly used for fast network login hacking. It uses
    both dictionary and brute-force attacks to attack login pages.
  prefs: []
  type: TYPE_NORMAL
- en: Brute-force attacks may raise alarms on the target's side if there are some
    security tools put in place, and thus hackers are extremely careful with the use
    of the tool.
  prefs: []
  type: TYPE_NORMAL
- en: Hydra has been found to be effective against databases, LDAP, SMB, VNC, and
    SSH.
  prefs: []
  type: TYPE_NORMAL
- en: The workings of Hydra are quite simple. The attacker gives the tool the login
    page to any of the target's online systems. The tool then tries all possible combinations
    for the username and password fields. Hydra stores its combinations offline, making
    it faster to do the matching process.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram (*Figure 5*) shows a screenshot of the installation of
    Hydra. The installation is being done on a Linux machine, but the process is the
    same for Windows and Mac. The user is required to type make install during the
    installation. The setup handles the rest until completion of the installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f32bcf6f-1ed4-4809-a8fd-c9bb14627ac1.png)Figure 5: A screenshot
    showing THC Hydra'
  prefs: []
  type: TYPE_NORMAL
- en: Wireshark
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a very popular tool among both hackers and pen testers. Wireshark is
    famous for scanning networks. The tool captures data packets in a target network
    and displays them in a verbose format, which is human readable. The tool allows
    hackers or pen testers to deeply analyze network traffic to the level of inspecting
    individual packets.
  prefs: []
  type: TYPE_NORMAL
- en: Wireshark works in two modes. The first one is the network-capturing mode. It
    can be left running on a victim's website for a long time while capturing all
    the network traffic. In the second mode, the network capturing has to be stopped
    in order to enable deep analysis. From here, a user of the tool can see the network
    traffic and start mining for insecurely exchanged passwords or to determine the
    different devices on the network. It is the most important functionality of the
    program. Wireshark has a Conversations feature under the Statistics menu that
    allows a user to view communication between computers.
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 6* shows a Wireshark interface with its separate sections and the type
    of information that they contain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e4c76182-5116-4edd-b7fc-c3474b3e2d65.png)Figure 6: Screenshot showing
    the Wireshark interface'
  prefs: []
  type: TYPE_NORMAL
- en: Aircrack-ng
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Aircrack-ng is a dangerous suite of tools that is used for wireless hacking,
    and has become legendary in today's cyberspace. The tools are available for both
    Linux and Windows operating systems. It is important to note that Aircrack-ng
    relies on other tools to first get some information about its targets. Mostly,
    these programs discover the potential targets that can be hacked. Airodump-ng
    is the commonly used tool to do this, but other tools, such as Kismet, are reliable
    alternatives. Airodump-ng detects wireless access points and the clients connected
    to them. This information is used by Aircrack-ng to hack the access points.
  prefs: []
  type: TYPE_NORMAL
- en: Today, most organizations and public places have Wi-Fi, and this makes them
    ideal hunting grounds for hackers in possession of this suite of tools. Aircrack-ng
    can be used to recover the keys of secured Wi-Fi networks, provided that it captures
    a certain threshold of data packets in its monitoring mode. The tool is being
    adopted by white hats that are focused on wireless networks. The suite includes
    attacks such as FMS, KoreK, and PTW, which makes its capabilities incredible.
  prefs: []
  type: TYPE_NORMAL
- en: The FMS attack is used to attack keys that have been encrypted using RC4\. KoreK
    is used to attack Wi-Fi networks that are secured with WEP-encrypted passwords.
    Lastly, PTW is used to hack through WEP- and WPA-secured Wi-Fi networks.
  prefs: []
  type: TYPE_NORMAL
- en: Aircrack-ng works in a number of ways. It could be used to monitor the traffic
    in a Wi-Fi network by capturing packets to be exported in formats that can be
    read by other scanning tools. It can also attack a network by creating fake access
    points or injecting its own packets into a network to get more information about
    the users and devices in a network.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, it can recover passwords for Wi-Fi networks using the aforementioned
    attacks to try different combinations.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6133b78b-3b1f-441c-b216-ca96582b4d8a.png)Figure 7: Aircrack-ng interface'
  prefs: []
  type: TYPE_NORMAL
- en: Nikto
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Nikto is a Linux-based website vulnerability scanner that hackers use to identify
    any exploitable loopholes in organizational websites. The tool scans the web servers
    for over 6,800 commonly exploited vulnerabilities. It also scans for unpatched
    versions of servers on over 250 platforms. The tool also checks for errors in
    the configurations of files in web servers. The tool is, however, not very good
    at masking its tracks, and thus almost always gets picked up by any intrusion
    detection and prevention system.
  prefs: []
  type: TYPE_NORMAL
- en: Nikto works through a set of command-line interface commands. Users first give
    it the IP address of the website that they wish to scan. The tool will do an initial
    scan and give back details about the web server.
  prefs: []
  type: TYPE_NORMAL
- en: 'From there, users can issue more commands to test for different vulnerabilities
    on the web server. *Figure 8* shows a screenshot of the Nikto tool scanning a
    web server for vulnerabilities. The command issued to give this output is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](assets/3a1d89ff-ce46-435b-bd6a-afaecbe2996b.jpg)Figure 8: Screenshot of
    the Nikto tool looking for vulnerabilities in a Microsoft-IIS web server'
  prefs: []
  type: TYPE_NORMAL
- en: Kismet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kismet is also a wireless network sniffer and intrusion detection system. It
    normally sniffs through 802.11 layer 2 traffic, which includes 802.11b, 802.11a,
    and 802.11g. The tool works with any wireless card available on the machine that
    it runs on in order to sniff.
  prefs: []
  type: TYPE_NORMAL
- en: 'Unlike other tools that use a command-line interface, Kismet is operated using
    a graphical user interface that pops up after a user opens the program. The interface
    has three sections that users use to make requests or view the status of an attack.
    When the tool scans a Wi-Fi network, it will detect whether it is secured or unsecured.
    If it is secured, it detects whether the encryption used is weak. Using a number
    of commands, the user can instruct the tools to crack into the identified Wi-Fi
    networks. *Figure 9* shows a screenshot of the Kismet GUI. The graphical user
    interface is well laid and a user interacts with the program using well-defined
    menus, as shown in the screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/2c464060-40e7-417f-9caf-bfa2a39fb815.png)Figure 9: Screenshot of
    Kismet'
  prefs: []
  type: TYPE_NORMAL
- en: Cain and Abel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cain and Abel is a Windows-based password cracking tool that is effective against
    Microsoft operating systems. Hackers with this tool can simply recover the passwords
    for their target machines. They create a network adapter that is used to listen
    in to routers, and from here they can get a number of passwords from hosts sending
    out traffic through the affected router. The tool cracks passwords using dictionary,
    brute-force, and cryptanalysis. It can also record conversations that take place
    through VOIP, unscramble passwords, uncover cached passwords, and analyze the
    routing protocols of an internal network. The tool is surprisingly effective in
    its attacks to a point where it is choosy and ignores easily fixable bugs.
  prefs: []
  type: TYPE_NORMAL
- en: To use the tool, one has to turn off the Windows firewall. From there, the tool
    can be used to create a packet-listening adapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'After this, the IP address of a router is entered. The tool will be able to
    listen to all packets sent to the router by hosts in the network. Passwords travelling
    from the hosts through the router can then be sniffed by the attacker. The following
    figure shows a screenshot of the interface of the Cain and Abel tool. The usernames
    that have *empty* in the NT Password field have no passwords while the rest have
    some password protection. The <8 field displays an asterisk (*) if the password
    is less than eight characters. The password can be hacked via dictionary, brute-force,
    and cryptanalysis attacks, as shown in the Context menu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6b3ed474-0a98-4142-a9aa-6fb80288df88.png)Figure 10: Interface of
    Cain and Abel'
  prefs: []
  type: TYPE_NORMAL
- en: Access and privilege escalation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This phase comes after an attacker has already identified a target, and scanned
    and exploited its vulnerabilities using the previously discussed tools and scanning
    tools. The main focus of the attacker in this phase is to maintain access and
    move around in the network while remaining undetected. In order to achieve this
    freedom of movement without being detected, an attacker needs to perform privilege
    escalation. This is an attack that will grant the attacker an elevated level of
    access to a network, its connected systems, and devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Privilege escalation can be done in two ways: vertical, and horizontal:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Vertical privilege escalation** | **Horizontal privilege escalation** |'
  prefs: []
  type: TYPE_TB
- en: '| Attacker moves from one account to another that has a higher level of authority
    | Attacker uses the same account, but elevates its privileges |'
  prefs: []
  type: TYPE_TB
- en: '| Tools used to escalate privileges | User account used to escalate privileges
    |'
  prefs: []
  type: TYPE_TB
- en: 'Table 1: A comparison of horizontal and vertical privilege escalation'
  prefs: []
  type: TYPE_NORMAL
- en: Vertical privilege escalation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vertical privilege escalation is where the attacker has to grant the higher
    privileges to himself/herself. It is a complex procedure since the user has to
    perform some kernel-level operations to elevate their access rights.
  prefs: []
  type: TYPE_NORMAL
- en: Once the operations are done, the attacker is left with access rights and privileges
    that allows them to run any unauthorized code. The rights acquired using this
    method are those of a super user that has higher rights than an administrator.
  prefs: []
  type: TYPE_NORMAL
- en: Due to these privileges, an attacker can perform various harmful actions that
    not even an administrator can stop. In Windows, vertical escalation is used to
    cause buffer overflows that attackers use to execute arbitrary code. This type
    of privilege escalation has already been witnessed in an attack that happened
    in May 2017 called WannaCry. WannaCry, a ransomware, caused devastation by encrypting
    computers in over 150 countries in the world and demanding a ransom of $300 to
    decrypt that would double after the second week. The interesting thing about it
    is that it was using a vulnerability called EternalBlue allegedly stolen from
    the NSA.
  prefs: []
  type: TYPE_NORMAL
- en: EternalBlue allowed the malware to escalate its privileges and run any arbitrary
    code on Windows computers.
  prefs: []
  type: TYPE_NORMAL
- en: In Linux, vertical privilege escalation is used to allow attackers to run or
    modify programs on a target machine with root user privileges.
  prefs: []
  type: TYPE_NORMAL
- en: Horizontal privilege escalation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Horizontal privilege escalation, on the other hand, is simpler since it allows
    a user to use the same privileges gained from the initial access.
  prefs: []
  type: TYPE_NORMAL
- en: A good example is where an attacker has been able to steal the login credentials
    of an administrator of a network. The administrator account already has high privileges
    that the attacker assumes immediately after accessing it.
  prefs: []
  type: TYPE_NORMAL
- en: Horizontal privilege also occurs when an attacker is able to access protected
    resources using a normal user account. A good example is where a normal user is
    erroneously able to access the account of another user. This is normally done
    through session and cookie theft, cross-site scripting, guessing weak passwords,
    and logging keystrokes.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of this phase, the attacker normally has well-established remote
    access entry points into a target system. The attacker might also have access
    to the accounts of several users. The attacker also knows how to avoid detection
    from security tools that the target might have. This leads to the next phase,
    called exfiltration.
  prefs: []
  type: TYPE_NORMAL
- en: Exfiltration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the phase where the main attack starts. Once an attack has reached this
    phase, it is considered successful. The attacker normally has unobstructed freedom
    to move around a victim's network and access all its systems and sensitive data.
    The attacker will start extracting sensitive data from an organization. This could
    include trade secrets, usernames, passwords, personally identifiable data, top-secret
    documents, and other types of data. Attackers normally steal huge chunks of data
    in this stage. This data can either be sold off to willing buyers or leaked to
    the public. There have been some ugly incidents facing big companies whose data
    has been stolen.
  prefs: []
  type: TYPE_NORMAL
- en: In 2015, a hacker group breached and stole 9.7 GB of data from a site called
    Ashley Madison, which offered spouse-cheating services. The hackers told Avid
    Life Media, the company that owned the website, to take it down or they would
    release some user data. The mother company rubbished the claims, but the hackers
    soon dumped the data on the dark web. The data included real names, addresses,
    phone numbers, email addresses, and login credentials of millions of users. The
    hackers encouraged the people affected by the leak to sue the company and claim
    damages.
  prefs: []
  type: TYPE_NORMAL
- en: In 2016, Yahoo came out and said that data belonging to over a billion user
    accounts had been stolen by hackers back in 2013\. The company said that this
    was a separate incident from the one where user data of half a million accounts
    had been stolen by hackers in 2014\. Yahoo said that in the 2013 incident, hackers
    were able to exfiltrate names, email addresses, dates of birth, and security questions
    and answers, as well as hashed passwords.
  prefs: []
  type: TYPE_NORMAL
- en: The hackers allegedly used forged cookies that allowed them to gain access to
    the company's systems without a password. In 2016, LinkedIn, was hacked and the
    user data of over 160 million accounts was stolen.
  prefs: []
  type: TYPE_NORMAL
- en: The hackers soon put the data on sale for any interested buyers. The data was
    said to contain the email and encrypted passwords of the accounts. These three
    incidents show how serious an attack becomes after the attacker is able to get
    to this stage. The victim organizations' reputations suffer, and they have to
    pay huge sums of money as fines for not securing user data.
  prefs: []
  type: TYPE_NORMAL
- en: The attackers at times do more than just exfiltration of the data. They could
    erase or modify the files stored in the compromised computers, systems, and servers.
    In March 2017, hackers demanded ransom from Apple and threatened to wipe the data
    belonging to 300 million iPhones on iCloud accounts. Although this was soon rubbished
    as a scam, it shows that it is possible. In this case, a big company such as Apple
    was put in the spotlight when the hackers tried to extort money from it. It is
    possible that another company would hurriedly pay the hackers in order to prevent
    the data of its users from being wiped out.
  prefs: []
  type: TYPE_NORMAL
- en: All of these incidents that faced Apple, Ashley Madison, LinkedIn and Yahoo
    show the significance of this stage. Hackers that manage to reach this stage are
    virtually in control. The victim might still not be in the know that data has
    already been stolen. The hackers may decide to remain silent for a while. When
    this happens, the attack enters a new phase called sustainment.
  prefs: []
  type: TYPE_NORMAL
- en: Sustainment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sustainment happens when the attackers are already freely roaming in the network
    and copying all data that they think is valuable. They enter this stage when they
    want to remain undetected. There is an option to end the attack in the previous
    stage when data has already been stolen and can either be publicized or sold.
    Highly motivated attackers that want to completely finish off a target choose
    to continue with the attack, though. Attackers install malware, such as rootkit
    viruses, that assure them of access to the victim's computers and systems whenever
    they want.
  prefs: []
  type: TYPE_NORMAL
- en: The main aim of entering this stage is to buy time to perform another and even
    more harmful attack than exfiltration. The attacker is motivated to move past
    data and software and attack the hardware of an organization. The victim's security
    tools are at this point ineffective at either detecting or stopping the attack
    from proceeding. The attacker normally has multiple access points to the victims,
    such that even if one access point is closed, their access is not compromised.
  prefs: []
  type: TYPE_NORMAL
- en: Assault
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assault is the most feared stage of any cyber-attack. It is where the attacker
    does damage exceeding the data and software. An attacker might disable or alter
    the functioning of the victim's hardware permanently. The attacker focuses on
    destroying hardware controlled by the compromised systems and computing devices.
  prefs: []
  type: TYPE_NORMAL
- en: A good example of an attack that got to this phase is the Stuxnet attack on
    Iran's nuclear station. It was the first recorded digital weapon to be used to
    wreak havoc on physical resources. Just like any other attack, Stuxnet had followed
    the previously explained phases and had been residing in the facility's network
    for a year. Initially, Stuxnet is used to manipulate valves in the nuclear facility,
    causing the pressure to build up and damage a few devices in the plant. The malware
    was then modified to attack a larger target, the centrifuges. This was achieved
    in three stages.
  prefs: []
  type: TYPE_NORMAL
- en: The malware was transmitted to the target computers through USB thumb drives,
    since they were not connected to the internet. Once it infected one of the target
    computers, the malware replicated itself and spread to the other computers. The
    malware proceeded to the next stage where it infected some software by Siemens
    called Step7 that was used to control the programming of logic controllers. Once
    this software was compromised, the malware finally gained access to the program
    logic controllers. This allowed the attackers to directly operate various machinery
    in the nuclear plant. The attackers caused the fast-spinning centrifuges to spin
    out of control and tear apart on their own.
  prefs: []
  type: TYPE_NORMAL
- en: The Stuxnet malware shows the heights that this phase can reach. The Iranian
    nuclear facility stood no chance of protecting itself as the attackers had already
    gained access, escalated their privileges, and stayed out of sight from security
    tools. The plant operators said that they were receiving many identical errors
    on the computers, but all virus scans showed that they had not been infected.
    It is clear that the attackers did a few test runs of the worm within the compromised
    facility with the valves. They found out that it was effective, and decided to
    scale up to attack the centrifuges and crash Iran's nuclear weaponry prospects.
  prefs: []
  type: TYPE_NORMAL
- en: Obfuscation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the last stage of the attack which some attackers may choose to ignore.
    The main aim here is for the attackers to cover their tracks for various reasons.
    If the attackers do not want to be known, they use various techniques to confuse,
    deter, or divert the forensic investigation process that follows a cyber-attack.
    Some attackers may, however, opt to leave their trails unmasked if they operated
    anonymously or want to boast of their exploits.
  prefs: []
  type: TYPE_NORMAL
- en: Obfuscation is done in a number of ways. One of the ways that attackers prevent
    their adversaries from catching up with them is by obfuscating their origins.
    There are a number of ways through which this can be achieved. Hackers at times
    attack outdated servers in small businesses and then laterally move to attack
    other servers or targets. Therefore, the origins of the attacks will be tracked
    down to the servers of the innocent small business that does not regularly perform
    updates.
  prefs: []
  type: TYPE_NORMAL
- en: This type of obfuscation was recently witnessed in a university where the IoT
    lights were hacked into and used to attack the university's servers. When forensic
    analysts came to investigate the DDoS attack on the servers, they were surprised
    to see that it originated from the university's 5,000 IoT lights.
  prefs: []
  type: TYPE_NORMAL
- en: Another origin obfuscation technique is the use of public school servers. Hackers
    have repeatedly used this technique where they hack into vulnerable web applications
    of public schools and move laterally into the schools' networks, installing backdoors
    and rootkit viruses to the servers. These servers are then used to launch attacks
    on bigger targets since forensic investigations will identify the public schools
    as the origin.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, social clubs are also used to mask the origins of attacks by hackers.
    Social clubs offer their members free Wi-Fi, but it is not always highly protected.
    This provides hackers with an ideal ground for infecting devices that they can
    later use to execute attacks without the knowledge of the owners.
  prefs: []
  type: TYPE_NORMAL
- en: Another obfuscation technique that hackers commonly use is the stripping out
    of metadata. Metadata can be used by law enforcement agencies to catch up with
    perpetrators of some crimes.
  prefs: []
  type: TYPE_NORMAL
- en: In 2012, a hacker by the name Ochoa was charged for hacking the FBI database
    and releasing the private details of police officers.
  prefs: []
  type: TYPE_NORMAL
- en: Ochoa, who used the name "wormer" in his hacks, was caught after he forgot to
    strip metadata from a picture that he placed on the FBI site after hacking it.
    The metadata showed the FBI the exact location of the place where the photo was
    taken and this led to his arrest. Hackers have learned from that incident that
    it is irresponsible to leave any metadata in their hacking activities as it could
    be their downfall, just as it was for Ochoa.
  prefs: []
  type: TYPE_NORMAL
- en: It is also common for hackers to cover their trails using dynamic code obfuscation.
    This involves the generation of different malicious codes to attack targets, but
    prevents detection from signature-based antivirus and firewall programs.
  prefs: []
  type: TYPE_NORMAL
- en: The pieces of code can be generated using randomizing functions or by changing
    some function parameters. Therefore, hackers make it significantly harder for
    any signature-based security tool to protect systems against their malicious codes.
    This also makes it difficult for forensic investigators to identify the attacker
    as most of the hacking is done by random code.
  prefs: []
  type: TYPE_NORMAL
- en: At times, hackers will use dynamic code generators to add meaningless codes
    to their original code. This makes a hack appear very sophisticated to investigators,
    and it slows down their progress in analyzing the malicious code. A few lines
    of code could be made to be thousands or millions of meaningless lines. This might
    discourage forensic investigators from analyzing code deeper to identify some
    unique elements or hunt for any leads towards the original coder.
  prefs: []
  type: TYPE_NORMAL
- en: Threat life cycle management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An investment in threat life cycle management can enable an organization to
    stop attacks just as they happen. It is a worthy investment for any company today
    since statistics show that the cyber breaches being witnessed are not slowing
    down. There was a 760% increase in cyber-attacks from 2014 to 2016\. Cybercrimes
    are increasing because of three things. To begin with, there are more motivated
    threat actors. Cybercrime has become a low-risk, high-return business for some
    people. Despite the increase in the number of breaches, there has been a very
    low conviction rate, which shows that very few cyber criminals get caught.
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, organizations are losing billions to these motivated attackers.
    Another reason for the increase in the number of breaches is the maturity of the
    cybercrime economy and supply chain. Cyber criminals are today able to access
    numerous exploits and malware that are for sale, provided that they can pay commensurate
    amounts of money. Cybercrime has become a business that has sufficient suppliers
    and willing buyers. The buyers are multiplying with the advent of hacktivism and
    cyberterrorism. This is, therefore, leading to an unprecedented increase in the
    number of breaches.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, breaches are on the rise because of the expansion of attack surfaces
    by organizations. New technologies have been adopted, bringing new vulnerabilities
    and therefore widening the surface area that cybercriminals can attack.
  prefs: []
  type: TYPE_NORMAL
- en: The **Internet of Things** (**IoT**), one of the latest additions to organizational
    technologies, has already caused a number of companies to be hacked. The future
    is dull if organizations do not take the required precautions to protect themselves.
  prefs: []
  type: TYPE_NORMAL
- en: The best investment that they can make now is in threat life cycle management
    to allow them to respond appropriately to attacks based on the phase that they
    are in. In 2015, an investigation report by Verizon claimed that, out of all attacks,
    84% left evidence in the log data. This means that with the appropriate tools
    and mindset, these attacks could have been mitigated early enough to prevent any
    damage. There are six phases to threat life cycle management.
  prefs: []
  type: TYPE_NORMAL
- en: The first phase is forensic data collection. Prior to the detection of a full
    blown threat, some evidence is observable in the IT environment. Threats can come
    through any of the seven domains of IT. Therefore, the more of the IT infrastructure
    the organization can see, the more threats it can detect.
  prefs: []
  type: TYPE_NORMAL
- en: There are three applicable things at this phase. To start off, organizations
    should collect security event and alarm data. Today, organizations use countless
    security tools to help them nab attackers and prevent their attacks from being
    successful. Some of these tools only give warnings and, therefore, simply generate
    events and alarms. Some powerful tools may not sound alarms for small-level detections,
    but they will generate security events. However, tens of thousands of events may
    be generated daily, thus confusing an organization on which ones to focus on.
    Another applicable thing in this phase is the collection of log and machine data.
    This type of data can provide a deeper visibility of what actually goes on in
    an organizational network on a per-user or per-application basis. The last applicable
    thing in this stage is the collection of forensic sensor data. Forensic sensors,
    such as network and endpoint forensic sensors, are even more in depth, and they
    come in handy when logs are not available.
  prefs: []
  type: TYPE_NORMAL
- en: The next phase in threat life cycle management is the discovery phase. This
    comes after the organization has established visibility and thus can detect attacks
    early enough. This phase can be achieved in two ways.
  prefs: []
  type: TYPE_NORMAL
- en: The first of these is search analytics. This is where IT employees in the organization
    carry out software-aided analytics. They are able to review reports and identify
    any known or reported exceptions from network and antivirus security tools. This
    process is labor intensive and therefore should not be the sole analytics method
    that a whole organization should rely on.
  prefs: []
  type: TYPE_NORMAL
- en: The second way of achieving this phase is by using machine analytics. This is
    analytics that is purely done by machines/software. The software normally has
    machine learning capabilities and, therefore, artificial intelligence, enabling
    them to autonomously scan large amounts of data and give brief and simplified
    results to people to further analyze. It is estimated that over a quarter of all
    security tools will have machine learning capabilities by the beginning of 2018\.
    Machine learning simplifies the threat discovery process since it is automated
    and continually learns new threats on its own.
  prefs: []
  type: TYPE_NORMAL
- en: Next is the qualification phase, where the threats discovered in the previous
    phase are assessed to find out their potential impact, urgency of resolution,
    and how they can be mitigated. The phase is time sensitive, as an identified attack
    may mature faster than expected.
  prefs: []
  type: TYPE_NORMAL
- en: To make matters worse, it is not simple, and consumes a lot of manual labor
    and time. In this phase, false positives are a big challenge, and they must be
    identified to prevent the organization from using resources against nonexistent
    threats. Inefficient qualification may lead to true positives being missed and
    false positives being included. Legitimate threats could, therefore, go unnoticed
    and unattended. As you can see, this is, a sensitive phase in the threat management
    process.
  prefs: []
  type: TYPE_NORMAL
- en: The next phase is the investigation phase where threats categorized as true
    positives are fully investigated to determine whether or not they have caused
    a security incident.
  prefs: []
  type: TYPE_NORMAL
- en: This phase requires continuous access to forensic data and intelligence about
    very many threats. It is mostly automated, and this simplifies the lookup process
    for a threat among millions of known threats. This phase also looks at any potential
    damage a threat might have done in the organization before it was identified by
    the security tools. Based on information gathered from this phase, the IT team
    of an organization can proceed accordingly against a threat.
  prefs: []
  type: TYPE_NORMAL
- en: Next comes the neutralization phase. Here, mitigations are applied to eliminate
    or reduce the impact of an identified threat to an organization. Organizations
    strive to get to this stage as quickly as possible since threats involving ransomware
    or privileged user accounts might do irreversible damage in a short period of
    time.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, every second counts when eliminating identified threats. This process
    is also automated to ensure a higher throughput of deleting threats, and to also
    ease information sharing and collaboration between several departments in an organization.
  prefs: []
  type: TYPE_NORMAL
- en: The last phase is recovery, which only comes after an organization is sure that
    its identified threats have been neutralized and that any risks that it faced
    are put under control. The aim of this phase is to restore the organization to
    a position it enjoyed prior to being attacked by threats. Recovery is less time
    critical, and it highly depends on the type of software or service being made
    available again. This process, however, requires care to be taken; changes that
    might have been made during an attack incident or during the response need to
    be backtracked. These two processes may cause undesired configurations or actions
    to have been taken to either compromise a system or prevent it from sustaining
    further damage. It is essential that systems are brought back to the exact state
    that they were in before being attacked. There are automated recovery tools that
    can return systems automatically to a backed-up state. Due diligence must, however,
    be carried out to ensure that no backdoors are introduced or are left behind.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'M. Clayton, *Clues about who''s behind recent cyber attacks on US banks*, The
    Christian Science Monitor, pp. 11, 2012\. Available: [https://search.proquest.com/docview/1081779990](https://search.proquest.com/docview/1081779990).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'B. Harrison, E. Svetieva, and A. Vishwanath, *Individual processing of phishing
    emails*, Online Information Review, vol. 40, (2), pp. 265-281, 2016\. Available:
    [https://search.proquest.com/docview/1776786039](https://search.proquest.com/docview/1776786039).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'M. Andress, *Network vulnerability assessment management: Eight network scanning
    tools offer beefed-up management and remediation*, Network World, vol. 21, (45),
    pp. 48-48,50,52, 2004\. Available: [https://search.proquest.com/docview/215973410](https://search.proquest.com/docview/215973410).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Nmap: the Network Mapper - Free Security Scanner*, *Nmap.org*, 2017\. [Online].
    Available: [https://nmap.org/](https://nmap.org/). [Accessed: 20- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Metasploit Unleashed*, Offensive-security.com, 2017\. [Online]. Available:
    [https://www.offensive-security.com/metasploit-unleashed/msfvenom/](https://www.offensive-security.com/metasploit-unleashed/msfvenom/).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Free Download John the Ripper password cracker* |, Hacking Tools, 2017\. [Online].
    Available: [http://www.hackingtools.in/free-download-john-the-ripper-password-cracker/](http://www.hackingtools.in/free-download-john-the-ripper-password-cracker/).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'R. Upadhyay, *THC-Hydra Windows Install Guide Using Cygwi*n, *HACKING LIKE
    A PRO*, 2017\. [Online]. Available: [https://hackinglikeapro.blogspot.co.ke/2014/12/thc-hydra-windows-install-guide-using.html](https://hackinglikeapro.blogspot.co.ke/2014/12/thc-hydra-windows-install-guide-using.html).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'S. Wilbanks and S. Wilbanks, *WireShark*, Digitalized Warfare, 2017\. [Online].
    Available: [http://digitalizedwarfare.com/2015/09/27/keep-calm-and-use-wireshark/](http://digitalizedwarfare.com/2015/09/27/keep-calm-and-use-wireshark/).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Packet Collection and WEP Encryption, Attack & Defend Against Wireless Networks
    - 4*, *Ferruh.mavituna.com*, 2017\. [Online]. Available: [http://ferruh.mavituna.com/paket-toplama-ve-wep-sifresini-kirma-kablosuz-aglara-saldiri-defans-4-oku/](http://ferruh.mavituna.com/paket-toplama-ve-wep-sifresini-kirma-kablosuz-aglara-saldiri-defans-4-oku/).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Hack Like a Pro: How to Find Vulnerabilities for Any Website Using Nikto*,
    *WonderHowTo*, 2017\. [Online]. Available: [https://null-byte.wonderhowto.com/how-to/hack-like-pro-find-vulnerabilities-for-any-website-using-nikto-0151729/](https://null-byte.wonderhowto.com/how-to/hack-like-pro-find-vulnerabilities-for-any-website-using-nikto-0151729/).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Kismet*, *Tools.kali.org*, 2017\. [Online]. Available: [https://tools.kali.org/wireless-attacks/kismet](https://tools.kali.org/wireless-attacks/kismet).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A. Iswara, *How to Sniff People''s Password? (A hacking guide with Cain & Abel
    - ARP POISONING METHOD)*, Hxr99.blogspot.com, 2017\. [Online]. Available: [http://hxr99.blogspot.com/2011/08/how-to-sniff-peoples-password-hacking.html](http://hxr99.blogspot.com/2011/08/how-to-sniff-peoples-password-hacking.html).
    [Accessed: 21- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A. Gouglidis, I. Mavridis, and V. C. Hu, *Security policy verification for
    multi-domains in cloud systems*, International Journal of Information Security,
    vol. 13, (2), pp. 97-111, 2014\. Available: [https://search.proquest.com/docview/1509582424](https://search.proquest.com/docview/1509582424)
    DOI: [http://dx.doi.org/10.1007/s10207-013-0205-x](http://dx.doi.org/10.1007/s10207-013-0205-x).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'R. Oliver, *Cyber insurance market expected to grow after WannaCry attack*,FT.Com,
    2017\. Available: [https://search.proquest.com/docview/1910380348](https://search.proquest.com/docview/1910380348).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'N. Lomas. (Aug 19). Full Ashley Madison Hacked Data Apparently Dumped On Tor.
    Available: [https://search.proquest.com/docview/1705297436](https://search.proquest.com/docview/1705297436).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'D. FitzGerald, *Hackers Used Yahoo''s Own Software Against It in Data Breach;
    ''Forged cookies'' allowed access to accounts without password*, Wall Street Journal
    (Online), 2016\. Available: [https://search.proquest.com/docview/1848979099](https://search.proquest.com/docview/1848979099).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'R. Sinha, *Compromised! Over 32 mn Twitter passwords reportedly hacked Panache]*,
    The Economic Times (Online), 2016\. Available: [https://search.proquest.com/docview/1795569034](https://search.proquest.com/docview/1795569034).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'T. Bradshaw, *Apple''s internal systems hacked*, FT.Com, 2013\. Available:
    [https://search.proquest.com/docview/1289037317](https://search.proquest.com/docview/1289037317).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'M. Clayton, *Stuxnet malware is ''weapon'' out to destroy Iran''s Bushehr nuclear
    plant?*,¬†The Christian Science Monitor, 2010\. Available: [https://search.proquest.com/docview/751940033](https://search.proquest.com/docview/751940033).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'D. Palmer, *How IoT hackers turned a university''s network against itself*,
    ZDNet, 2017\. [Online]. Available: [http://www.zdnet.com/article/how-iot-hackers-turned-a-universitys-network-against-itself/](http://www.zdnet.com/article/how-iot-hackers-turned-a-universitys-network-against-itself/).
    [Accessed: 04- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'S. Zhang, *The life of an exhacker who is now banned from using the internet*,
    Gizmodo.com, 2017\. [Online]. Available: [http://gizmodo.com/the-life-of-an-ex-hacker-who-is-now-banned-from-using-t-1700074684](http://gizmodo.com/the-life-of-an-ex-hacker-who-is-now-banned-from-using-t-1700074684).
    [Accessed: 04- Jul- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Busted! FBI led to Anonymous hacker after he posts picture of girlfriend''s
    breasts online*, *Mail Online*, 2017\. [Online]. Available: [http://www.dailymail.co.uk/news/article-2129257/Higinio-O-Ochoa-III-FBI-led-Anonymous-hacker-girlfriend-posts-picture-breasts-online.html](http://www.dailymail.co.uk/news/article-2129257/Higinio-O-Ochoa-III-FBI-led-Anonymous-hacker-girlfriend-posts-picture-breasts-online.html).
    [Accessed: 28- Nov- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter gave an overall picture of the phases commonly involved in cyber-attacks.
    It exposed the mindset of an attacker. It showed how an attacker gets details
    about a target using simple methods and advanced intrusion tools to later on use
    this information to attack users. It has discussed the two main ways through which
    attackers escalate their privileges when they attack systems. It has explained
    how cyberattackers exfiltrate data from systems that they have access to. It has
    also looked at scenarios where attackers proceed to attack the hardware of a victim
    to cause more damage. It has then discussed ways through which attackers maintain
    anonymity. Lastly, the chapter has highlighted ways through which users can interrupt
    the threat life cycle and thwart attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will take an in-depth look at reconnaissance to fully understand
    how attackers collect information about users and systems using social media,
    compromised websites, emails, and scanning tools.
  prefs: []
  type: TYPE_NORMAL
