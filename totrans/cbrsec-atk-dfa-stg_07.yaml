- en: Lateral Movement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, the tools and techniques that attackers use to compromise
    and gain entry into a system were discussed. This chapter will focus on the predominant
    thing that they try to do after a successful entry; solidifying and expanding
    their presence. This is what is referred to as lateral movement. Attackers will
    move from device to device after the initial hack with the hopes of accessing
    high-valued data. They will also be looking at ways in which they can gain additional
    control of the victim's network. At the same time, they will be trying not to
    trip alarms or raise any alerts. This phase of the attack life cycle can take
    a long time. In highly complicated attacks, the phase takes several months in
    order for the hackers to reach the desired target device.
  prefs: []
  type: TYPE_NORMAL
- en: The lateral movement involves scanning a network for other resources, the collecting
    and exploiting of credentials, or the collection of more information for exfiltration.
    Lateral movement is difficult to stop. This is because organizations conventionally
    set up security measures at several gateways of the network. Consequently, malicious
    behavior is only detected when transitioning security zones but not within them.
    It is an important stage in the cyber threat life cycle as it enables attackers
    to acquire information and a level of access that is more harmful. Cybersecurity
    experts say that it is the most critical phase in an attack since it is where
    an attacker seeks assets, more privileges, and traverses several systems till
    he is satisfied that he will accomplish his goal.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Infiltration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network mapping
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoiding alerts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing lateral movement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infiltration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The previous chapter discussed the reconnaissance efforts hackers make to get
    information that may allow them to get into a system. The external reconnaissance
    methods were dumpster diving, using social media, and social engineering. Dumpster
    diving involved collecting valuable data from devices that an organization had
    disposed of. It was seen that social media can be used to spy on target users
    and get credentials that they may post carelessly. Multiple social engineering
    attacks were also discussed, and they clearly showed that an attacker could coerce
    a user to give out login credentials. The reasons why users fall for social engineering
    attacks were explained using the six levers used in social engineering. Internal
    reconnaissance techniques were discussed as well as the tools used for sniffing
    and scanning for information that can enable an attacker to gain entry to a system.
    Using the two types of reconnaissance, an attacker would be able to gain entry
    to a system. The important question that would follow would be, what can the attacker
    do with this access?
  prefs: []
  type: TYPE_NORMAL
- en: Network mapping
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Following a successful attack, attackers will try to map out the hosts in a
    network in order to discover the ones that contain valuable information. There
    are a number of tools that can be used here to identify the hosts connected in
    a network. One of the most commonly used is `nmap` and this section shall explain
    the mapping capabilities that this tool has. The tool, like many others, will
    list all the hosts that it detects on the network through a host discovery process.
    This is initiated using a command to scan an entire network subnet as shown in
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'A scan can also be done for a certain range of IP addresses as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is a command that can be used to scan specific ports on a target:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: With this information, the attacker can go ahead and test the operating system
    running on computers of interest in a network. If the hacker can tell the operating
    system and particular version running on a target device, it will be easy to select
    hacking tools that can effectively be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a command used to find out the operating system and version
    running on a target device:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The `nmap` tool has complex OS fingerprinting capabilities and will almost always
    succeed in telling us the operating systems of devices, such as routers, workstations,
    and servers.
  prefs: []
  type: TYPE_NORMAL
- en: The reason why network mapping is possible, and to a large extent easy to do,
    is because of the challenges involved in protecting against it. There is an option
    for organizations to completely shield their systems to prevent the likes of `nmap`
    scans, but this is mostly done through **network intrusion detection systems**
    (**NDISs**). When hackers are scanning individual targets, they scan a local segment
    of a network and thus avoid passing through NDISs. To prevent the scan from happening,
    an organization can opt to have host-based intrusion detection systems, but most
    network administrators will not consider doing that in a network, especially if
    the number of hosts is huge.
  prefs: []
  type: TYPE_NORMAL
- en: The increased monitoring systems in each host will lead to more alerts and require
    more storage capacity and depending, on the size of the organization, this could
    lead to terabytes of data most of which would be false positives. This adds on
    to the challenge that security teams in organizations have whereby they only have
    sufficient resources and willpower to investigate, on average, 4% of all cybersecurity
    alerts generated by security systems. The constant detection of false positives
    in voluminous quantities also discourages security teams from following up on
    threats identified in networks.
  prefs: []
  type: TYPE_NORMAL
- en: Factoring in the challenges of monitoring for lateral movement activities, the
    best hopes for victim organizations are host-based security solutions. However,
    hackers commonly come armed with the means to disable or blind them.
  prefs: []
  type: TYPE_NORMAL
- en: Avoiding alerts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The attacker needs to avoid raising alarms at this stage. If network administrators
    detect that there is a threat on the network, they will thoroughly sweep through
    it and thwart any progress that the attacker will have made. Many organizations
    spend a substantial amount of money on security systems to nab attackers. Security
    tools are increasingly becoming more effective, and they can identify many signatures
    of hacking tools and malware that hackers have been using. This, therefore, calls
    for attackers to act wisely. There has been a trend in attackers using legitimate
    tools for lateral movement. These are tools and techniques that are known by the
    system or that belong to a system and therefore do not generally pose a threat.
    Security systems, therefore, ignore them since they are legitimate. These tools
    and techniques have enabled attackers to move around in highly secured networks
    right under the noses of security systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an example of how attackers can avoid detection by using PowerShell.
    It will be seen that, instead of downloading a file, which would be scanned by
    the target''s antivirus system, PowerShell is used. It directly loads a PS1 file
    from the internet instead of downloading then loading:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Such a command will prevent the file that is being downloaded from being flagged
    by antivirus programs. Attackers can also take advantage of **alternate data streams**
    (**ADS**) in a Windows NT file system ( NTFS)to avoid alerts. By using ADS, attackers
    can hide their files in legitimate system files, which can be a great strategy
    for moving between systems. The following command is going to fork Netcat ([https://github.com/diegocr/netcat](https://github.com/diegocr/netcat))
    into a valid Windows utility called **Calculator** (`calc.exe`) and change the
    filename (`nc.exe`) to `svchost.exe`. This way the process name won''t raise any
    flags since it is part of the system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/49e25622-e793-4537-9850-447c60bdf0f9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you simply use the `dir` command to list all files in this folder, you won''t
    see the file. However, if you use the `streams` tool from `Sysinternals`, you
    will be able to see the entire name as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/19eb77ae-c1b1-4103-9da2-fbbbe051cd47.png)'
  prefs: []
  type: TYPE_IMG
- en: Performing lateral movement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Lateral movement can be carried out using different techniques and tactics.
    Attackers utilize them to move within the network from one device to the other.
    Their aim is to strengthen their presence in a network and to have access to many
    devices that either contains valuable information or are used to control sensitive
    functions such as security. In this section, we go through the most common tools
    and tactics.
  prefs: []
  type: TYPE_NORMAL
- en: Port scans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is probably the only old technique that has remained in the hacking game.
    It has also remained fairly unchanged and therefore gets executed the same way
    through various tools. Port scans are used in lateral movement for the purpose
    of identifying systems or services of interest that hackers can attack and attempt
    to capture valuable data from. These systems are mostly database servers and web
    applications. Hackers have learned that quick and full-blown port scans easily
    get detected and therefore they use slower scanning tools that get past all network
    monitoring systems. Monitoring systems are normally configured to identify unusual
    behaviors on a network but by scanning at a slow-enough speed, the monitoring
    tools will not detect the scanning activity.
  prefs: []
  type: TYPE_NORMAL
- en: Most of the scanning tools used were discussed in [Chapter 4](0acb9516-3ff9-43d8-a9f8-1d1d34232b7e.xhtml),
    *Reconnaissance*. The `nmap` tool is normally a preference of many since it has
    many features and is always reliable and dependable.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous chapter, that is, [Chapter 6](43c0a1a3-5ebf-4fc9-a122-da0b01eecf53.xhtml),
    *Chasing User’s Identity*, a lot of information was given on how `nmap` operates
    and what kinds of information it gives to its users. A default `nmap` scan uses
    full TCP connection handshakes, which are sufficient for finding other targets
    for the hackers to move to. The following are some examples of how port scans
    are done in nmap:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This command only scans to check whether port `80` is open on the target machine
    with the IP `192.168.4.16`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: One can also check whether multiple ports are open by separating them with a
    comma in the command as shown previously.
  prefs: []
  type: TYPE_NORMAL
- en: Sysinternals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sysinternals is a suite of tools that was developed by a company called Sysinternals
    before being acquired by Microsoft. The company came up with a suite of tools
    that allows administrators to control Windows-based computers from a remote terminal.
    Unfortunately, the suite is also being used by hackers today. Attackers use Sysinternals
    to upload, execute, and interact with executables on remote hosts (1). The entire
    suite works from a command-line interface and can be scripted. It has the advantage
    of stealth since it does not give alerts to users on a remote system when it is
    in operation. The tools contained in the suite are also classified by Windows
    as legit system admin tools and therefore are ignored by antivirus programs.
  prefs: []
  type: TYPE_NORMAL
- en: Sysinternals enables external actors to connect to remote computers and run
    commands that can reveal information about running processes and, if needed, kill
    them or stop services. This simple definition of the tool already reveals the
    immense power that it possesses. If used by a hacker, it could stop security software
    deployed by an organization on its computers and servers. Sysinternals utilities
    can do many tasks in the background of a remote computer and this makes it more
    applicable and useful for hackers than **Remote Desktop programs** (**RDPs**).
    The Sysinternals suite is made up of 13 tools that do different operations on
    remote computers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first six that are commonly used are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`PsExec`: Used for executing processes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsFile`: That shows open files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsGetSid`: That displays security identifiers of users'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsInfo`: That gives detailed information about a computer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsKill`: That kills processes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsList`: That lists information about processes'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next bunch consists of:'
  prefs: []
  type: TYPE_NORMAL
- en: '`PsLoggedOn`: That lists logged in accounts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsLogList`: That pulls event logs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsPassword`: That changes passwords'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsPing`: That starts ping requests'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsService`: That can make changes to Windows services'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsShutdown`: Can shut down a computer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PsSuspend`: Can suspend processes (1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The exhaustive list of Sysinternals shows that it carries some powerful tools.
    Armed with these tools and the right credentials, an attacker can quickly move
    from device to device in a network.
  prefs: []
  type: TYPE_NORMAL
- en: Of all the listed tools, `PsExec` is the most powerful tool. It can execute
    anything that can run on a local computer's command prompt, on a remote one. Therefore,
    it can alter a remote computer's registry values, execute scripts and utilities,
    and connect a remote computer to another one. The advantage of this tool is that
    the outputs of commands are shown on the local computer rather than the remote
    one. Therefore, even if there is an active user on the remote computer, no suspicious
    activities can be detected. The `PsExec` tool connects to a remote computer over
    a network, executes some code, and sends back the output to a local computer without
    raising alarms to the users of the remote computer.
  prefs: []
  type: TYPE_NORMAL
- en: One unique feature about the `PsExec` tool is that it can copy programs directly
    onto a remote computer. Therefore, if a certain program is needed by hackers on
    the remote computer, `PsExec` can be commanded to copy it temporarily to the remote
    computer and remove it after the connection ceases.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an example of how this can be done:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: The previous command copies the program `autorunsc.exe` to the remote computer.
    The part of the command that says `-accepteula` is used to make sure that the
    remote computer accepts the terms and conditions or end user license agreements
    that a program may prompt for.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `PsExec` tool can also be used to interact nefariously with a logged-on
    user. This is through programs such as Notepad on the remote computer. An attacker
    can launch `notepad` on a remote computer by supplying the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The `-i` instructs the remote computer to launch the application and the `-d`
    returns control to the attacker before the launching of `notepad` is completed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, the `PsExec` tool is able to edit registry values, allowing applications
    to run with system privileges and have access to data that is normally locked.
    Registry edits can be dangerous as they can directly affect the running of computer
    hardware and software. Damages to the registry can cause a computer to stop functioning.
    On a local computer, the following command can be used to open the register with
    SYSTEM user-level permissions thus with the abilities to see and change normally
    hidden values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'From the previous illustrations, it can be said that `PsExec` is a very powerful
    tool. The following diagram shows a remote terminal session with `PsExec` running
    on `cmd.exe` and being used to find out the network information of a remote computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a1ebe4bf-09a6-4dcc-b64e-cff9169de483.jpg)'
  prefs: []
  type: TYPE_IMG
- en: File shares
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is another method commonly used by attackers for performing lateral movement
    in networks that they have already compromised. The main purpose of this method
    is to capture most of the data available in a network. File shares are collaboration
    mechanisms used in many networks. They enable clients to access files stored on
    the server or on some individual computers. Sometimes, the servers will contain
    sensitive information such as customer databases, operating procedures, software,
    template documents, and company secrets. Built-in administrative shares for full
    hard drives on machines come in handy, as they give access to whoever is on a
    network to read and write whole hard disks.
  prefs: []
  type: TYPE_NORMAL
- en: File shares give hackers the advantage of low probability of detection since
    these are legitimate traffic channels that are normally not monitored. A malicious
    actor will, therefore, have ample time to access, copy, and even edit the contents
    of any shared media in a network. It is also possible to plant other bugs in the
    shared environment to infect the computers that copy files. The technique is highly
    effective when hackers have already gotten access to an account that has elevated
    privileges. With these privileges, they can access most of the shared data with
    read and write permissions.
  prefs: []
  type: TYPE_NORMAL
- en: The following are some of the PowerShell commands that can be used in order
    to do file shares.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first command will specify the file that is to be shared and the rest of
    the commands will turn it into a shared folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Another option is to use the PowerShell utility, Nishang ([https://github.com/samratashok/nishang](https://github.com/samratashok/nishang)).
    Just as we mentioned previously, you can also use ADS here to hide files, in this
    case, you can use the `Invoke-ADSBackdoor` command.
  prefs: []
  type: TYPE_NORMAL
- en: Remote Desktop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Remote desktop is another legitimate way used to access and control computers
    remotely and it can be abused by hackers for the purpose of lateral movement.
    The main advantage that this tool has over Sysinternals is that it gives the attacker
    a full interactive **graphical user interface** (**GUI**) of the remote computer
    being attacked. Remote Desktop can be launched when hackers have already compromised
    a computer inside a network. With the valid credentials and knowledge of the IP
    address or the computer name of the target, hackers can use Remote Desktop to
    gain remote access. From the remote connections, attackers can steal data, disable
    security software, or install malware to enable them to compromise more machines.
    Remote Desktop has been used in many instances to gain access to servers that
    control enterprise security software solutions and network monitoring and security
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: It is notable that Remote Desktop connections are fully encrypted and therefore
    opaque to any monitoring systems. Therefore, they cannot be flagged by security
    software since they are a common administrative mechanism used by IT staff.
  prefs: []
  type: TYPE_NORMAL
- en: The main disadvantage of Remote Desktop is that a user working on the remote
    computer can tell when an external person has logged on to the computer. Therefore,
    a common practice by attackers is to use Remote Desktop at times when no users
    are physically on the target computer or server. Nights, weekends, holidays, and
    lunch breaks are common attack times when it is almost certain that the connections
    will go unnoticed. Additionally, since server versions of Windows OSes typically
    allow multiple sessions to run simultaneously, it would hardly be possible for
    a user to notice an RDP connection while on the server.
  prefs: []
  type: TYPE_NORMAL
- en: There is, however, a peculiar method of hacking a target using Remote Desktop
    by using an exploit called EsteemAudit.
  prefs: []
  type: TYPE_NORMAL
- en: EsteemAudit is one of the exploits that the hacking group Shadow Brokers stole
    from the NSA. Earlier chapters showed that the same group released EternalBlue
    by the NSA and it was used later on in the WannaCry ransomware. EsteemAudit exploits
    a vulnerability in the Remote Desktop application in earlier versions of Windows,
    that is, Windows XP and Windows Server 2003\. The affected versions of Windows
    are no longer supported by Microsoft and the company has not released a patch.
    It is however likely that it may do so, just as it did when EternalBlue was released
    and Microsoft followed it with a patch for all its versions, including Windows
    XP that it had ceased supporting.
  prefs: []
  type: TYPE_NORMAL
- en: EsteemAudit takes advantage of an inter-chunk heap overflow that is part of
    an internal structure of the system heap, which in turn is a component of Windows
    Smart Card. The internal structure has a buffer with a limited size of `0x80`
    and stores smart card information. Adjacent to it is two pointers. There is a
    call that hackers have discovered that can be made without boundary checks. It
    can be used to copy data larger than `0x80` to the adjacent pointers causing an
    overflow in the `0x80` buffer. The attackers use EsteemAudit to issue the rogue
    instructions that cause the overflow. The end result of the attack is the compromise
    of Remote Desktops, allowing unauthorized people into remote machines. The buffer
    overflows are used to achieve this.
  prefs: []
  type: TYPE_NORMAL
- en: PowerShell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is yet another legitimate Windows OS tool that hackers are using for malicious
    purposes. In this chapter, we have already shown many ways to use legitimate PowerShell
    commands for malicious tasks. The general trend of using these legitimate tools
    during attacks is to avoid being caught by security software. Security companies
    are catching up with most malware and identifying their signatures. Hackers, therefore,
    try to use tools that are known to be safe and legitimate to operating systems
    as much as possible.
  prefs: []
  type: TYPE_NORMAL
- en: PowerShell is a built-in, object-oriented scripting tool that is available in
    modern versions of Windows. It is extremely powerful and can be used to steal
    in-memory sensitive information, make modifications to system configurations,
    and also to automate the movement from one device to another. There are several
    hacking-and security-oriented PowerShell modules being used today. The most common
    ones are **PowerSploit** and **Nishang**.
  prefs: []
  type: TYPE_NORMAL
- en: There were recent breaches in the US by Chinese hackers, which investigators
    said was due to the power of PowerShell being leveraged by the attackers (8).
    It is said that the Chinese hackers deployed PowerShell scripts to run as scheduled
    tasks on several Windows machines. The scripts were passed to PowerShell through
    its command line interface instead of using an external file so they did not trigger
    antivirus programs (8). The scripts, once executed, downloaded an executable and
    then were run from a remote access tool. This ensured that no traces would be
    left for forensic investigators and they were successful as they left minimal
    footprints.
  prefs: []
  type: TYPE_NORMAL
- en: Windows Management Instrumentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Windows Management Instrumentation** (**WMI**) is Microsoft''s inbuilt framework
    that manages the way in which Windows systems are configured. Since it is a legitimate
    framework in the Windows environment, hackers can use it without the worries of
    being detected by security software. The only catch for hackers is that they must
    already have access to the machine. The attack strategy chapter dived deeply into
    ways that hackers can gain access to computers.'
  prefs: []
  type: TYPE_NORMAL
- en: The framework can be used to start processes remotely, to make system information
    queries, and also store persistent malware. For lateral movement, there are a
    few ways in which hackers use it. They can use it to support the running of command-line
    commands, getting the outputs, modifying registry values, running PowerShell scripts,
    receiving outputs, and lastly to interfere with the running of services.
  prefs: []
  type: TYPE_NORMAL
- en: The framework can also support many data-gathering operations. It is commonly
    used as a quick system-enumerating tool by hackers to classify targets quickly.
    It can give hackers information, such as the users of a machine, the local and
    network drives the machine are connected to, IP addresses, and installed programs.
    It also has the ability to log off users, and shut down or restart computers.
    It can also determine whether a user is actively using a machine based on activity
    logs. In a famous hack on Sony Pictures in 2014, WMI was key, as it was used by
    the attackers to launch malware that had been installed on machines in the organization's
    network.
  prefs: []
  type: TYPE_NORMAL
- en: WMImplant is an example of a hacking tool that leverages the WMI framework to
    execute malicious actions on a target machine. WMImplant is well-designed and
    has a menu that resembles Metasploit's Meterpreter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a diagram of the main menu of the tool showing the actions
    that it can be commanded to do:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3827a4a2-b480-4028-8ea3-d25005d3ef99.png)'
  prefs: []
  type: TYPE_IMG
- en: As can be seen from the menu, the tool is very powerful. It has specific commands
    custom-designed for lateral movement in remote machines. It enables a hacker to
    give `cmd` commands, get outputs, modify the registry, run PowerShell scripts,
    and finally, create and delete services.
  prefs: []
  type: TYPE_NORMAL
- en: The main difference between WMImplant and other remote access tools such as
    Meterpreter is that it runs natively on a Windows system while the others have
    to be loaded on a computer first.
  prefs: []
  type: TYPE_NORMAL
- en: Scheduled tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Windows has a command that attackers can use to schedule automated execution
    of tasks on a local or remote computer. This removes the hacker from the scene
    of the crime. Therefore, if there is a user on the target machine, the tasks will
    be performed without raising eyebrows. Scheduled tasks are not just used for timing
    the executions of tasks. Hackers also use them to execute tasks with SYSTEM user
    privileges. In Windows, this can be considered a privilege escalation attack since
    the SYSTEM user has complete control over the machine on which a scheduled task
    is executed. Without system privileges this type of hack would not work, since
    the latest versions of Windows OSes have been made to prevent this behavior by
    scheduled tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Scheduled tasks are also used by attackers for stealing data over time without
    raising alarms. They are the perfect way to schedule tasks that may use a lot
    of CPU resources and network bandwidth. Scheduled tasks are therefore appropriate
    when huge files are to be compressed and transferred over a network. The tasks
    could be set to execute at night or during weekends when no users will be on the
    target machines.
  prefs: []
  type: TYPE_NORMAL
- en: Token stealing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a new technique that hackers have been reported to be using for lateral
    movement once they get into a network. It is highly effective and has been used
    in almost all the famous attacks that have been reported since 2014\. The technique
    makes use of tools such as Mimikatz (as mentioned in [Chapter 6](43c0a1a3-5ebf-4fc9-a122-da0b01eecf53.xhtml),
    *Chasing User's Identity*), and Windows credential editor to find user accounts
    in a machine's memory. It can then use them to create Kerberos tickets through
    which an attacker can elevate a normal user to the status of a domain administrator.
    However, an existing token with domain admin privileges or a domain admin user
    account must be found in the memory for this to happen. Another challenge in the
    use of these tools is that they can be detected by antivirus programs for performing
    suspicious actions. However, as is the case with most tools, attackers are evolving
    them and creating fully undetectable versions of them. Other attackers are using
    other tools such as PowerShell to avoid detection. This technique is nevertheless
    a big threat as it can elevate user privileges very quickly. It can be used in
    collaboration with tools that can stop antivirus programs to fully prevent detection.
  prefs: []
  type: TYPE_NORMAL
- en: Pass-the-hash
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As mentioned in the previous chapter, this is a tactic that hackers are using
    that takes advantage of how NTLM protocols work. Instead of brute-forcing their
    way into a system or using dictionary attacks, they are using password hashes.
    They are therefore not seeking plaintext passwords, they just use the password
    hashes when requested to authenticate themselves into remote machines. Therefore,
    attackers are looking for the password hashes in computers which they can in turn
    pass to services that require authentication.
  prefs: []
  type: TYPE_NORMAL
- en: Besides the examples that were given in [Chapter 6](43c0a1a3-5ebf-4fc9-a122-da0b01eecf53.xhtml),* Chasing
    User's Identity* you can also use the PowerShell utility Nishang to harvest all
    local account password hashes with the `Get-PassHashes` command.
  prefs: []
  type: TYPE_NORMAL
- en: Active Directory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the richest source of information for the devices connected to a domain
    network. It also gives system administrators control over these devices. It can
    be referred to as a phone book of any network and it stores information about
    all the valuable things that hackers might be looking for in a network. The **Active
    Directory** (**AD**) has so many capabilities that hackers are ready to exhaust
    their resources to get to it once they breach a network. Network scanners, insider
    threats, and remote access tools can be used to give hackers access to the AD.
  prefs: []
  type: TYPE_NORMAL
- en: The AD stores the names of users in a network alongside their roles in an organization.
    The directory allows administrators to change passwords for any user in a network.
    This is a very easy way for hackers to gain access to other computers on a network
    with minimal effort. The AD also allows administrators to change the privileges
    of users and therefore hackers can use it to elevate some accounts to domain administrators.
    There are very many things that hackers can do from the AD. It is, therefore,
    a key target of an attack and the reason why organizations strive to secure the
    server that plays this role.
  prefs: []
  type: TYPE_NORMAL
- en: By default, the authentication process in a Windows system that belongs to an
    AD domain will take place using Kerberos. There also many services that will register
    on the AD to get their **service principal name** (**SPN**). Depending on the
    Red Team's strategy, the first step in attacking an AD is to perform recon on
    the environment, which could start by only harvesting basic information from the
    domain. One way to do that without making noise is to use the PowerShell scripts
    from PyroTek3 ([https://github.com/PyroTek3/PowerShell-AD-Recon](https://github.com/PyroTek3/PowerShell-AD-Recon)).
  prefs: []
  type: TYPE_NORMAL
- en: 'For this basic info, you could use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'The next step could be to find out which SPNs are available. To obtain all
    SPNs from an AD you could use this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This will give you a good amount of information that can be used to continue
    the attack. If you want to know only the service accounts that are currently configured
    with an SPN, you could also use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'You could also leverage `mimikatz` to obtain information about the Kerberos
    tickets, using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Another approach is to attack AD by exploiting the vulnerability MS14-068 (9).
    Although this vulnerability is old (November 2014), it is very powerful since
    it allows a user with a valid domain account to obtain administrator privileges
    by creating a forged **privilege account certificate** (**PAC**) that contains
    the administrator account membership, inside a ticket request (`TG_REQ`) sent
    to the **key distribution center** (**KDC**).
  prefs: []
  type: TYPE_NORMAL
- en: Remote Registry
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The heart of the Windows OS is the Registry as it gives control over both the
    hardware and software of a machine. The Registry is normally used as part of other
    lateral movement techniques and tactics. It can also be used as a technique if
    an attacker already has remote access to the targeted computer. The Registry can
    be remotely edited to disable protection mechanisms, disable auto-start programs
    such as antivirus software, and to install configurations that support the uninterruptible
    existence of malware. There are very many ways that a hacker can gain remote access
    to a computer in order to edit the Registry, some of which have been discussed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is one of the Registry techniques used in the hacking process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: It is where Windows stores information about the drivers installed on a computer.
    Drivers normally request their global data from this path during initialization.
    However, at times malware will be designed to install itself in that tree thus
    making it almost undetectable. A hacker will start it as a service/driver with
    administrator privileges. Since it is already in the Registry, it will mostly
    be assumed to be a legitimate service. It can also be set to auto-start on boot.
  prefs: []
  type: TYPE_NORMAL
- en: Breached host analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is perhaps the simplest of all lateral movement techniques. It occurs after
    an attacker has already gotten access to a computer. The attacker will look around
    on the breached computer for any information that can help him/her move further
    with the attack. This information includes passwords stored in browsers, passwords
    stored in text files, logs and screen captures of what a compromised user does,
    and any details stored on the internal network of an organization. At times, access
    to a computer of a high-ranking employee can give hackers a lot of inside information
    including organizational politics. The analysis of such a computer can be used
    to set the stage for a more devastating attack on an organization.
  prefs: []
  type: TYPE_NORMAL
- en: Central administrator consoles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Determined attackers that want to traverse a network aim for central admin consoles
    instead of individual users. It takes less effort to control a device of interest
    from a console instead of having to break into it every single time. This is the
    reason why ATM controllers, POS management systems, network administration tools,
    and active directories are primary targets of hackers. Once hackers have gained
    access to these consoles, it is very difficult to get them out and at the same
    time, they can do a lot more damage. This type of access takes them beyond the
    security system and they can even curtail the actions of an organization's network
    administrator.
  prefs: []
  type: TYPE_NORMAL
- en: Email pillaging
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A huge percentage of sensitive information about an organization is stored in
    emails in the correspondence between employees. Therefore, access to the email
    inbox of a single user is a stroke of fortune for hackers. From emails, a hacker
    can gather information about individual users  to use it for spear phishing. Spear
    phishing attacks are customized phishing attacks directed at particular people,
    as was discussed in [Chapter 4](0acb9516-3ff9-43d8-a9f8-1d1d34232b7e.xhtml), *Reconnaissance*.
    Access to emails also allows hackers to modify their attack tactics. If alerts
    are raised, system administrators will normally email users about the incident
    response process and what precautions to take. This information may be all that
    is needed by hackers to correct their attack accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'L. Heddings, *Using PsTools to Control Other PCs from the Command Line*, *Howtogeek.com*,
    2017\. [Online]. Available: [https://www.howtogeek.com/school/sysinternals-pro/lesson8/all/](https://www.howtogeek.com/school/sysinternals-pro/lesson8/all/).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'C. Sanders, *PsExec and the Nasty Things It Can Do - TechGenix*, Techgenix.com,
    2017\. [Online]. Available: [http://techgenix.com/psexec-nasty-things-it-can-do/](http://techgenix.com/psexec-nasty-things-it-can-do/).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'D. FitzGerald, *The Hackers Inside Your Security Cam*, Wall Street Journal,
    2017\. Available: [https://search.proquest.com/docview/1879002052?accountid=45049](https://search.proquest.com/docview/1879002052?accountid=45049).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'S. Metcalf, *Hacking with PowerShell - Active Directory Security*, Adsecurity.org,
    2017\. [Online]. Available: [https://adsecurity.org/?p=208](https://adsecurity.org/?p=208).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A. Hesseldahl, *Details Emerge on Malware Used in Sony Hacking Attack*, Recode,
    2017\. [Online]. Available: [https://www.recode.net/2014/12/2/11633426/details-emerge-on-malware-used-in-sony-hacking-attack](https://www.recode.net/2014/12/2/11633426/details-emerge-on-malware-used-in-sony-hacking-attack).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Fun with Incognito - Metasploit Unleashed*, Offensive-security.com, 2017\.
    [Online]. Available: [https://www.offensive-security.com/metasploit-unleashed/fun-incognito/](https://www.offensive-security.com/metasploit-unleashed/fun-incognito/).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A. Hasayen, *Pass-the-Hash attack*, Ammar Hasayen, 2017\. [Online]. Available:
    [https://ammarhasayen.com/2014/06/04/pass-the-hash-attack-compromise-whole-corporate-networks/](https://ammarhasayen.com/2014/06/04/pass-the-hash-attack-compromise-whole-corporate-networks/).
    [Accessed: 13- Aug- 2017].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'S. Metcalf, *Hacking with PowerShell - Active Directory Security*, Adsecurity.org,
    2018\. [Online]. Available: [https://adsecurity.org/?p=208](https://adsecurity.org/?p=208).
    [Accessed: 01- Jan- 2018].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*Microsoft Security Bulletin MS14-068 - Critical*, Docs.microsoft.com, 2018\.
    [Online]. Available: [https://docs.microsoft.com/en-us/security-updates/securitybulletins/2014/ms14-068](https://docs.microsoft.com/en-us/security-updates/securitybulletins/2014/ms14-068).
    [Accessed: 01- Jan- 2018].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter has discussed ways in which attackers can use legitimate tools
    to perform lateral movement in a network. Some of the tools are very powerful,
    hence they are normally the main targets of attacks. This chapter unveils exploitable
    avenues that have been used against organizations through which attackers have
    been able to slip in and out. The lateral movement phase has been said to be the
    longest phase since hackers take their time to traverse a whole network.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the phase very little can be done to stop the hackers from further
    compromising the victim systems. The fate of the victim is almost always sealed,
    as shall be seen in the next chapter. The chapter will look at privilege escalation
    and focus on how attackers heighten the privileges of the accounts that they have
    compromised. It will discuss privilege escalation in two categories; vertical
    and horizontal. The ways in which these two can be carried out will be extensively
    discussed.
  prefs: []
  type: TYPE_NORMAL
