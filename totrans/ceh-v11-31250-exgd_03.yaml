- en: '*Chapter 6*: Vulnerability Analysis'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vulnerability management is the process of using tools, processes, and knowledge
    to reduce risk related to IT systems. This includes the entire life cycle, from
    initially discovering vulnerabilities through reporting them, prioritizing them
    according to business needs, remediating them through software or procedural changes,
    verifying that they have been fixed, and documenting lessons learned for the future.
  prefs: []
  type: TYPE_NORMAL
- en: Note that vulnerability management is not a one-time event. It's an ongoing
    process that needs to be revisited regularly. New vulnerabilities are discovered
    all the time, and old ones are fixed or become irrelevant. You need to make sure
    your systems are always up-to-date and that your patches are current.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability analysis – where to start
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability classifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The life cycle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ongoing scanning and monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability analysis – where to start
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A vulnerability assessment is a systematic review of security weaknesses in
    an information system. Specifically, it looks for vulnerabilities in computer
    systems, applications, and network infrastructures. It evaluates if the system
    is susceptible to any known vulnerabilities, assigns severity levels to those
    vulnerabilities, and recommends remediation, if and whenever it's needed.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability assessments also provide an organization with the necessary knowledge,
    awareness, and risk backgrounds to understand and react to threats to its environment.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability classifications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Vulnerabilities can be classified into the following categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Misconfiguration**: You''ll hear me preach about this all the time because
    it''s one of the most common vulnerabilities. Misconfiguration is caused by human
    error. It allows attackers to gain unauthorized access to your systems. There
    are different types of misconfigurations because they could happen on application
    platforms, databases, the network itself, and even web servers. As misconfiguration
    could occur because someone may have forgotten to update the application or the
    database. They may have disabled the security settings or some features that are
    needed, or they may have gone set up permissions incorrectly or misconfigured
    SSL certificates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default installation vulnerabilities**: These are typically done when we
    hit the *Next* options during installation. I get it. Sometimes, this happens.
    Installing an application where the attackers and everybody else are expecting
    it to be and using the same directory structure can create a vulnerability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Buffer overflows**: These are common software vulnerabilities, and they happen
    because of coding errors. What typically happens here is the attacker undermines
    the functionality of the program and tries to take control of the system by writing
    content beyond the allocated buffer size. If you overload the buffer, you end
    up creating a vulnerability, which could be anything from a system crash, the
    system becoming unstable, or even allowing some programs to do things they normally
    wouldn''t do.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The server''s operating system**: Not patching the server''s **operating
    system** (**OS**) appropriately may cause a vulnerability. Attackers are always
    looking or scanning for servers to see if they have them in a patch with the latest
    and greatest OS.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Design flaws**: These are caused by either incorrect encryption or junky
    data validation processes; either the communication or the backend of an app or
    even a bad design flaw within the network infrastructure itself.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OS flaws**: I know what you''re thinking, and the answer is no, it''s not
    just limited to Windows. Linux probably has more patches than Microsoft does.
    But it''s because of these types of flaws that attackers can use Trojans, worms,
    and even viruses to attack those machines. So again, it comes back to patching.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application flaws**: Research your applications or any mainstream product
    regarding what flaws are associated with your applications. You also need to be
    notified of when those flaws take place, or when they''ve been discovered. So,
    update and keep your applications current.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open services and ports**: Often, we install stuff, and it opens ports or
    starts up services or features we may not use on that product or from that application.
    So, why have it open? Security professionals need to be on a constant lookout
    and scan the networks or systems for any unnecessary or insecure services or ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default passwords**: It cracks me up how many times people continue to use
    default passwords on devices, software, or the OS itself. The reason these are
    vulnerabilities is that if somebody just wants to get the application installed,
    they just hit next and take the defaults, and then in those defaults is the default
    password. They think, "*Oh, I''ll change it later*" and then they forget, move
    on from the project, get fired, or someone else takes over. Whatever the case,
    these default passwords are going to be the bane of our existence. So, please
    do me a favor – make sure that you keep your passwords secret as you are installing
    the applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we've identified potential areas for vulnerabilities to take place,
    let's look at what vulnerability assessments you should use.
  prefs: []
  type: TYPE_NORMAL
- en: The benefits of a vulnerability management program (VMP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the reasons some companies skip using a **vulnerability management program**
    (**VMP**) is that they often think that the devices or services they are currently
    using are already protecting them. However, we must remember that a firewall strictly
    does what a firewall is supposed to do, which is to accept or allow connections
    through, based on the ports or the protocols they are using. The same applies
    to an antivirus program. It will scan documents or files within our systems to
    make sure they haven't been infected. We may also have an intrusion detection
    system in place, but again, that's only looking for active connections.
  prefs: []
  type: TYPE_NORMAL
- en: However, a VMP looks at the network devices, servers, workstations, and mobile
    devices and pinpoints weaknesses that need to be fixed or patched. Hopefully,
    they do this before they get breached. With close to 100 vulnerabilities being
    announced each week, your organization's network is only as secure as its last
    vulnerability assessment.
  prefs: []
  type: TYPE_NORMAL
- en: One of the problems preventing organizations from using a VMP is that the vulnerability
    scans and the reports they get, as well as the remediation process, can be extremely
    overwhelming. However, if you look at this from a different perspective, if your
    team is on top of the remediation process and the scans, those reports will become
    less intimidating because you're going to be more on top of things.
  prefs: []
  type: TYPE_NORMAL
- en: An ongoing VMP process, in combination with a proper remediation process, will
    help you ensure your network is extremely secure and can withstand the latest
    attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the benefits of a VMP:'
  prefs: []
  type: TYPE_NORMAL
- en: A VMP can help identify which risks need to be repaired or fixed. If we thoroughly
    monitor activity, we will get more information about the systems on our network.
    This allows us to contextualize all the different nodes or systems listed within
    the scan report itself. They can make better assessments about what needs to be
    fixed, when, and how. They also get to know which risks are extremely pressing
    versus those that aren't as important.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time is money. Some argue it takes too much time to perform vulnerability scans
    and the remediation process. They forget to compare it to the amount of time they
    spend remediating huge risks that are detected too late or, worse, having to deal
    with bad press right from the fallout of some type of breach in their environment.
    By looking at these reports and monitoring what's going on, it becomes clear that
    this is a huge time saver. It saves you from working every night and weekend because
    a breach is taking place and you're trying to fix things.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If a company or organization is managing its vulnerabilities effectively, it
    will spend little time monitoring its systems. When a risk is detected, it can
    usually be fixed quickly and easily. It also saves you from doing a ton of work
    in a short time since your systems and network are secure and up to date.
  prefs: []
  type: TYPE_NORMAL
- en: It improves security. Organizations that manage vulnerabilities are looking
    at it as a process, not just a one-time activity. Organizations that consistently
    and continually monitor their environment, to ensure they're one step ahead of
    attackers and the threats that are out there, maintain a more secure and safer
    environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It saves money. This is probably the number one benefit of implementing VMP.
    It will save you from a costly breach. It's commonplace to see companies hit the
    news for being breached, and they end up facing huge costs from several different
    areas. Not only do they need to pay somebody to come in to get things under control,
    but they may also suddenly have to upgrade their systems or replace different
    components. And, of course, we can't forget the ominous lawsuits that they may
    acquire because of the breach.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As I traveled around the world in the early 2000s doing different workshops
    for government agencies and training classes with corporate 500 companies, this
    conversation would take place. I would hear the IT staff saying that they couldn't
    get the budget to upgrade their OSs or their systems because nobody thought it
    was important, or that they could get by. Well, that's not the case anymore. And
    a lot of my customers (and hopefully, you) will change their thought processes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Please have your CFO or CTO know that you have two choices: pay for the upgrades
    now when it''s not a mission-critical issue or a breach issue or pay a lot more
    down the road when that breach takes place. I think that''s the mindset or the
    new norm we need to embrace. It''s not a matter of if you get breached, but when.'
  prefs: []
  type: TYPE_NORMAL
- en: Instead of being reactive to issues that come up, you should look at being proactive.
    If you know me or have taken any of my courses before, you will know that I'm
    a big fan of being proactive.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's talk about vulnerability assessment types.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability assessments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vulnerability assessments let you examine the ability of an application or a
    system – which includes current security procedures and controls – to withstand
    any type of attack.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some advantages of having a good vulnerability assessment
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: It should identify, measure, and then classify the vulnerabilities. And then,
    based on the reports, you, as a security professional, will understand how to
    lock things down.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During a vulnerability assessment, you should be able to identify weaknesses
    and classify them based on their importance and severity. You'll also want to
    classify them based on the type of device they are and/or the communication channels
    they use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It should give you additional security measures or identify those things you
    need to do to fix some of these weaknesses.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It should be able to scan for vulnerabilities based on the network.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It should be able to identify open ports. You will see a lot of crossovers here
    because the assessment should be able to identify the services that are running,
    the unnecessary ones, and any application weaknesses. Vulnerability management
    products will help you identify applications that have not been updated or need
    to be updated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It should be able to identify any service weaknesses. If it's running, we need
    to make sure the service itself is secure. And typically, it's going to identify
    services that haven't been patched or faulty because of their design.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It should help us identify configuration errors and show us accounts that have
    weak passwords, no passwords, or haven't changed their passwords in umpteen years.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's look at the different types of vulnerability assessments that are
    available to us.
  prefs: []
  type: TYPE_NORMAL
- en: Types of vulnerability assessments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are different kinds of vulnerability assessments you can run, including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Active assessments**: These are typically where we use network scanners to
    scan the network to identify the hosts, any vulnerabilities on those hosts, all
    the different nodes, and the services – anything that''s on the network. Active
    network scanners can reduce the intrusiveness of the checks that they perform.
    So, you can make them extremely loud, or extremely quiet, or stealthy, if you
    will.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passive assessments**: This is where we sniff the traffic. So, we''re not
    going after a specific target – we''re just looking at the traffic to see if we
    can identify active systems, services, or applications, and then try to determine
    the vulnerabilities present. Now, because we''re sniffing the traffic, we should
    also be able to get a list of users who are currently on the network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**External assessments**: External assessments are one of the many methods
    that are used in ethical hacking. An external assessment means that the assessment
    is conducted over the internet, generally beginning with a port scan or some other
    form of network mapping.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main goal of an external assessment is to locate vulnerabilities in the
    organization's public web pages and services (if any exist). Once these vulnerabilities
    have been located, an internal assessment must be performed to exploit them.
  prefs: []
  type: TYPE_NORMAL
- en: A common misconception when it comes to external assessments is that they are
    designed to assess the security of private networks, such as DMZs and internal
    networks. The vulnerability scan will not reveal vulnerabilities on your internal
    network if your public web pages are directly connected to your private network.
    Internal hosts (such as file servers) aren't visible over the internet unless
    you've opened specific ports and services.
  prefs: []
  type: TYPE_NORMAL
- en: '**Internal assessments**: This type of assessment looks at everything from
    an internal perspective. Internal assessments are typically designed to reveal
    vulnerabilities on the private network. For this reason, internal assessments
    typically reveal more risks than external assessments because an attacker would
    much rather hack into a file server or mail server than try to hack your public
    web pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is usually more to the story than simply whether or not a vulnerability
    was found. For example, an internal assessment may reveal that a web application
    on your company's website has been identified as having several vulnerabilities.
    However, this does not give you the whole picture. Perhaps one of those vulnerabilities
    could be mitigated by changing the default credentials for a database on your
    website. Since this is a common area of vulnerability, it would be difficult to
    assess the risk of not changing those default credentials from a vulnerability
    standpoint alone.
  prefs: []
  type: TYPE_NORMAL
- en: This is just one example of the nuanced reality of vulnerability assessments.
    Your organization must assess the risks surrounding each vulnerability to assess
    their true impact. This is part of what makes an internal assessment so valuable.
  prefs: []
  type: TYPE_NORMAL
- en: '**Host-based assessments**: You can probably guess what this means, right?
    Here, we''re going to do a configuration-level check at each of the host machines,
    whether they''re a server or a desktop. The type of thing I want to look at includes
    whether I can get a hold of a registry and see if it has been incorrectly configured,
    as well as any file permissions and software configuration issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network assessments**: This shows you vulnerabilities such as unnecessary
    services, weak authentication, and missing patches on your desktops, laptops,
    servers, and the network devices themselves. Is the interface for your switch
    through HTTP? Is it open? What''s authentication mechanism is used? Is there weak
    encryption?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application assessments**: Here, we''re looking at apps that are installed
    everywhere. When I say apps, I''m not just referencing apps on workstations. SQL,
    Exchange, SharePoint, and WordPress are all examples of apps. Anything that loads
    up on the servers is an app and we must make sure it has been patched and configured
    correctly and is up to date. I''ve seen something happen a couple of times where
    a company claims all their systems are up to date, they''re strictly running the
    latest and greatest in Windows, and that they do network scan only to discover
    they have a host machine running an older version of either an application or
    an OS. Their reason? "*You see, we don''t want to have to pay for the upgrade*"
    or "*The company isn''t around anymore*." Guess what? It''s time to find a different
    solution unless you want to trend on Twitter for a day or two because you''ve
    been breached.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wireless network assessments**: We use this assessment to test our wireless
    networks and try to identify any rogue wireless networks that could be somewhere
    within your company. These audit client-specific sites with a wireless network.
    They do this by sniffing the wireless network traffic and trying to crack the
    encryption keys. And if I''m able to get in through wireless, then the whole network
    assessment comes into play, right?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's discuss the life cycle of a vulnerability assessment process.
  prefs: []
  type: TYPE_NORMAL
- en: The vulnerability life cycle
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every time I see the words *life cycle*, I think I need to go out and exercise,
    but the purpose of the life cycle here is to make sure we follow every step to
    find solutions and remediate them. In this case, these steps will help us find
    security weaknesses and remediate them before they become exploits:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.1 – Vulnerability assessment life cycle](Images/B17486_06_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.1 – Vulnerability assessment life cycle
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are the steps of the vulnerability life cycle process:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Creating a baseline**: In this phase, we look at critical assets, identify
    them, and prioritize them to create a good baseline for vulnerability management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The assessment**: This is a critical phase of vulnerability management. What
    we do, as security professionals, is identify and know the vulnerabilities within
    our infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk assessment**: All we''re doing here is measuring or summarizing the
    vulnerability and the risk level – some systems may be at a higher risk level
    than others. Again, it depends on what their function is and who is operating
    them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remediation**: Remediation is the process of fixing those vulnerabilities
    based on the risk assessment. We need to know which ones are the most important
    and then tackle them accordingly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Verification**: We take this step to make sure we''ve fixed the issue. It
    allows the security team to check whether all the phases we''ve done previously
    have been followed and if the identified vulnerabilities have been fixed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Monitoring**: Regular monitoring needs to be performed to help you maintain
    and always have the lastest updates. This is because a new update will have you
    create a new baseline where new threats will come out daily. So, we''re going
    to continue monitoring.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's discuss some of the vulnerability assessment solutions that are available.
  prefs: []
  type: TYPE_NORMAL
- en: Types of vulnerability assessment solutions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are four types of vulnerability assessment solutions you can look at.
    They are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Product-based solutions**: These are installed somewhere within your network.
    They could be installed in the private or non-routable space, as well as the internet
    addressable portion of your company''s network. The only downside to installing
    these within your network is that they''re going to be behind a firewall, and
    they can''t always detect vulnerabilities on the outside.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service-based solutions**: These are typically offered by third parties or
    the consultants you are using. Some of the solutions are hosted within your organization,
    such as a cloud-based solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tree-based solutions**: This is a hybrid-type solution. A security professional
    will select a particular scanner for scanning services on Windows products, databases,
    or web servers but then use a different scanner for the Linux boxes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Inference-based solutions**: Here, we start our scans by building up an inventory
    or identifying all the protocols that have been found on a particular machine.
    Once we''ve discovered or identified those protocols, the scanning process starts
    to detect which ports are attached to the services, such as an email server, a
    database server, or a web server. After it finds these services, it selects the
    vulnerabilities on each machine and starts to execute the relevant tests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The importance of corporate policies cannot be understated, so let's talk about
    that next.
  prefs: []
  type: TYPE_NORMAL
- en: Corporate policies and regulations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With corporate policies, our goal is to obtain support for security awareness
    within the organization and outline, in general terms, the risks, guidelines,
    and responsibilities in our environment. Creating and enforcing security policies
    can help legally because it shows due diligence. The policy needs to stress its
    goals and responsibilities. Some parts may require technical details, while others
    may be accessible to everybody within the company. As we create these policies,
    the guidelines need to be backed up by a detailed technical implementation policy
    at a departmental or managerial level.
  prefs: []
  type: TYPE_NORMAL
- en: For example, a network manager can implement a policy to protect data that's
    passing through the organization's network. Someone in HR could make sure security
    training is taking place, as well as an awareness program. A firewall administrator
    could implement a policy to help protect data that's passing through certain ports.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Some parts of the security policy, such as its standards, procedures, and guidelines,
    should be confidential. It would not be smart to make details of your security
    system or your DR plan accessible to the public or even to all employees. This
    information could assist somebody in a malicious attack.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to regulatory environments, some companies and organizations are
    bound by laws and regulations that govern the way they store, transmit, and process
    information, especially if the organization handles sensitive personal information
    or data from the government.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations operating with industries such as healthcare or payment card processing
    must comply with industry regulations. The issue is that a lot of these laws don't
    prescribe or give any specific information about using a VMP.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some examples are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Health Insurance Portability and Accountability Act** (**HIPAA**): This regulates
    how healthcare providers and anybody who interacts with a health care provider
    insurance company, as well as any business partners that they deal with, store
    information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gramm-Leach-Bliley Act** (**GLBA**): This controls how financial institutions
    handle customer financial records. None of these laws tell us what type of vulnerability
    scanning we need to implement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Payment Card Industry Data Security Standard** (**PCIDSS**): This specifies
    security controls over transactions for retailers who handle credit cards and
    service providers partnering in those transactions. The interesting thing is that
    the majority of people think PCIDSS is a law. Well, it''s not. It''s simply a
    standard; you can choose to follow it or not. The ramification of not following
    it is that the credit card company or your merchant providers could say "*We''ll
    no longer support your transactions.*"'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Federal Information Security Management Act** (**FISMA**): This regulation
    requires government agencies and anybody who operates or interacts with the government,
    or on behalf of the government, to comply with a series of security standards.
    In the case of PCIDSS, it lists the following as part of the requirements when
    it comes to a VMP:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: First, you need to implement VMP. They don't care which one; they don't say
    you have to use a specific one – they just say you must use one.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Another requirement PCI specifies is that internal scans must be conducted by
    a qualified person – somebody who has been trained to do internal and external
    stuff. The external stuff must be done by someone outside your organization.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: They also specify that organizations must run their scans at least every quarter.
    Also, anytime you make any major changes to your network, such as adding a new
    firewall rule or upgrading some networking components in their firmware, you need
    to make sure everything is still safe. And, between the internal and external
    scans, these must be done by a qualified person or a vendor – a vendor for the
    external scans and personnel for the internals. They become qualified by going
    through a series of steps, including filling in an application and training and
    enrolling with the PCI Security Standards Council.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizations are also required to remediate any high-risk vulnerabilities as
    fast as possible. They need to repeat the scan to make sure they've resolved or
    have a clean system to ensure the fix that was implemented applied the appropriate
    settings.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: A lot of organizations conduct scans to ensure nothing embarrassing shows up
    before they have an outside vendor come in. As I mentioned previously, FISMA is
    another regulation out there for government agencies, and they have a list of
    requirements for organizations that are subject to FISMA. I haven't seen any detailed
    information about this regulation, except for the fact it applies to government
    agencies, but some of their requirements are very similar to PCIDSS.
  prefs: []
  type: TYPE_NORMAL
- en: The scope of scanning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When it comes to scopes, we're referencing what the scan looks like regarding
    the range of hosts or subnets included within the scan. If you have a large network,
    it will probably make sense to schedule scans of different portions of the network
    at different times. This is going to help you reduce the impact of the network's
    performance and make it easier to analyze the results of each of the scans.
  prefs: []
  type: TYPE_NORMAL
- en: You may want to devise scans of limited scopes to identify issues or meet a
    particular compliance goal. Now, I would say there are a few questions you should
    ask yourself when it comes to scoping out vulnerability scans.
  prefs: []
  type: TYPE_NORMAL
- en: First, ask, "*What systems and what networks should I include in the vulnerability
    scan*?" Remember, we don't have to scan every system.
  prefs: []
  type: TYPE_NORMAL
- en: Second, ask, "*What tests will be performed against the systems that are discovered
    by the vulnerability scan*?" This could create some issues for you if you're unprepared
    for or don't understand what tests are being done within the VMP.
  prefs: []
  type: TYPE_NORMAL
- en: Third, ask, "*Are the systems online*?" That sounds basic, but remember, the
    information you know about the system is only as good as the last scan you achieved.
  prefs: []
  type: TYPE_NORMAL
- en: Scanning frequency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Defining our scan frequencies can be limited by several factors, including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Technical constraints**: This is the primary factor. Scanning a Windows workstation
    for vulnerabilities is typically very low and it can be performed each time the
    host connects to the network. When it comes to something such as a code review
    or vulnerability analysis, for customized applications, this must be handled a
    bit more delicately and it can be a little bit more expensive. So, again, the
    technical constraints could limit the frequency of scanning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scanning the system**: You may only be capable of performing a certain number
    of scans each day. Your organization may need to adjust the scan frequency to
    make sure all the scans can complete successfully and within a given time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk appetite**: It''s like rolling the dice. For each scan activity, there
    is a cost that''s associated with it. Again, if we look at that customized application,
    there might be a policy that dictates a scan or review but only if the overall
    threat intelligence changes. For example, let''s say there''s some new code exploit
    that''s been discovered. So, again, the organization''s risk appetite is its willingness
    to tolerate risks within your environment. Let''s say, for example, that your
    company or organization is extremely risk-averse. Well, you may choose to conduct
    your scans more often to help minimize the amount of time between when the vulnerability
    becomes something that''s of importance or comes into existence.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regulatory requirements**: Regulations may make it impossible for you to
    increase your risk appetite. If your company must adhere to certain regulations,
    especially using scanning controls at predetermined intervals or according to
    a formal change management process that can affect that schedule because it must
    be followed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflow**: As an organization develops and improves its security policies
    and controls, it adopts a more mature security model. As your security capabilities
    increase, vulnerability management and information security assurance need to
    be baked into your network management and software development workflows.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Business constraints**: Business constraints may limit your organization
    because vulnerability scans can be resource-intensive. For example, it may not
    be in your best interest to scan during periods of high business activity; you
    want to make sure you try to avoid critical processes from being disrupted. We
    want to make sure we schedule them to run at the appropriate time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Licensing**: This can curtail the bandwidth that''s consumed by the scanner
    or even the number of scans that you conduct at the same time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a security professional, you must learn to balance each of these considerations
    when planning a vulnerability scanning program. It's best to start small and slowly
    expand the scope and the frequency over time so that you learn by doing along
    the way.
  prefs: []
  type: TYPE_NORMAL
- en: Types of scans
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are different types of scans that our vulnerability scanners or VMPs
    can do, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Active scan/non-credentialed scans**: This scan proceeds by directing test
    packets at a host without being able to log onto the OS or application. What we
    get out of this is a specific view that allows us to see what the host exposes
    to the network. These are also referred to as remote scans. Now, even though you''re
    doing a non-credential scan, you could put include things such as default passwords
    for service accounts in devices. Active scanning also consumes more network bandwidth
    and runs the risk of crashing a target of the scan, causing some weird results,
    or even an outage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passive scans**: A passive scanner watches network traffic, usually through
    a mirrored port, and tries to identify the policy definition or the CVEs. This
    type of scanning has the least amount of impact on the network because it''s simply
    sitting there listening, as opposed to a credential scan. This is where you give
    a user an account with login rights to various hosts. You can specify a username
    and password. This gives you in-depth analysis, especially when you''re detecting
    when an application or security settings could be misconfigured. It also helps
    demonstrate if an attacker has compromised one of your user accounts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agent scans**: This type of scan is where we install an agent on the different
    stations or targets that we plan on scanning. The agent is simply a piece of software
    that reports back to a specific server or service and is managed by an administration
    server. It runs the scans locally and then sends the report at a set schedule
    to the administrative server. Nessus is a VMP that has an agent that you can install
    on a Windows host. The biggest advantage here is that agent-based scans help reduce
    the impact on your network since everything is being done by the agent on the
    local machine and only the results are reported back. However, one of the drawbacks
    is that the range of agents could be limited to a particular OS, but most of them
    today support all the major OSs. The other disadvantage would be that this is
    now another application that you, as a security professional, need to make sure
    the agents are up to date with so that an attacker can''t compromise it and use
    it to get into your environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We must also worry about scanning levels, which focus more on the sensitivity
    level. We can do a discovery scan, which is used to create and update your inventory
    of assets. This is typically done to identify the hosts in the services they're
    running.
  prefs: []
  type: TYPE_NORMAL
- en: '**Assessment scans**: This will only contain options for analyzing hosts for
    vulnerabilities and/or malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A vulnerability can include misconfiguration, as well as software exploits.
    Typically, an assessment scan will present options for comparing the OS and application
    settings against a policy template. Another option would be to test for weak passwords
    or recycled passwords. Note that an assessment scan can create a ton of network
    traffic, so be very careful.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let's talk about scanner maintenance.
  prefs: []
  type: TYPE_NORMAL
- en: Scanner maintenance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Scanner maintenance is a piece of software. As with any technology product,
    we need to make sure the VMPs are healthy and strong. We do that by implementing
    proper care and feeding for that application. Administrators should conduct regular
    maintenance of their VMP to make sure the scanning software and the vulnerability
    feeds are up to date. The process of regularly patching and upgrading your VMPs
    will help protect the organization against scanner-specific vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: The other thing you need to be worried about is the plugins. A lot of these
    products allow you to place additional plugins to help you tweak the environment.
    However, some of these plugins are written by individuals who may not keep them
    up to date, which, based on future vulnerabilities, could make your system susceptible
    to an attack. So, administrators should configure their scanners to retrieve the
    new plugins or their updates. It's even better if you do this daily.
  prefs: []
  type: TYPE_NORMAL
- en: Classifying data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You must recognize what pieces of information are important when you're considering
    data assets in your environment and this is going to depend on your situation.
    For example, blueprints for a jet ski may not be that important if you're a company
    that rents jet skis out, but if you're the jet ski manufacturer, that is probably
    a little bit more important and may need to be kept confidential.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, if an attacker gets a hold of your company's organization chart,
    it not only shows who works for whom but also the more sensitive information.
  prefs: []
  type: TYPE_NORMAL
- en: So, how do you classify data? Well, that's easy.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are four different things you should be looking at, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Product development, production, and maintenance**: This information could
    be quite vital to a company. What we often see with breaches is customer contact
    information being released. Sometimes, this includes financial operations and
    controls – the collection and payment of debit cards and payroll taxes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Legal obligations**: Legal obligations help maintain accurate records for
    a given period and also contractual obligations to third parties via **service-level
    agreements** (**SLAs**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, let's look at document management.
  prefs: []
  type: TYPE_NORMAL
- en: Document management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Also known as data handling, this is the process of managing information over
    its life cycle, all the way from the creation process to its destruction. At each
    stage of this life cycle, security considerations are extremely important. Most
    documents will go through one or more different draft stages before they're published.
    But as a draft, the document will be subject to a workflow, which helps describe
    how editorial changes are made or approved. We see a lot of these workflows being
    created in a Microsoft product called SharePoint.
  prefs: []
  type: TYPE_NORMAL
- en: The workflow goes through and specifies – and this could be paper-based – who
    the authors, editors, and reviewers are.
  prefs: []
  type: TYPE_NORMAL
- en: 'As part of the creation process, the document must be classified based on how
    sensitive it is. Now, typically, those classifications are given labels, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Unclassified**: There are no restrictions on viewing this document.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Classified**: This is also known as restricted, private, or for official
    use only. Viewing is restricted to the owner, organization, or third parties under
    a non-disclosure agreement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Confidential**: This is one of the lower ends of the classifications when
    we''re dealing with some of the higher-end ones, but it''s set up so that the
    information is sensitive and can only be viewed by approved personnel within the
    organization. We may also want to include an **non-disclosure agreement** (**NDA**)
    here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secret**: This is also called medium. Viewing is restricted because this
    information is too valuable to permit any risk of it being viewed. Think of it
    as top-secret information, just like you see in spy movies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Double secret probation**: This one is even higher than top secret.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's talk next about the why it's important to have an ongoing scanning and
    monitoring process.
  prefs: []
  type: TYPE_NORMAL
- en: Ongoing scanning and monitoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When it comes to ongoing scanning and continuous monitoring through the cycle
    – procurement, as well as replacing, and the issue of new tactics or new threats
    and techniques being utilized – it's not enough to perform a vulnerability assessment
    only once. You need to have some type of plan for an ongoing scan. As we mentioned
    earlier, you need to come up with a schedule and stick to it.
  prefs: []
  type: TYPE_NORMAL
- en: Continuous security monitor refers to the process of continual risk assessment.
    This means we maintain a high level of awareness of the threats that are coming
    out or have been released into the wild. It also refers to performing routine
    audits of rights and privileges in real time.
  prefs: []
  type: TYPE_NORMAL
- en: To truly have a good understanding of monitoring, you need to create an initial
    baseline to help identify any variations. You need to compare them. It's kind
    of like when someone says my system seems to be slow. Well, compared to what?
    We must have something to compare it to. Having the ability to compare to an initial
    baseline helps you identify any type of variations that could represent an incident
    that's taking place and needs to be investigated.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding which scanner you should use
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is a difference between what you may see in the exam and what may be acceptable
    in the real world. You must do in-depth research to decide on the best product
    for you. This is why it's important to understand different vulnerability scanners.
  prefs: []
  type: TYPE_NORMAL
- en: Again, my goal here is not to tell you exactly which one to use, but to look
    at the different features and different options you have available to you. Now,
    typically, a vulnerability scanner is just a type of network mapper that aims
    to detect whether the network is exposed to any threats.
  prefs: []
  type: TYPE_NORMAL
- en: There are numerous tools out there that may do other things, such as footprinting
    and fingerprinting tools, and to some extent, maybe even some password cracking.
    But when it comes to vulnerability scanners, you want to look for one that is
    kind of the answer or the suite or the Swiss Army knife to your solution. You're
    going to want to make sure they do things such as not only mapping out hosts but
    maybe even detecting the services that are running.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's get back to what the core features of a vulnerability scanner or
    VMP does. It should not only be able to map the network for hosts and detect the
    services that are running, but they should use techniques such as banner grabbing
    to scan for things, such as what level the system or the target has been patched,
    the security configuration, as well as the policies or network shares, unused
    user accounts, weak passwords, rogue access points, whether antivirus software
    has been configured on it, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: A vulnerability scanner can be implemented in two different ways – either as
    software that's installed or as a security appliance. It can either be a VM or
    actual appliances you can purchase that are rack-mounted.
  prefs: []
  type: TYPE_NORMAL
- en: There are other types of scanners out there too, including web application vulnerability
    scanners that look at specific vulnerabilities in applications, such as SQL injection
    or **cross-site scripting** (**XSS**) software attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The difference between open source and commercial scanners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most people believe open source is the best because it doesn't cost any money,
    but we have some products out there that got their start as open source and then
    turned into commercial. Some continue to offer both features. Open source scanners
    are typically open to anyone who wants to use them, and they are free. Since open
    source scanning tools are open source, you can also integrate with other open
    source tools for a more integrated solution.
  prefs: []
  type: TYPE_NORMAL
- en: Commercial vulnerability scanners offer end-to-end testing that ensures compliance
    with security standards. This is a good feature for companies that need to make
    sure their environment is secure and not open to vulnerabilities. Commercial scanners
    typically provide 24/7 support, while smaller open source scanner companies may
    only be available during certain hours of the day.
  prefs: []
  type: TYPE_NORMAL
- en: To decide whether you should use commercial or open source scanners, you need
    to look at your environment and see what works best for your organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you''re deciding which type of scanner is right for your company, consider
    these factors:'
  prefs: []
  type: TYPE_NORMAL
- en: How many resources do you have?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do you need help with custom scanning features?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Will you need support (learning or troubleshooting)?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What types of compliance standards do you need to be able to validate?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, there are several reasons why companies may want to consider
    using either an open source or commercial product when choosing a vulnerability
    scanner.
  prefs: []
  type: TYPE_NORMAL
- en: One of these products is Nessus, produced by Tenable Network Security. It's
    one of the better-known commercial vulnerability scanners out there. It's available
    on-premises via Nessus Manager, as well as in the cloud (the tenable cloud). They
    also have a professional version that you can run on smaller networks. The product
    also has a home edition that can be used for free in addition to a paid subscription.
  prefs: []
  type: TYPE_NORMAL
- en: Nessus started as an open source product. It provides the source code for many
    other scanners that are out there. The default scans that you can perform with
    Nessus use plugins from the Nessus subscription feeds.
  prefs: []
  type: TYPE_NORMAL
- en: On-premises versus the cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It's important to understand that not every solution is going to be the best
    one for your environment.
  prefs: []
  type: TYPE_NORMAL
- en: On-premises is something you install and manage yourself.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to the cloud, this is where we still manage but we don't have
    to worry about keeping things up to date. Most of the time, these products will
    update themselves as soon as they become aware of certain vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: We also have to consider databases and where we store them.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of one vendor, where they install a client on your machine that
    scans that machine and then uploads it to the database, it's located within the
    cloud itself.
  prefs: []
  type: TYPE_NORMAL
- en: Others will keep them on the database in the local machine, and report back.
    It just depends on which way you want the communication channel to go and how
    often you want it to go.
  prefs: []
  type: TYPE_NORMAL
- en: My only problem with relying on the cloud – and this is just a personal thing
    – is that things can break. For example, a **denial-of-service** (**DoS**) attack
    can affect your ability to contact your vulnerability scanning cloud provider.
    So, make sure that you have some backups there.
  prefs: []
  type: TYPE_NORMAL
- en: Now, when I say everybody's involved, I mean that a lot of people are getting
    involved in this environment. Google has a cloud security scanner that's available
    to you. It's called the Amazon inspector. There's also Retina, which is owned
    by Beyond Trust. They have a cloud vulnerability assessment. I've used an on-premises
    version of Retina and I enjoyed it. Nessus had something called tenable I/O, which
    is their cloud solution. McAfee also has a **security as a service** (**SaaS**)
    concept.
  prefs: []
  type: TYPE_NORMAL
- en: We also have Secure Works, which has a nice interface to it. Alien Vault is
    another product that's out there as well. We also have Koalas, a cloud-based service
    that is probably one of the most popular and it's a great solution. Users install
    sensor agents on various points in their network, and the sensors upload data
    to the cloud platform for analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Security Content Automation Protocol (SCAP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A developing area of security analysis and threat intelligence is the correlation
    of information that's produced by different security tools, such as vulnerability
    scanners and IDS systems.
  prefs: []
  type: TYPE_NORMAL
- en: SCAP allows compatible scanners to determine whether the computer meets a particular
    configuration baseline. To learn more about the specifications for SCAP, you can
    visit [scap.nist.gov](https://scap.nist.gov). Yes, it's a government thing.
  prefs: []
  type: TYPE_NORMAL
- en: The MITRE corporation helped develop some of the key components of SCAP, which
    can be used on multiple scanning or vulnerability devices. It developed dictionaries
    of identifiers that are used in the NIST vulnerability database. These identifiers
    give us a standard means for identifying products to refer to in a vulnerability
    or a platform very consistently.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of these identifiers are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Common Vulnerability Exposures** (**CVEs**): This identifier helps identify
    cyber security vulnerabilities in published OSs and application software.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Common Platform Enumeration** (**CPE**): This is also maintained by the
    **National Institute of Standards and Technology** (**NIST**) and deals with OSs,
    applications, and hardware devices. If you need some common best practices statements,
    that''s where the **Society of Corporate Compliance & Ethics** (**SCCE**) comes
    into play. It''s the common configuration enumeration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Common Weakness Enumeration** (**CWE**): In addition to these identifiers,
    SCAP uses several other components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open Vulnerability and Assessment Language** (**OLA**): This is good If you''re
    looking for flaws in the designs and development of software that could potentially
    lead to vulnerabilities. This is an XML schema that is used to describe a system''s
    security states and query vulnerability reports and other information that is
    too detailed for now.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extensible Configuration Checklist Description Format**: This is also an
    XML schema, but it''s for developing and auditing best practice configuration
    checklists and rules. In the old days, best practices guides were written for
    administrators to apply manually. This component provides a machine-readable format
    that can be applied and validated using compatible software. If you''re asking
    yourself, "*How do these vulnerability scanners know how to fix themselves*?"
    it''s because of these components and identifiers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Common Vulnerability Scoring System** (**CVSS**): This is now maintained
    by the Forum of Incident Response and Security Teams. CDSS is a means of linking
    vulnerabilities to a standard metric. So, we understand how important certain
    vulnerabilities are. The metrics generate a score from 0-10 based on the inherent
    characteristics of the vulnerability, as well as the environment where the exposure
    occurs and the changing characteristics of the vulnerability over time. The higher
    the score, the more critical the issue is.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploit scanners
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When it comes to exploits scanners, most of our vulnerability scanning software
    uses non-intrusive scanning techniques. Non-intrusive scans use network fingerprinting
    and banner grabbing or allow the agent to read the system configuration as files
    pass through or even from log files. These normally don't cause any performance
    problems for the server or the host, but they can return a high number of false
    positives.
  prefs: []
  type: TYPE_NORMAL
- en: We also have intrusive scanning techniques, which usually involve an attempt
    to exploit a detected vulnerability. One of the most well-known exploit frameworks
    out there is Metasploit, an open source platform that's maintained by Rapid7\.
  prefs: []
  type: TYPE_NORMAL
- en: The free edition is a Community Edition that comes as a package for both Linux
    and Windows. Being a framework, it has a ton of tools that allow us to discover
    hosts and their vulnerabilities, and then identify or create exploit modules to
    target those vulnerabilities. Metasploit can use Nmap or its tools. Again, since
    it's a framework, it can connect to vulnerability scanners such as OpenVAS, Nessus,
    or Nexpose. We can also have and implement a key scanner to help us open a reverse
    shell so that we gain full access to the directory structure of the target system
    that's using those vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: A common technique a lot of these exploit frameworks use is fuzzing, which involves
    sending invalid or random data to the application to test its ability to handle
    unexpected data. That application is then monitored to see if it crashes, fails,
    or responds incorrectly. One of the most advanced commercial fuzzers out there
    is Peach Fuzzer. It has a free-to-use community edition, plus a professional and
    enterprise edition with different licensing models. The platform is supplemented
    with what they call peach pits, which are different packs (add-ins). Microsoft
    used to have fuzzers too, but they no longer make those available for download.
    Instead, Microsoft is moving to a cloud-based fuzzing service that is codenamed
    project Springfield.
  prefs: []
  type: TYPE_NORMAL
- en: So, you have your scan report, and it has a big list of vulnerabilities that
    it's detected. Normally, these vulnerabilities will be associated with a **Common
    Vulnerability Scoring System** (**CVSS**) score. It's designed to give you a very
    basic way of prioritizing the response actions. You should review the whole report
    and try to identify – from your own experience and knowledge – whether the vulnerability
    has been overrated or underrated.
  prefs: []
  type: TYPE_NORMAL
- en: 'The results of most of the vulnerability reports will be relatively straightforward
    for us. Perhaps the system hasn''t been receiving updates, or you investigate
    it by looking at the event logs. The job of an analyst is to spot something that''s
    out of place or a bit odd and then investigate the cause. Part of your job is
    to try to see if you can make things less confusing by looking at the following
    tips:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reconcile the results**: Vulnerability scanners can misinterpret the information
    they get back from the different probes they''ve sent out. If you can''t reconcile
    a particular issue that you''ve found, you may want to consider running a scan
    using a different software product to try to confirm the results. You should also
    review logs, as well as any other data sources. If you''re having trouble linking
    a vulnerability report to a particular host, or even a software application, use
    the logs on the host that''s associated with that IP to correlate the results
    – perhaps an application was present during the scan and since then, it has been
    uninstalled.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compare the best practices**: Some of the scanners that you may use will
    measure systems and configuration settings against best practice frameworks. This
    might be necessary for regulatory compliance, or you may want to conform to your
    own external agreed standards of a best practice.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The only issue might be that some compliance scans may return results that are
    not high priority or might be considered low risk. For example, maybe you've scanned
    a Windows 8 machine and there are some .NET Framework versions or browsers that
    are no longer supported. To remediate this type of problem, you would run the
    Windows update and ensure that the Windows update has been scheduled for future
    updates. You'd also want to investigate upgrading the Windows 8 machine to a more
    current version, then run the scan again, and work off any of the items that you
    find on your list.
  prefs: []
  type: TYPE_NORMAL
- en: Common Vulnerability Scoring System (CVSS)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The concept here is that the analyst must identify and assess vulnerabilities
    across several different types of hardware and software platforms that may be
    inside their network. They must also prioritize these vulnerabilities and remediate
    those that pose the greatest risk first.
  prefs: []
  type: TYPE_NORMAL
- en: However, when there's a ton of things to fix, each being scored using different
    scales, how does an analyst then convert this mountain of information into actionable
    information? Well, that's where CVSS comes into play. It's an open framework that
    addresses this issue and offers many benefits.
  prefs: []
  type: TYPE_NORMAL
- en: Let's discuss some of those benefits.
  prefs: []
  type: TYPE_NORMAL
- en: Ranking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Think of this as a system that rates your environment, which it does through
    a standard vulnerability score. When an organization normalizes vulnerability
    scores across its software and hardware platforms, it can leverage a single vulnerability
    management policy. This policy is like a SLA in that it tells us how quickly a
    particular vulnerability must be validated and fixed.
  prefs: []
  type: TYPE_NORMAL
- en: It's also important to note that when an environmental score is computed, the
    vulnerability becomes contextual, meaning that the vulnerability score is now
    representative of its risk to an organization. The scoring schema is based on
    several different things.
  prefs: []
  type: TYPE_NORMAL
- en: The base metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Base metrics include things such as exploitability. This metric measures the
    current state of an exploit technique. If the exploit code itself is publicly
    available and easy to use, the number of potential attackers also increases.
  prefs: []
  type: TYPE_NORMAL
- en: When you think of exploitability, you need to think about the attack vector,
    the complexity of the attack itself, the privileges and the type of user interaction
    required, and if the user has to click on an email for this attack to take place.
  prefs: []
  type: TYPE_NORMAL
- en: The scope metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This refers to a collection of privileges that's been defined by a computing
    authority, such as your application or the OS itself, when granting access to
    computer resources, such as memory or CPU. These permissions are assigned based
    on a method of identification and authorization. In some cases, you may find that
    authorization is easy or nonexistent. For example, if you have Ethernet traffic
    that's sent to a network switch, the switch accepts the traffic that arrives at
    its ports, and it's authorized to control the traffic flow to other switch ports.
  prefs: []
  type: TYPE_NORMAL
- en: Impact metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Impact metrics refer to the properties of the impacted component. Regardless,
    a successful exploit vulnerability affects one or more components. The impact
    metric is scored according to the components that suffer the worst or that are
    most directly and predictably impacted.
  prefs: []
  type: TYPE_NORMAL
- en: Analysts should constrain impacts to a reasonable outcome they can be confident
    an attacker can achieve.
  prefs: []
  type: TYPE_NORMAL
- en: Temporal metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This measures the current state of an exploit technique, the existence of any
    patches or workarounds, as well as the confidence that you have in describing
    the vulnerability. What we mean by this is that we look at the likelihood of a
    vulnerability being attacked. It's based on the current state of that exploit,
    regardless of updates.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at the WannaCry outbreak of 2017\. What's interesting is that this
    vulnerability had low temporal metrics because Microsoft had patched it months
    before it became popular.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to the exploit code's maturity, I go back to that reference of
    real-world exploration to see that it may only be theoretical. Again, we may see
    a proof of concept come across. This doesn't necessarily mean that this vulnerability
    will be used against you.
  prefs: []
  type: TYPE_NORMAL
- en: Temporal metrics also include the remediation level of the vulnerability. You
    need to be able to prioritize that. Typically, the vulnerability is unpatched
    when it's initially published. The vendors may issue hotfixes or workarounds until
    an official patch on upgrades has been issued. This happens almost every day.
  prefs: []
  type: TYPE_NORMAL
- en: The report confidence
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This metric measures the degree of confidence in the existence of a vulnerability
    and how credible the vulnerability is. A lot of times, we see these vulnerabilities
    come out, and people announce that they are present but nobody publishes specific
    details. So, its confidence is not very high. Later, the vulnerability may be
    confirmed and acknowledged by the author or the vendor, which would raise the
    urgency of that vulnerability to a higher level when it becomes known to exist
    with certainty.
  prefs: []
  type: TYPE_NORMAL
- en: The environmental metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This metric allows an analyst to customize their CVSS scoring based on how
    much the IT person feels it''s important for their organization. They do that
    through things such as security requirements. Again, this is exactly what it sounds
    like: what security requirements do your company policies specify? What are the
    security requirements for a regulation that''s out there? For example, if an IT
    asset supports a business function where availability is important, the analysts
    can assign a greater value to the availability relative to confidentiality and
    integrity. Each of these security requirements falls under one of three categories:
    low, medium, or high.'
  prefs: []
  type: TYPE_NORMAL
- en: Modified base metrics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This enables the analyst to adjust the base matrix according to the modifications
    that exist within their environment. A great example of this is if an environment
    has made a general change for some software in the way that it would affect the
    exploitability, the scope, or the impact. Then, the environment can reflect this
    via the modification of the base matrix.
  prefs: []
  type: TYPE_NORMAL
- en: The cool thing about this is that the VMPs consider these CVSSs for us and will
    help you along the way.
  prefs: []
  type: TYPE_NORMAL
- en: False positives and exceptions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: So, how do we identify false positives and exceptions? Many of the vulnerability
    reports that we get will contain numerous false positives or some *you're right,
    you're wrong* results. These are extremely time-consuming to investigate and eliminate.
    If there are substantial numbers of false positives, you probably need to tune
    and tweak your scan so that you can reduce the number of false positives that
    you're getting.
  prefs: []
  type: TYPE_NORMAL
- en: So, how do we do that? Well, we can start looking at validating applications
    that could be creating traffic that might be incorrectly matching a scanner signature
    for vulnerability. In this case, you can add it to your exception list so that
    you don't look at that particular result again.
  prefs: []
  type: TYPE_NORMAL
- en: Another issue is that the scanner could be using a heuristic analysis, which
    might be confused by a valid change in network usage. In other words, it might
    be necessary to establish new baselines to refer to.
  prefs: []
  type: TYPE_NORMAL
- en: Another issue that may pop up is that you might be running scans that aren't
    appropriate for your network – for example, running an application vulnerability
    scan when your network doesn't run that application. One of the things you should
    do is try adjusting the scope of the scan so that you are testing for the appropriate
    applications within your network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we have the issue that the scanner might be identifying vulnerabilities
    that could be exploited with administrative privileges, and not by end users.
    Now, one of the cool things you can do – especially with most of the VMPs out
    there – to reduce the incidence of false positives you get is identify the exception
    in the scan and configure it in a template. This may mean that you're going to
    exclude certain hosts from certain types of scans or continue to report the vulnerability
    but just assign it a lower priority. If you have systems that can't be patched
    or remediated, then you may want to watch those systems a little more closely.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's look at how, as a security professional, you can make sure you stay
    up to date with what's going on in the threat world.
  prefs: []
  type: TYPE_NORMAL
- en: Trends
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One of the problems with security is doing things to create the illusion you
    have control. I do this all the time with my kids; they assume I know more than
    I do.
  prefs: []
  type: TYPE_NORMAL
- en: Normally, you're going to deploy controls that help identify infected or unpatched
    systems and give you a report that you can work off. This type of activity is
    good but in the back of your mind, you should be concerned that something else
    could be sneaking up on you without your knowledge. That's where trends come into
    play.
  prefs: []
  type: TYPE_NORMAL
- en: If you monitor the key matrix over a certain period, it should show you policies
    that aren't being applied or that an attacker is beginning to mount an extremely
    complex or multistage campaign against you.
  prefs: []
  type: TYPE_NORMAL
- en: The problem with trends is selecting which matrix to analyze and investigate,
    given the limited amount of time you have on your hands. Here, you should develop
    a metrics analysis program. You should also try to make sure it evaluates the
    effectiveness of each matrix you track.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the possible areas for us to analyze are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the number of incidences and detections, as well as the response
    time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at hours lost or that were impacted in terms of costs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at the network itself or its metrics – you can measure any number of
    issues here. You can look at the volume of internal and external traffic, the
    number of logins, the failure of logins, active ports, the number of authorized
    or unauthorized devices on your network, unauthorized software, and so on. These
    types of stats may only be interesting from a security perspective and that's
    because most networks will change – that is, they will get faster as they deploy
    new equipment and new cabling. You should focus on training as well as threat
    awareness education – how well is your staff informed about cyber threats? You
    can measure the number of programs or start grading your users based on their
    knowledge. We see a lot of this today with the companies that help you create
    emails that are designed for users to click on a link, and then a trunk monkey
    pops out and smacks them on the head.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at compliance. This is great – you've got all these rules and policies
    in place, but how many of them are being met? What is the percentage? Is it going
    up or down? Is it going down because the compliant targets are increasing? Or
    maybe the compliance is getting tougher to meet? Or maybe your policies are not
    being followed correctly?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Looking at the external or outside threat levels – you need to ask yourself
    what your security looks like out on the internet in general terms. Are we seeing
    anything popping up and other companies or other competitors that are out there
    or anybody within our industry? Are there any major new threats for you to start
    looking for? When I get up in the morning and I start reviewing all my security
    websites, threads, and RSS feeds, I think to myself, does this apply to me? If
    it does, I need to include that in my scan so that I can make sure that I'm not
    vulnerable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, because I love you all, I will mention some of those feeds I review all
    the time:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The SANS Institute**: They have a full training environment, but they also
    have tons of information about vulnerabilities that are out there and what''s
    happening.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dark Reading**: As their name suggests, their articles are about hacking,
    which is kind of cool. They cover everything, from the cloud to mobile, to the
    current breaches and attacks that are taking place.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft''s Windows Defender Security Intelligence**: They mostly focus
    on Microsoft-based stuff, but they will also give you some updates concerning
    some other attack threats that are out there.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FireEye**: This is a great resource for you to use. One of their most popular
    resources is the recent zero-day exploits, which goes through and shows you some
    of the more popular ones. They also have a great resource of annual reports, as
    well as threat intelligence reports. You can also subscribe to their threat research
    blog if you''d like.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alien Vault**: What you''ll see with most of these is that most of the companies
    have ulterior motives because they have a product they''re trying to sell. However,
    they still provide a lot of really cool information. When it comes to Alien Vault,
    they have a threat intelligence digest. All you have to do is sign up for it and
    you will start getting notifications as new breaches or security threats become
    available.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Symantec**: They also have a website for security intelligence that provides
    tons of information. Typically, what you''ll find is that if one vendor knows
    about the breach or threat, most of them will also be aware of it too. So, sometimes,
    the information is just repetitive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure Works**: While this company offers some services, they also provide
    a lot of information about threats for free under their insights. They have a
    knowledge center, as well as research and a blog that you can look at. For example,
    under the **Research** category, you can go to **Threat Analysis** and see what''s
    currently going on in that area.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed the benefits of a VMP. We looked at ongoing VMP
    processes and the importance of vulnerability research, which helps ensure the
    network is extremely secure and can withstand attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we discussed how to ID targets for scanning, how often, how deep, and
    what scope to scan targets with, as well as the different levels of configuration.
    We also covered classifying data so that when an incident occurs, you'll know
    what needs to take priority when it comes to fixing the issue. We reviewed which
    scanner to use based on your environment. We also reviewed ways we can remediate
    our network vulnerabilities. We also talked about SSL and TLS, making sure that
    our certificates are valid, and that we're using a strong enough cipher for this
    encryption. We also talked about the issues with virtualization.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll dive into how to attack the targets that we've identified.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  prefs: []
  type: TYPE_NORMAL
- en: To find a vulnerability, an attacker sends probes and fabricated requests to
    a target. What type of scanning is this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Passive scanning
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Active scanning
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Flooding
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Man-in-the-middle
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: To identify hosts and vulnerabilities, which type of assessment is used?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Distributed
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Passive
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Active
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Automated
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which vulnerability assessment solution is said to be *placed in private or
    corporate resources*?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Service-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Inference-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Product-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Tree-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What kind of scanner is used when the location and data from a scan are stored
    on a single system?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Cluster-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Proxy-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Network-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Agent-based
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
