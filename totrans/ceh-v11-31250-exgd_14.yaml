- en: '*Chapter 15*: Cloud Computing'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud computing is a new technology that allows you to access computer applications,
    data storage, and webmail over the internet. The use of cloud computing enables
    a decentralized workforce while lowering operational costs and offering data security.
    Many organizations nowadays are moving their data and infrastructure to the cloud
    due to these advantages. However, the cloud environment likewise contains several
    dangers and risks for businesses. Attackers are exploiting security flaws in the
    cloud software to gain unlawful access to valuable data that is kept there.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud security is becoming increasingly important for both individuals and organizations.
    This chapter explains the various methods for attacking the cloud environment,
    which highlights underlying vulnerabilities. Understanding these assaults and
    vulnerabilities assists **Cloud Service Providers** (**CSPs**) as well as cloud
    consumers in developing secure cybersecurity measures to safeguard their cloud
    infrastructures. Remember, this chapter isn't designed to be *this is all you
    need to know about cloud technologies*, but rather how to protect them.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Living on Cloud 9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attacking the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tools and techniques of the attackers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best practices for securing the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's first lay a foundation for the concepts of cloud computing.
  prefs: []
  type: TYPE_NORMAL
- en: Living on Cloud 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud computing is an on-demand delivery of IT capabilities, in which IT infrastructure
    and applications are provided to subscribers as metered services over networks.
    Examples of cloud solutions include Gmail, Facebook, Dropbox, and [salesforce.com](http://salesforce.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Cloud services are delivered using internet technologies, which can include
    public, private, or hybrid models. Let''s look at these briefly next:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Public cloud services**: These are offered by providers such as Amazon, Google,
    and Microsoft. These services are available to the public and can be used by anyone
    who registers for an account. The provider manages the infrastructure and applications
    and makes them available on a pay-as-you-go basis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Private cloud services**: These are offered by organizations such as IBM,
    Hewlett-Packard, and Rackspace. These services are used by the organization that
    owns them and are not available to the public. The provider manages the infrastructure
    and applications and makes them available on a pay-as-you-go basis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hybrid cloud services**: This is a combination of public and private cloud
    services. For example, an organization might use a public cloud service for email
    and a private cloud service for storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi-cloud services**: Multi-cloud is another one. It''s a cloud environment
    made up of two or more clouds (private, public, or community) that remain unique
    entities and yet are linked to provide the benefits of various deployment methods.
    The company in this scenario makes some assets internally available and manages
    them, while other resources are external and handled by others. A great example
    of this is Microsoft''s Azure or Zymr.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's discuss some of the different cloud computing models next.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud computing models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To meet the different needs businesses have, there are a few cloud computing
    models used. Let''s briefly discuss these next:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software as a Service** (**SaaS**): Saas is the most common model for delivering
    cloud services. With SaaS, the provider hosts the applications and makes them
    available to subscribers over the internet. The subscriber uses a web browser
    to access the applications and does not need to install any software.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The application is available on a pay-as-you-go basis from the provider. SaaS
    is a great option for organizations that want to outsource their application hosting
    and don't want to worry about managing the infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: '**Platform as a Service** (**PaaS**): PaaS is a model for delivering cloud
    services in which the provider hosts the infrastructure and makes it available
    to subscribers over the internet. A subscriber can access the application via
    a web browser. There is no need to install any software.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The application is available from the supplier on a pay-as-you-go basis. PaaS
    is a wonderful alternative for companies who want to outsource their application
    hosting and don't want to deal with infrastructure management.
  prefs: []
  type: TYPE_NORMAL
- en: '**Infrastructure as a Service** (**IaaS**): IaaS is also a model available
    to subscribers over the internet. A provider hosts the infrastructure and a subscriber
    uses a web browser to access the application. There is no need to install any
    software.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This application is also available on a pay-as-you-go basis. IaaS is an excellent
    choice for companies who want to outsource their application hosting but don't
    want to deal with the infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: '**Identity-as-a-Service** (**IDaaS**): Organizations subscribe to a cloud computing
    service that provides authentication services and is run by a third-party provider
    for identity and access management services. It''s a SaaS product that provides
    **Single Sign-On** (**SSO**), **Multi-Factor Authentication** (**MFA**), **Identity
    Governance and Administration** (**IGA**), access management, and intelligence
    gathering. These features allow customers to have more secure access to sensitive
    data both on and off-premises.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security-as-a-Service** (**SECaaS**): In this cloud computing model, security
    services are incorporated into company infrastructure in a cost-effective manner.
    It is based on SaaS and does not necessitate any physical hardware or equipment.
    As a result, it has significant cost savings over what organizations spend when
    they create their own security capabilities. It offers services such as penetration
    testing, authentication, intrusion detection, anti-malware protection, and security
    incident response.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Container-as-a-Service** (**CaaS**): The cloud computing architecture behind
    it enables subscribers to utilize containers and clusters as a service. Through
    a web portal or an API, it offers virtualization of container engines, container
    management, applications, and clusters. Subscribers may use these tools to create
    rich, scalable containerized applications in the cloud or on-premises data centers.
    CaaS combines the features of IaaS and PaaS.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Function-as-a-Service** (**FaaS**): The goal of this cloud computing service
    is to make it simpler to design, operate, and manage application features without
    the burden of having to build and maintain infrastructure (serverless architecture).
    This architecture is widely utilized in the creation of microservice applications.
    Consumers access on-demand features, which power off the supporting infrastructure
    and incur no costs when idle. IoT services, mobile and web applications, and batch-and-stream
    processing are just a few of the data processing services it offers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Whew! I think that's all of them. Oh, I guess there is **Hacking-as-a-Service**
    (**HaaS**). Although it's kind of a new concept, basically you pay hackers to
    phish for you or set up a **Distributed Denial of service** (**DDoS**) as a service
    and even just plain old *hire a hacker*. I know, crazy right?
  prefs: []
  type: TYPE_NORMAL
- en: Let's talk about the separation of responsibilities in cloud computing next.
  prefs: []
  type: TYPE_NORMAL
- en: Separation of responsibilities in cloud computing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Not all cloud computing models are the same. They differ in the way they distribute
    the responsibilities of delivering a cloud service.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following three models illustrate how this distribution can take place:'
  prefs: []
  type: TYPE_NORMAL
- en: In a **provider-managed model**, the provider is responsible for everything
    from managing the applications to handling all customer support.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a **self-managed model**, the customer is responsible for managing the applications
    and for handling customer support.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In a **hybrid model**, a combination of provider-managed and self-managed services
    is used.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which model you choose depends on the needs of your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Provider-managed services are a good option for organizations that want the
    provider to handle all the responsibilities, while self-managed services are a
    good option for organizations that want more control over their applications.
    If you're not sure which model is right for you, hybrid services are a good option
    because they offer the best of both worlds.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we'll talk about how we deploy a cloud service.
  prefs: []
  type: TYPE_NORMAL
- en: Deployment models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you've decided on the type of cloud service you want, you need to decide
    on the deployment model.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following four models are the most common ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Public cloud model**: The provider in this model is responsible for the development
    and constant maintenance of the public cloud and its IT resources since they make
    services such as apps, servers, and data storage available to the public over
    the internet. As a result, the provider is accountable for creating and maintaining
    these elements of the public cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Private cloud model**: A private cloud, sometimes called an **internal**
    or **corporate** cloud, is a cloud infrastructure run by a single company and
    set inside the company''s firewall. Organizations build private cloud infrastructures
    to maintain complete control of corporate data. This model utilizes software such
    as VMware, SAP, or Microsoft''s System Center platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Community cloud model**: A community cloud is a type of private cloud that
    is shared by several organizations that have common interests, such as ensuring
    their data remains secure or sharing the cost of infrastructure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hybrid cloud model**: A hybrid cloud is a composition of two or more clouds
    (private, community, or public) that remain unique entities but are bound together
    by standardized or proprietary technology that enables data and application portability
    between them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizations use hybrid clouds to extend the reach of their private clouds
    into the public cloud, to take advantage of the economies of scale available in
    public clouds, or to combine the strengths of two or more clouds. Which deployment
    model is right for you depends on your specific needs.
  prefs: []
  type: TYPE_NORMAL
- en: Let's talk about the use of container technology next.
  prefs: []
  type: TYPE_NORMAL
- en: Container technology
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This emerging technology has been developed to specifically address the needs
    of cloud deployments. It addresses the issue of portability by encapsulating an
    application and all its dependencies into a self-sufficient package that can be
    run on any platform, in any environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the features of containers include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: They are portable, so they can be run on any platform or infrastructure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are fast to deploy, so you can get your applications up and running quickly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are lightweight, so they don't use a lot of system resources.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are secure because all the application's dependencies are included in the
    container, so you don't have to worry about security issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They are easy to manage because you can track all the containers in your deployment
    and manage them as a group.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container technology is still emerging, but it has already gained a lot of traction
    in the cloud computing world because of its many benefits. If you're looking for
    a way to make your cloud deployments more portable and efficient, you should consider
    using containers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's discuss cloud storage architecture next.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud storage architecture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have a basic understanding of how cloud-based systems work, let''s
    look at the different components that make up a cloud storage system. There are
    three primary components: **frontend, middleware, and backend**.'
  prefs: []
  type: TYPE_NORMAL
- en: The frontend layer is the part of the system that the end user interacts with.
    This might include a web interface or a mobile app. The frontend communicates
    with the middleware, which is responsible for managing the interaction between
    the frontend and the backend. The backend is the part of the system that stores
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: The frontend and the backend might be in different data centers, and the middleware
    might be in a third data center. This configuration allows the system to scale
    by adding more frontends or backends.
  prefs: []
  type: TYPE_NORMAL
- en: Most cloud storage systems use a client/server architecture. The client is the
    part of the system that is installed on the user's computer. The server is the
    part of the system that stores the data.
  prefs: []
  type: TYPE_NORMAL
- en: The client/server architecture allows the system to scale by adding more clients
    or servers.
  prefs: []
  type: TYPE_NORMAL
- en: Let's talk next about some of the cloud storage services that are available
    to us.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud storage services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that we have a basic understanding of cloud storage, let's look at some
    of the most popular cloud storage services.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon S3** is a cloud storage service that allows you to store data in the
    cloud. The service is based on the **Amazon Web Services** (**AWS**) platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Blob Storage** is a cloud storage service that allows you to store
    data in the cloud. The service is based on the Azure platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google Cloud Storage** is a cloud storage service that allows you to store
    data in the cloud. The service is based on the **Google Cloud Platform** (**GCP**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IBM Cloud Object Storage** is a cloud storage service that allows you to
    store data in the cloud. The service is based on the IBM Cloud platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's explore the **National Institute of Standards and Technology** (**NIST**)
    cloud deployment reference architecture next.
  prefs: []
  type: TYPE_NORMAL
- en: NIST cloud deployment reference architecture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have an understanding of cloud storage, let''s look at the NIST
    cloud deployment reference architecture. The primary actors involved are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Cloud consumer**: The individual or organization that contracts with the
    cloud service provider to use the cloud services for your organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud service provider** (**CSP**): A cloud provider is a person or organization
    who purchases and manages the computing infrastructure required for offering services
    directly or via a cloud broker to interested clients via network access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud service broker**: The integration of cloud services is becoming too
    difficult for cloud consumers to manage and, as a result, they are turning to
    cloud brokers rather than CSPs. The **cloud broker** is a business that manages
    cloud services, including use, performance, and delivery, as well as the connection
    between CSPs and cloud consumers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud auditor**: An organization that is hired by the cloud consumer to assess,
    test, and report on cloud service providers and brokers, as well as the management
    and security of the cloud environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud carrier**: The provider of transport services, such as bandwidth, for
    cloud-based systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's talk about a Docker next and how it's used in helping to facilitate the
    NIST architecture.
  prefs: []
  type: TYPE_NORMAL
- en: What's a Docker?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The acronym **Docker** stands for **digital container**. It's a software technology
    that lets containers be run on various platforms. To guarantee that apps function
    properly, all Docker dependencies are in the form of containers. Through OS-level
    virtualization, Docker provides a PaaS that delivers containerized software applications.
    This technology isolates apps from the infrastructure to speed up software delivery.
    The advantage of Docker is that it allows applications to run in any environment
    since they are packaged with their dependencies into a Docker container.
  prefs: []
  type: TYPE_NORMAL
- en: Microservices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Microservices are a software development technique that allows you to break
    your application down into smaller, more manageable pieces. Each microservice
    can be written in a different language and run on its own platform. This makes
    them easy to scale and manage, and it also gives you the flexibility to choose
    the best technology for each microservice. Microservices are perfect for cloud
    deployments because they make it easy to scale your application up or down as
    needed.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Kubernetes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Kubernetes is an open source system for managing containers at scale. It was
    developed by Google and is now maintained by the Cloud Native Computing Foundation.
    Kubernetes provides a platform for deploying, managing, and scaling containerized
    applications. It can be used on-premises or in the cloud, and it supports a wide
    variety of platforms, including Linux, Windows, and macOS.
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes is a powerful tool, and if you're using containers in your cloud
    deployments, you should learn how to use it. It can help you manage your containers
    more effectively and scale your applications up or down as needed.
  prefs: []
  type: TYPE_NORMAL
- en: Container security challenges
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While containers offer a number of benefits, they also present some security
    challenges. Because containers include all the application's dependencies, they
    can be a target for hackers. You need to take steps to secure your containers
    and protect them from attack.
  prefs: []
  type: TYPE_NORMAL
- en: One way to secure your containers is to use authentication and authorization
    mechanisms. You can also use firewalls and other security measures to protect
    your containers from attack. It's also important to keep your container images
    up to date, so you can stay ahead of the latest security threat.
  prefs: []
  type: TYPE_NORMAL
- en: Serverless computing
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Serverless computing is a new technology that allows you to run applications
    without having to worry about servers. With serverless computing, the server is
    abstracted away and all you need to worry about is the code. This makes it easy
    to deploy applications, and it also eliminates the need for server management.
  prefs: []
  type: TYPE_NORMAL
- en: Serverless applications are not entirely serverless; servers must be present,
    but they aren't visible to developers. In the service provider's cloud-hosted
    architecture, the application software executes on a third-party service provider's
    managed infrastructure. The cloud service provider is in charge of provisioning,
    scaling, load balancing, and securing the serverless infrastructure. The cloud
    service provider is also responsible for software and system patch management,
    as well as the underlying operating systems and applications and services.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have discussed how the cloud operates and what it does, let's talk
    about how we can attack the cloud next.
  prefs: []
  type: TYPE_NORMAL
- en: Attacking the cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The cloud has its security challenges as we're about to find out. Let's discuss
    some of the challenges we face when securing the cloud environment.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'One of the biggest concerns with cloud computing is security. When your data
    is stored in the cloud, you need to be sure that it is safe and secure. Here''s
    the secret about cloud security: it''s just another network infrastructure that
    we might be including within our own networks. So, the exact same threats that
    we experience against our internal networks (including wireless) are the same
    threats we see with the cloud. Things such as injection attacks, authentication
    issues, data leakage, misconfiguration, coding issues, passwords, and web server/app
    weaknesses are just a few of them. However, I''d be failing you if I didn''t at
    least talk about a couple of them, so here we go:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you choose a reputable cloud provider with a good reputation for security.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use strong passwords and authentication methods.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt your data.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid storing sensitive data in the cloud.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be aware of the cloud's vulnerabilities and how to protect against them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The cloud is a great way to deploy your applications, and it offers several
    benefits, including flexibility, scalability, and convenience. But it's important
    to be aware of the security challenges involved in using the cloud and take steps
    to protect your data. With the right precautions, you can safely deploy your applications
    in the cloud and enjoy all the benefits it has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now talk about some specific ways in which we can attack the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: API vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you want to hack cloud infrastructures, a good place to start is with API
    vulnerabilities. APIs are the backbone of many cloud-based services, and they
    often have more lax security than other parts of the infrastructure. By finding
    and exploiting vulnerabilities in APIs, attackers can gain access to sensitive
    data or disrupt service availability.
  prefs: []
  type: TYPE_NORMAL
- en: 'API vulnerabilities can be divided into two broad categories: those that allow
    access to sensitive data and those that allow attackers to cause a denial of service.
    API vulnerabilities that allow access to sensitive data include SQL injection
    flaws and **cross-site scripting** (**XSS**) flaws. API vulnerabilities that allow
    attackers to cause a denial of service include buffer overflow flaws and **cross-site
    request forgery** (**CSRF**) flaws.'
  prefs: []
  type: TYPE_NORMAL
- en: Attackers can use various methods to locate API vulnerabilities, including data
    mining publicly available information, such as source code repositories and bug
    trackers. Attackers can also use automated tools to scan for known vulnerabilities
    in popular APIs.
  prefs: []
  type: TYPE_NORMAL
- en: Once an attacker has found a vulnerability in an API, they can exploit it in
    several ways. For example, they may use it to gain access to sensitive data or
    launch a denial-of-service attack.
  prefs: []
  type: TYPE_NORMAL
- en: To prevent attackers from exploiting API vulnerabilities, organizations should
    implement a comprehensive security program that includes both the static and dynamic
    testing of APIs. Static testing can help identify potential vulnerabilities, while
    dynamic testing can help verify that vulnerabilities have been properly fixed.
  prefs: []
  type: TYPE_NORMAL
- en: Organizations should also consider implementing rate-limiting and other controls
    to limit the impact of denial-of-service attacks. Organizations can help protect
    their cloud-based services from attack by taking these steps.
  prefs: []
  type: TYPE_NORMAL
- en: Service hijacking using social engineering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Yep, it's a "thing". The bad guys are getting craftier and more devious in their
    attacks. And unfortunately, social engineering is one of their favorite tools.
    An attacker steals the credentials of a CSP or a customer by phishing, pharming,
    social engineering, and exploiting software vulnerabilities in order to commit
    account or service takeover. The attacker obtains access to cloud computing services
    using the stolen credentials and jeopardizes data confidentiality, integrity,
    and availability. Attackers may attempt to reset passwords or IT personnel to
    access their cloud services to obtain passwords. Password guessing, keylogging
    malware, utilizing password-cracking approaches, and sending phishing emails are
    additional methods for obtaining passwords.
  prefs: []
  type: TYPE_NORMAL
- en: Side-channel attacks or cross-guest virtual machine (VM) breaches
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Malicious insiders and attackers can use side-channel attacks to steal data
    or sensitive information from VMs. Cross-guest VM breaches are another way that
    attackers can do so. By compromising another guest's VM on the same physical server,
    attackers can steal data or sensitive information from other VMs on the same server.
  prefs: []
  type: TYPE_NORMAL
- en: Wrapping attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*"This one''s dedicated to all the hackers in the house!"*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Even out settle scores quick,*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Our disaster recovery requires even more disks,*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Put your bytes up, prove it or you forfeit,*'
  prefs: []
  type: TYPE_NORMAL
- en: '*Got my C64 and we blew it into orbit*"'
  prefs: []
  type: TYPE_NORMAL
- en: '*– Dual-Core "All The Things"* ([https://www.youtube.com/watch?v=FoUWHfh733Y](https://www.youtube.com/watch?v=FoUWHfh733Y))'
  prefs: []
  type: TYPE_NORMAL
- en: Oh, wrong kind of wrap. My bad.
  prefs: []
  type: TYPE_NORMAL
- en: In a wrapping attack, the adversary deception takes place during the translation
    of the **Simple Object Access Protocol** (**SOAP**) message in TLS. The intruder
    copies the message's body and transmits it to the server as though they were a
    legitimate user. The server verifies the authentication by comparing the signature
    value (which is also duplicated) to the original. An attacker can then break into
    the cloud and execute malicious code to disrupt the cloud servers' normal operation.
  prefs: []
  type: TYPE_NORMAL
- en: Man-in-the-Cloud (MITC)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An MITC attack is an attack in which the attacker controls or alters the cloud
    application's behavior. Attackers can use MITC attacks to bypass security controls,
    inject malicious code into applications, and steal data. They can also use MITC
    attacks to gain access to other users' accounts and conduct other malicious activities.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud hopper attack
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The cloud hopper attack is a sophisticated hacking campaign that targets organizations
    that use cloud-based services. Cloud hopper attacks are triggered at managed service
    providers (MSPs) and their customers. The goal of the attack is to steal data
    and intellectual property from these organizations. The cloud hopper attack uses
    a variety of techniques, including malware, phishing, and social engineering,
    to gain access to the organization's systems. Once they have access, the attackers
    steal data and intellectual property and then move on to other organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud cryptojacking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cryptojacking is the unauthorized use of someone else's computer to mine cryptocurrency.
    Cryptocurrency mining is a process that uses computing power to solve complex
    mathematical problems in order to verify and record transactions on a blockchain.
    Cryptojacking is becoming a more common attack vector because it is easy to execute
    and does not require a lot of technical knowledge. Attackers can use cryptojacking
    to mine cryptocurrency on the victim's computer without their knowledge or consent.
    They can also use cryptojacking to mine cryptocurrency on the computer of an organization's
    employees. This can result in financial losses for the organization and decreased
    productivity for the employees.
  prefs: []
  type: TYPE_NORMAL
- en: Cloudborne malware
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Cloudborne is a security vulnerability in a bare-metal cloud server that allows
    attackers to install a malicious backdoor into the firmware. The installed malware
    can remain even if the server is reassigned to new clients or organizations who
    utilize it as an IaaS. Physical servers are not confined to one client and can
    be moved from one client to another. Cloudborne malware is malware that is designed
    to infect cloud-based systems. Cloudborne malware can be used to steal data, sabotage
    systems, and spread ransomware. It can also be used to gain access to the organization's
    systems and steal data. Cloudborne malware is a growing threat because it is difficult
    to detect and can be used to target a wide range of organizations.
  prefs: []
  type: TYPE_NORMAL
- en: Gaining access by exploiting SSRF vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Server-Side Request Forgery** (**SSRF**) is a vulnerability that allows an
    attacker to send requests from the server to external resources that the server
    should not be able to access.'
  prefs: []
  type: TYPE_NORMAL
- en: One way an attacker can exploit an SSRF vulnerability is by sending a request
    to a cloud storage service, such as Azure Blob storage or Amazon **Simple Storage
    Service** (**S3**), and then reading the response from the service. This can be
    done by using the **fetch** API in JavaScript, or by using the **get has** command
    in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Once the attacker has access to the response from the cloud storage service,
    they can then download any files that are stored in the service.
  prefs: []
  type: TYPE_NORMAL
- en: Another way an attacker can exploit an SSRF vulnerability is by sending a request
    to a web server that is hosting a sensitive file, such as a configuration file
    or a database. The attacker can then download the contents of the file by using
    the **GET** command in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: By exploiting an SSRF vulnerability, an attacker can gain access to sensitive
    files that are stored in the cloud, and they can also steal data from cloud-based
    applications.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's talk about container vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Container vulnerabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Containers are a popular way to deploy applications in the cloud. They allow
    applications to be isolated from the underlying system and make it easy to move
    applications from one server to another. However, container vulnerabilities can
    allow attackers to gain access to the underlying system and steal data or install
    malware. Attackers can also use containers to hide their malicious activities
    from the organization's security tools. Containers are a popular target for attackers
    because they are easy to exploit and provide a lot of access to the underlying
    system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some of the more common vulnerabilities security professionals
    should be aware of:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Insecure container runtime configurations**: Containers can be insecure if
    the runtime configurations are not set up properly. Attackers can use these vulnerabilities
    to gain access to the underlying system and steal data or install malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Embedded malware**: Malware can be embedded in the application code that
    is run on the container. This malware can remain active even after the container
    is deleted or reassigned to another client.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Poor access control**: Containers typically have poor access control, which
    allows attackers to gain access to the underlying system and steal data or install
    malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Insufficient security controls**: Containers do not have the same security
    controls as the underlying system, which allows attackers to bypass security controls
    and steal data or install malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Leaky containers**: Containers can leak data to the underlying system, which
    can allow attackers to steal data or install malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Insecure data storage**: Container data can be insecurely stored on the underlying
    system, which can allow attackers to steal data or install malware.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organizations should be aware of these vulnerabilities and take steps to mitigate
    them. Security professionals should also be aware of these vulnerabilities and
    take steps to protect their organizations from them.
  prefs: []
  type: TYPE_NORMAL
- en: Let's talk next about some of the specific tools and techniques that attackers
    use.
  prefs: []
  type: TYPE_NORMAL
- en: Tools and techniques of the attackers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To attack the cloud, a hacker will need tools to do so. Here, we will discuss
    some of the more common tools that are available.
  prefs: []
  type: TYPE_NORMAL
- en: The tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A container image is a software package that includes an operating system, application,
    runtime, and other components. These containers are frequently reused throughout
    the industry and may include open source libraries with security concerns. These
    flaws endanger not only the security of each container but also that of the entire
    container engine. Tools such as Clair, Twistlock, and Trivy are great options
    for attacking containers.
  prefs: []
  type: TYPE_NORMAL
- en: Looking to find attack Kubernetes, also known as K8s? Most of the vulnerabilities
    we find are based on misconfiguration. Sysdig ([sysdig.com](http://sysdig.com))
    is a great tool to not only scan for vulnerabilities but also for validating container
    images.
  prefs: []
  type: TYPE_NORMAL
- en: Believe it or not, attackers use Google hacking techniques to identify Amazon
    Cloud storage services (called S3 buckets)! If you remember our Google hacks,
    we can use the **inurl** syntax to look for subdomains that are used by AWS.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: But if you want a more straightforward method, you can look at S3Scanner ([https://github.com/sa7mon/S3Scanner](https://github.com/sa7mon/S3Scanner))
    to identify open S3 buckets of cloud services, such as AWS, and retrieve their
    content for *evil* purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Let's consider some additional tools and security risks these tools can assist
    us with next.
  prefs: []
  type: TYPE_NORMAL
- en: Enumerating AWS account IDs and roles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: AWS accounts are identified by unique IDs that, if made public, might be used
    by attackers to target cloud services. These persistent identifiers are intended
    to be private, yet they are frequently exposed to the general public without the
    user's knowledge. Attackers can take advantage of this information leakage and
    use it for nefarious purposes. By analyzing AWS error messages, attackers can
    determine what **Identity and Access Management** (**IAM**) role names exist.
    The existence of a user is revealed in AWS Cloud services through the errors,
    which give information about the presence of a user. Users are usually permitted
    to take on numerous roles in AWS Cloud services. Every failure on the part of
    AWS results in information being revealed about the role's existence. If an AWS
    account is blocked after a certain number of tries, implementing a brute-force
    approach might be challenging but not impossible.
  prefs: []
  type: TYPE_NORMAL
- en: CloudGoat AWS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: CloudGoat is a tool ([rhinosecuritylabs.com](http://rhinosecuritylabs.com))
    that allows you to test the security of your AWS account. The tool is based on
    the **Open Web Application Security Project** (**OWASP**) Top 10 security risks.
    Yep, OWASP has a list for cloud security.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the top 10 security risks CloudGoat tests for:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Injection**: The injection of unauthorized code into a web application.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Broken authentication and session management**: Unsecured login credentials
    and session cookies.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cross-site scripting (XSS)**: Malicious code that is executed when a user
    visits a web page.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Insecure direct object references**: Unauthorized access to sensitive data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Security misconfiguration**: Incorrectly configured security settings.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Insufficient authorization and authentication**: Lack of proper authentication
    checks.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Insufficient cryptography**: Weak cryptography algorithms and keys.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tampering with data**: Tampering with information to change its integrity.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cross-site request forgery (CSRF)**: Attackers trick a user into performing
    actions that they didn''t intend to do.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Information leakage and improper authorization**: Unauthorized access to
    data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Other tools that can be used to analyze cloud services/deployments include:'
  prefs: []
  type: TYPE_NORMAL
- en: DockerScan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCPBucketBrute
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS pwn
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And I'm sure there are hundreds more, but these are the ones you'll want to
    be aware of for your *immediate future*.
  prefs: []
  type: TYPE_NORMAL
- en: Let's consider some best practices for securing the cloud next.
  prefs: []
  type: TYPE_NORMAL
- en: Best practices for securing the cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing that you can do to improve the security of your cloud-based
    systems is to enable SSL (Secure Socket Layer) and TLS (Transport Layer Security)
    encryption. This will help to protect your data from being intercepted by attackers.
  prefs: []
  type: TYPE_NORMAL
- en: You can also improve the security of your systems by using firewalls and an
    IDS (intrusion detection system) and an IPS (intrusion prevention system). These
    devices can help to protect your systems from being attacked by malicious traffic.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a list of other things you can do:'
  prefs: []
  type: TYPE_NORMAL
- en: To protect your data, you should enforce the use of data encryption and access
    controls. This includes data that is in rest as well as in motion.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disaster recovery planning is another critical factor when securing your cloud-based
    systems. You should have a plan in place in case of a natural disaster or a security
    incident.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enforce SLAs to ensure your cloud provider meets the security requirements you
    have outlined.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Utilize strong AAA (authentication, authorization, and auditing) controls. These
    controls can help to protect your systems from unauthorized access.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stop allowing user credential sharing with your employees. This will help to
    reduce the risk of a data breach.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isolate memory, storage, and network access. This can help to prevent attackers
    from gaining access to your systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand your responsibility model for the cloud. This will help you to determine
    who is responsible for securing the cloud-based systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Be aware of the risks associated with using cloud services. Educate your employees
    about these risks and take steps to mitigate them.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To secure your cloud-based systems, you need to establish and enforce cloud
    security policies. These policies should be based on the risk level of the data
    that is being stored in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the things that you should consider when creating your cloud security
    policies include:'
  prefs: []
  type: TYPE_NORMAL
- en: The type of data that is being stored in the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The level of security that is required for the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How the data is being accessed and used
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The authentication requirements for accessing the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The encryption requirements for the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The retention and disposal requirements for the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The incident response plan for responding to a data breach
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The disciplinary actions that will be taken against employees who violate the
    security policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The training requirements for employees who are accessing the data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should also consider establishing a cloud security governance framework.
    This will help to ensure that your cloud security policies are being followed.
  prefs: []
  type: TYPE_NORMAL
- en: Double-check your compliance requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you are storing data in the cloud, you need to make sure you are adhering
    to the relevant compliance requirements. These requirements vary from organization
    to organization, so you will need to consult with your legal department to make
    sure you comply.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the standard compliance requirements that apply to cloud-based systems
    include:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Health Insurance Portability and Accountability Act** (**HIPAA**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Sarbanes-Oxley Act** (**SOX**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Payment Card Industry Data Security Standard** (PCI DSS)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The Gramm-Leach-Bliley Act** (**GLBA**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, you should make sure that you regularly update the software and firmware
    on your devices. This will help to protect your systems from being exploited by
    known vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: By following these best practices, you can help improve your cloud-based systems'
    security.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered how cloud computing is a benefit, and also how it
    may be a challenge for us to secure. We discussed some ways in which the cloud
    is vulnerable to being attacked. We shared some of the tools and techniques attackers
    may use. And finally, we talked about some best practices to help you secure the
    cloud.
  prefs: []
  type: TYPE_NORMAL
- en: The important thing to remember is that many of the same weaknesses and attacks
    we see within the cloud are the same as what we've learned about on our normal
    networks and that they are just as much of a target for attackers.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll talk about how the attackers look at cryptography
    and what we can do about it.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the *Appendix*:'
  prefs: []
  type: TYPE_NORMAL
- en: All of the following can be configured in a cloud environment except which one?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: LaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What does a cloud-hosting SaaS environment provide?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Development options
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Testing options
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Software hosting
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Improved security
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is separated by a cloud-based firewall?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hosts
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Networks
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ACL
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Permissions
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: How many kinds of cloud-hosting environments are there?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Five
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Four
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Three
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Two
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
