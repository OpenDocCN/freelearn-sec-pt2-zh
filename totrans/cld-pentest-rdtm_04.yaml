- en: '4'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security Features in AWS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a cloud pentester, the likelihood of being asked to pentest AWS applications
    and services is very high. AWS has played a central role in the cloud computing
    boom of the past 20 years. So, in this chapter, I’ll introduce you to AWS. You’ll
    learn about the most popular AWS services, applications, and features and why
    they’re used. We’ll also talk about AWS’s SaaS, IaaS, and PaaS features, and explore
    Amazon’s own AWS security tools and third-party security tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’ll cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to AWS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frequently used AWS SaaS features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS IaaS features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS PaaS features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS security controls and tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to AWS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**AWS** stands for **Amazon Web Services**. It’s one of the most popular cloud
    platforms. Amazon started as an online book retailer in 1994, but even in those
    early days, Amazon founder *Jeff Bezos* said that [Amazon.com](https://Amazon.com)
    was a tech company with an objective to simplify online transactions for consumers.
    The parts of the business akin to traditional retailers, such as maintaining warehouses
    of inventory and customer service, were just some of the necessary components.
    The infrastructure that Bezos truly values has always been Amazon’s data centers.'
  prefs: []
  type: TYPE_NORMAL
- en: As the 1990s went on, Amazon expanded its inventory well beyond books. It started
    selling music, movies, apparel, home accessories, and so on. In the 21st century,
    Amazon sells almost everything that can be properly stored at room temperature
    and legally sold to consumers. They also provide a lot of different internet services
    for consumers, such as streaming entertainment from **Amazon Prime** and **Kindle
    eBooks**.
  prefs: []
  type: TYPE_NORMAL
- en: As the 2000s began, Amazon found itself with more computer networking infrastructure
    than most big corporations. No other company on Earth had so much success selling
    products through the web. So, by 2002, Amazon started to let other retail businesses
    use some of its infrastructure and software to deploy their own e-commerce more
    successfully. That’s the origin of AWS, but AWS didn’t take its current form until
    2006 when it launched **Elastic Compute Cloud** (**EC2**) and **Simple Storage
    Service** (**S3**). EC2 rents computer processing power and S3 rents data storage
    to business and enterprise customers.
  prefs: []
  type: TYPE_NORMAL
- en: As of 2023, there’s a wide range of AWS applications to serve a variety of business
    needs. EC2 and S3 have improved over the years and are very commonly used services.
    There’s a whole collection of AWS applications and services for many SaaS, PaaS,
    and IaaS use cases. Ever since AWS launched about 20 years ago, it has frequently
    added new services and applications.
  prefs: []
  type: TYPE_NORMAL
- en: Whether your organization uses AWS as its sole cloud provider or has a multi-cloud
    network, it likely has more than one AWS service or application implemented into
    its network. Some organizations even use dozens of AWS applications simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: Describing every AWS service and application in detail is beyond the scope of
    this book. But when you pentest your organization’s AWS network, it’s important
    to understand why many of the most popular AWS services and applications exist.
    Let’s have a look.
  prefs: []
  type: TYPE_NORMAL
- en: Frequently used AWS SaaS features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AWS features, applications, and services fall into a lot of different categories.
    Some services are offered free of charge or with limited free trials. Most services,
    especially the ones that businesses are most likely to use, are provided for fees
    that vary depending on the service and how much a business needs to use it. For
    example, a cloud application that needs a small amount of bandwidth and serves
    a few hundred users per month will generally be a lot less expensive than a cloud
    application that needs a large amount of bandwidth and serves tens of thousands
    of users per month.
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, managing AWS service fees is your organization’s responsibility,
    not yours. So, I’ll explain what a pentester needs to understand: the AWS services
    that businesses frequently use and why they use them.'
  prefs: []
  type: TYPE_NORMAL
- en: I’ll start with some SaaS features and applications. These applications use
    AWS’s infrastructure, platform, and its own software. SaaS services are the ones
    Amazon has the most responsibility for and control of. As a pentester, you’re
    not allowed to pentest them in any way whatsoever. Refer to AWS’s penetration
    testing policies ([https://aws.amazon.com/security/penetration-testing/](https://aws.amazon.com/security/penetration-testing/)).
    However, you should still understand what these applications are, even if you’re
    not allowed to pentest them. It’ll help you understand how your organization uses
    AWS as a whole, which will help you devise more effective red team scenarios and
    put security testing findings into context.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Chime** is Amazon’s equivalent to Zoom or Skype, hosted through the
    AWS ecosystem. Chime supports pretty much all types of client computers and mobile
    devices, with native Windows, Mac, iOS, Android, and web applications. Your organization
    may use Chime to conduct video conferencing between employees and contractors.
    It can control who has access to its video conferencing meetings and what kind
    of access they have.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon WorkMail** provides email services and integrated calendars. It works
    kind of like Gmail and Google Calendar. WorkMail can be used with the Microsoft
    Outlook client or pretty much any email client software that’s compatible with
    the IMAP protocol.'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Budgets** is designed for small businesses to track their spending. They
    can set a budget such as $5,000 per month. They can track how much employees or
    other stakeholders spend from the corporate bank account, and how they spend it.
    There are a ton of other features, such as the ability to generate highly detailed
    reports and trigger alerts for spending anomalies.'
  prefs: []
  type: TYPE_NORMAL
- en: AWS SaaS services can be very user friendly, and they can help both business
    customers and consumers get lots of work done. Although you won’t be allowed to
    pentest these applications, there’s a strong likelihood that at least some AWS
    SaaS applications are a part of your company’s network. For instance, if a company
    stores a lot of its data in Amazon S3, it might as well use Amazon WorkMail for
    the company email servers. AWS service subscriptions make it convenient for companies
    to use a variety of SaaS, IaaS, and PaaS applications at the same time and pay
    for them with the same billing.
  prefs: []
  type: TYPE_NORMAL
- en: AWS IaaS features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**IaaS** or **infrastructure-as-a-service** features are the parts of AWS where
    enterprises have the most control and the most responsibility. There’s more that
    pentesters are allowed to do with these components than with PaaS and SaaS. But
    you are still on Amazon’s infrastructure, therefore they still have rules of engagement
    to abide by. Refer to AWS’s pentesting policies in *Chapters 2* and *3*, or you
    can find them on their website ([https://aws.amazon.com/security/penetration-testing/](https://aws.amazon.com/security/penetration-testing/)).'
  prefs: []
  type: TYPE_NORMAL
- en: 'AWS IaaS can be divided into two general categories: *compute* and *storage*.'
  prefs: []
  type: TYPE_NORMAL
- en: Compute services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Amazon EC2 is AWS’s debut compute service. It stands for Amazon Elastic Compute
    Cloud. EC2 is largely used by enterprises that develop their own software but
    need tons and tons of computer processing power to process their databases, conduct
    scientific research, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: I’ll summarize some company testimonials.
  prefs: []
  type: TYPE_NORMAL
- en: '**Orangetheory Fitness** is a popular gym chain in the United States and Canada.
    It offers its customers “high-tech group workouts that combine high-intensity
    interval training designed to improve strength and cardio fitness levels.” It
    deploys its in-house software through EC2 to analyze the fitness data it constantly
    gets from thousands of customers every day.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Toyota Research Institute** uses EC2 to train machine learning models. In
    machine learning, AI processes a large amount of data over time and makes changes
    to a program according to what it has learned from the data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Airlines** were among the earliest customers of IBM mainframe computers back
    in the 1960s. Think of all the data an airline has to process constantly – such
    as ticket sales and flight data. If a flight is late, a computer has to have a
    record of how late the flight is, where the aircraft is, and why it’s late. That’s
    just an example of the kind of information an airline has to compute in its everyday
    business operations. Cathay Pacific is a very large Asian airline that serves
    “nearly 200 destinations in 49 countries and territories.” And now, using cloud
    services such as Amazon EC2 is a more effective 21st-century alternative to running
    massive mainframes on-premises.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Netflix** is another example of the sort of large corporation that uses EC2\.
    Its testimonial says that a lot more people were watching Netflix during the beginning
    of the COVID-19 pandemic. Netflix called it “this unprecedented time.” Hypothetically,
    if 20 million people worldwide were watching Netflix concurrently at a given time
    and then 50 million people worldwide watched Netflix concurrently at another time,
    that’s a massive increase in the computing and networking resources that would
    be needed. Therefore, Netflix says it likes EC2 for its scalability.'
  prefs: []
  type: TYPE_NORMAL
- en: Amazon **Elastic Container Service** (**ECS**) is another IaaS computing solution.
    It is a suitable choice for companies looking for the necessary infrastructure
    to deploy applications that are containerized, as using containerized applications
    is a prevalent way to utilize cloud infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: At the risk of oversimplifying a complex topic, it’s a way to deploy an application
    with a lot of components running in virtual machines, called containers.
  prefs: []
  type: TYPE_NORMAL
- en: What are containers?
  prefs: []
  type: TYPE_NORMAL
- en: Containers are a really precise way to deploy virtualization, a way to simulate
    computer hardware with software. A container contains only the operating system
    components that are needed to run a small part of a much larger application. Individual
    containers can have a lifespan of just a few days or even just a few hours.
  prefs: []
  type: TYPE_NORMAL
- en: Containers can be launched and killed dynamically according to the current needs,
    a way of providing scalability. Containers often contain a virtualized operating
    system and a component of a more sophisticated application. But containers need
    a containerization orchestration solution in order to be managed and to allocate
    hardware resources. Amazon describes ECS as a “fully managed container orchestration
    service that helps organizations easily deploy, manage, and scale containerized
    applications.”
  prefs: []
  type: TYPE_NORMAL
- en: '**Docker** is a container orchestration platform. ECS is a service that can
    be used to deploy such platforms. Think of a company’s software as the swimmers,
    Docker as the water, and ECS as the swimming pool. If your company uses Kubernetes
    as its container orchestration platform, it can instead choose **Amazon Elastic
    Kubernetes Service** (**Amazon EKS**) to serve a similar purpose to ECS.'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Lambda** is another service that AWS permits pentesting on. It’s categorized
    as a compute service. It can be used to help deploy your applications on Amazon’s
    infrastructure as a serverless compute service while dynamically allocating resources
    according to whatever is needed at any given time. Developers can deploy custom
    logic in Lambda. For example, if a user leaves an item in their shopping cart
    without checking it out, send the user an email reminder in three days, and remove
    the item from their shopping cart in seven days. Lambda can run applications that
    use any third-party library, and there’s also native support for Java, Go, PowerShell,
    Node.js, C#, Python, and Ruby.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon CloudFront** is a **content delivery network** (**CDN**). A CDN is
    defined as a geographically distributed network of proxy servers and their data
    centers. CDNs were originally created in the late 1990s to help support the rapidly
    expanding use of the internet. So, a CDN can dynamically allocate network resources
    to avoid bottlenecks – points in the transmission path that can slow down performance.
    So, if one part of a network is managing as much data as it can, the CDN data
    transmission path will use another part of the network that has room to manage
    more data. **YouTube** is an example of a very popular streaming media platform
    that uses a CDN. The data center and servers that are streaming videos to YouTube
    users can change according to demand and capacity.'
  prefs: []
  type: TYPE_NORMAL
- en: Amazon CloudFront supports WebSocket, edge termination, Amazon EC2, Amazon S3,
    Elastic Load Balancing, and Lambda.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Fargate** is a serverless compute solution for containers. Developers
    can deploy Docker applications through Amazon ECS or Kubernetes applications through
    Amazon EKS. All the necessary hardware and network resources are dynamically allocated.
    Just as much memory as is needed at any given time will be used. I’ll explain
    more about containerization in the *AWS PaaS features* section of this chapter
    and in *Chapters 6*, *9*, and *12*.'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Elastic Beanstalk** uses Amazon’s compute services and infrastructure
    to deploy web applications. It features native support for Java, .NET, Node.js,
    PHP, Ruby, Python, Go, and Docker. Developers can use **integrated development
    environments** (**IDEs**) they’re already familiar with, such as Eclipse and Visual
    Studio, to deploy applications through Elastic Beanstalk.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at some IaaS solutions for storage.
  prefs: []
  type: TYPE_NORMAL
- en: Storage services
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Enterprises can generate petabytes of data. A petabyte is about 1,024 terabytes.
    You likely have at least a few terabytes worth of storage on your mobile devices,
    laptop, and external hard drive. Businesses often need petabytes of storage, and
    sometimes even exabytes! An exabyte is about 1,024 petabytes. Any organization
    with petabytes or exabytes of data would absolutely need massive data centers
    in order to store it. Now, it’s much more feasible for those data centers to be
    on the cloud, because even running a data center for several petabytes of storage
    can be a big hassle.
  prefs: []
  type: TYPE_NORMAL
- en: Amazon S3 is the debut AWS storage service. If a company has huge amounts of
    data that it needs to store, Amazon S3 is one of the most popular options for
    that purpose.
  prefs: []
  type: TYPE_NORMAL
- en: '**Snap**, the company that makes **Snapchat**, says that it stores about 2
    exabytes of data through Amazon S3\. Snap says that’s over 1.5 *trillion* photos
    and videos. So, that’s an example of how a company with a huge amount of data
    may use it. But companies don’t have to have anywhere near that much data to use
    Amazon S3.'
  prefs: []
  type: TYPE_NORMAL
- en: Amazon promises that if customers use Amazon S3 as designed, it will keep secure
    the infrastructure that’s used to store their data and make sure that any of their
    data is easily retrievable as quickly as possible.
  prefs: []
  type: TYPE_NORMAL
- en: One of the more common uses for Amazon S3 is to store data lakes. A data lake
    is a huge, centralized repository of structured and unstructured data. For instance,
    all the photos in everyone’s accounts in Google Photos could be collected as one
    data lake in the low exabytes. Big tech companies often use data lakes to train
    machine learning AI.
  prefs: []
  type: TYPE_NORMAL
- en: Another common reason to use Amazon S3, for large and small businesses alike,
    is to back up data. There are multiple AWS data centers worldwide, and the data
    that companies store through Amazon S3 could be physically stored on multiple
    continents. It’s possible for a massive cyberattack, earthquake, or hurricane
    to destroy a lot of computers in one location. Instead of taking the risk of having
    all of a company’s crucial and critical data stored on its premises, the company
    can store it through Amazon S3 internationally.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Backup** centralizes and automates data backups. It can work with Amazon
    S3 to store an organization’s data, and with Amazon EC2 to create on-demand backup
    jobs. Imagine a company with thousands of users and PCs in multiple countries.
    The work they do for the company each day needs to be backed up to the company’s
    AWS network. Most employees work between 9 a.m. and 5 p.m. but may live across
    a dozen different time zones. So, it may be convenient to execute a backup job
    at 5 p.m. each day, but 5 p.m. occurs at different moments all across the globe.
    These are the kinds of complex data backup needs that AWS Backup is designed to
    handle. AWS Backup is fully compatible with all AWS services.'
  prefs: []
  type: TYPE_NORMAL
- en: If your organization has a lot of software developers and IT people, there’s
    a good chance that it can make good use of AWS’s IaaS services. AWS IaaS gives
    organizations a lot of control over their own custom software without the downsides
    of having to maintain on-premises data centers.
  prefs: []
  type: TYPE_NORMAL
- en: AWS PaaS features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**PaaS** or **platform-as-a-service** is in the middle between IaaS and SaaS
    as far as security responsibilities are concerned. AWS provides the infrastructure
    and a platform, but it doesn’t provide all of the software as it would in SaaS.
    PaaS services are software developer tools most of the time. As a pentester, you
    generally can only pentest PaaS services under very limited conditions. A lot
    of what you’re permitted to do in IaaS is forbidden in PaaS. When in doubt, assume
    by default that you’re not allowed to do something, and consult the AWS penetration
    testing policy ([https://aws.amazon.com/security/penetration-testing/](https://aws.amazon.com/security/penetration-testing/)).
    In some situations, such as network stress testing, you may submit a form to AWS
    to request permission to do something. Only proceed with your plans for your red
    team engagement when you’ve verified that AWS will permit you to do everything
    you plan to do. You may have to tweak or adjust your plans according to AWS’s
    response to your inquiry.'
  prefs: []
  type: TYPE_NORMAL
- en: As with SaaS, even when you’re not allowed to pentest something, it still helps
    to understand how your company uses AWS PaaS. It’ll help you put your red team
    engagements and their impact into perspective.
  prefs: []
  type: TYPE_NORMAL
- en: The **AWS Command-Line Interface** (**AWS CLI**) is pretty much as it sounds.
    Just as you can use a command line to administrate your own computer by typing
    in commands and hitting *Enter*, AWS lets developers manage AWS services in a
    similar way. Developers often love the CLI because it gives them a lot more control
    than they’d get from a **graphical user interface** (**GUI**). Or, at least, they
    can get what they want done much more quickly and efficiently. The AWS CLI has
    good documentation and support for executing shell scripts ([https://docs.aws.amazon.com/cli/latest/reference/](https://docs.aws.amazon.com/cli/latest/reference/)).
    You can use the AWS CLI from an application installed on Windows, Mac, or Linux.
    Alternatively, you can access the AWS CLI through your web browser with *AWS CloudShell*.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS CDK** is AWS’s **Cloud Development Toolkit**. Software developers are
    familiar with **software development kits** (**SDKs**). For instance, in order
    to create Java applications that work well in multiple operating systems, your
    IDE (a type of application for software development) needs Java SDKs. AWS CDK
    is conceptually similar, but for the cloud. When an organization develops a cloud
    application to deploy through AWS in-house, AWS CDK is very useful.'
  prefs: []
  type: TYPE_NORMAL
- en: So, AWS CDK helps to support cloud features within in-house-developed cloud
    applications. Chances are, developers will also need AWS tools and SDKs ([https://aws.amazon.com/developer/tools/](https://aws.amazon.com/developer/tools/))
    to support the other technologies and platforms they may be using. There are AWS
    SDKs specific to C++, Go, Java, JavaScript, Kotlin, .NET, Node.js, PHP, Ruby,
    Python, Rust, and Swift.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Cloud9** is Amazon’s own IDE for developing cloud applications with AWS
    CDK and the programming language-specific SDKs and tools that are needed. Cloud9
    runs directly in the web browser and developers can use it to work on the applications
    they’re making wherever they happen to be, on any compatible computer they can
    log in to. That’s because Cloud9 stores all of their work through the cloud! How
    convenient.'
  prefs: []
  type: TYPE_NORMAL
- en: What if people are making movies and cartoons instead of cloud-driven software
    applications? That’s what **Amazon Nimble Studio** is for. As with Cloud9, users
    can work on their projects wherever they go. They can also collaborate on projects
    with the rest of their team.
  prefs: []
  type: TYPE_NORMAL
- en: All data transmitted on the internet should be encrypted with public key cryptography.
    **AWS Certificate Manager** is a main component of the **public key infrastructure**
    (**PKI**) that companies need to deploy in order to encrypt the applications they
    deploy through AWS with SSL or TLS.
  prefs: []
  type: TYPE_NORMAL
- en: Users often interact with cloud-driven applications with their iPhones and Android
    phones as endpoints. Software developers know that they can’t be sure how well
    their application will run on a particular device without testing it on that device.
  prefs: []
  type: TYPE_NORMAL
- en: It’s a hassle to maintain a collection of iPhones and Android phones of various
    models. So, developers can use **AWS Device Farm** as an alternative. AWS Device
    Farm virtualizes a wide variety of phone and tablet models and developers can
    directly see how their applications will run. They can even interact with their
    applications exactly how a user would through a touchscreen simulation.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Amplify** promises to help developers “build full-stack web and mobile
    apps in hours.” It can be an appropriate solution if the app is relatively simple.
    For example, luxury retailer Neiman Marcus uses AWS Amplify to create and manage
    its online retailing.'
  prefs: []
  type: TYPE_NORMAL
- en: Databases are often a necessary component for many different kinds of applications.
    AWS has multiple PaaS database services according to the type of database that’s
    needed. In-depth explanations of different database technologies are beyond the
    scope of this book, but an experienced development team will usually know what
    kind of databases they need.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Aurora** supports MySQL and PostgreSQL databases. It also directly
    integrates with Amazon S3, AWS Backup, AWS EKS, and many other AWS services.'
  prefs: []
  type: TYPE_NORMAL
- en: Amazon **Relational Database Service** (**RDS**) is for relational databases.
    It can use Amazon Aurora as an engine. It can also use MySQL, MariaDB, PostgreSQL,
    Oracle, and SQL Server directly.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Redshift** is for data warehousing. Whereas data lakes can contain
    very large amounts of unstructured data, data warehousing is for very large amounts
    of carefully structured data. It uses SQL to analyze the data in your organization’s
    data warehouses. Deploying large-scale data analytics is a common use case for
    Amazon Redshift.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Lightsail** promises to help developers deploy web applications “in
    just a few clicks” using a series of virtual servers. It offers support for managed
    databases with MySQL or PostgreSQL. It facilitates CDNs on the same infrastructure
    as Amazon CloudFront. It also supports Docker containers through a Lightsail container
    service.'
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS CodeDeploy** automates code deployment through your organization’s on-premises
    servers, or through Amazon EC2, AWS Lambda, AWS Fargate, or AWS ECS. You can monitor
    and roll back your applications as needed, configure and orchestrate deployment,
    and maintain different application releases all at the same time.'
  prefs: []
  type: TYPE_NORMAL
- en: AWS PaaS services are popular with software developers. They help developers
    create custom applications without having to build all the components from scratch.
    These days, applications are seldom developed from scratch anyway.
  prefs: []
  type: TYPE_NORMAL
- en: AWS security controls and tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most important things that you need to become familiar with as an
    AWS pentester is the various security controls AWS uses, and the tools you can
    use to conduct your pentesting. The details on how to use those tools will be
    explained in *Chapters 5* and *6*, but I’ll introduce the tools here.
  prefs: []
  type: TYPE_NORMAL
- en: Security controls
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, what are security controls, and what security controls does AWS have?
  prefs: []
  type: TYPE_NORMAL
- en: Security controls are components that can help to prevent or mitigate cyberattacks
    or other possible threats to your organization’s data. All security threats are
    related to the **CIA** (**confidentiality, integrity, and availability**) **Triad**.
    So, a security control is designed to help prevent breaching data confidentiality
    and the integrity of data, and may also be designed to help maintain the availability
    of data. A security control can help with one or any combination of these three
    components.
  prefs: []
  type: TYPE_NORMAL
- en: Examples of security controls include antivirus software, physical door locks
    to rooms that have computers in them, intrusion detection sensors, security cameras,
    DDoS mitigation solutions (such as Cloudflare), intrusion prevention systems,
    firewalls, authentication systems (usernames, passwords, or two-factor authentication),
    human security guards, and access cards and tokens.
  prefs: []
  type: TYPE_NORMAL
- en: These sorts of tools, systems, and mechanisms can help improve a company’s cybersecurity
    if they’re used properly, but no security control guarantees perfect security.
    Well-used security controls lessen the frequency and negative impact of cyberattacks.
    As a pentester, you’ll often be expected to test the effectiveness of how your
    organization implements these controls by simulating cyberattacks against them.
    In your pentesting report, you may have to describe how security controls reacted
    to your pentests and how your organization can improve their use. Sometimes, you
    may even work with defensive security professionals to suggest better alternatives
    or upgrades.
  prefs: []
  type: TYPE_NORMAL
- en: Amazon provides customers with a lot of different security controls that they
    can use in their AWS networks. As with all security controls, they only work if
    they use them, and use them properly! Amazon is responsible for the security of
    its infrastructure, and your organization is responsible for the security of your
    own code. But Amazon still provides tools your organization can use to help you
    manage your own security responsibility. I used to do research for a company that
    provides services for managing machine identities, such as TLS certificates. I
    discovered that many developers who use cloud platforms don’t use the tools those
    platforms provide to encrypt applications with TLS ([https://venafi.com/blog/want-more-secure-more-effective-cloud-watch-your-machine-identities/](https://venafi.com/blog/want-more-secure-more-effective-cloud-watch-your-machine-identities/)).
  prefs: []
  type: TYPE_NORMAL
- en: Not encrypting the data that’s being transmitted from a cloud application is
    a huge security vulnerability! The cloud platforms are doing everything right.
    They say, “here’s how to encrypt your applications with our tools, and documentation
    on how to use them.” I can’t stress enough how important it is that the organization
    you work for looks at all the security tools that Amazon provides for AWS services,
    and reads the extensive free documentation they provide on how to use them.
  prefs: []
  type: TYPE_NORMAL
- en: So, with that being said, let’s have a look at some of Amazon’s most important
    AWS security tools.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Security Hub** is where all of Amazon’s native AWS security services
    come together. Data is aggregated from AWS IAM, Amazon Macie, AWS Health, AWS
    Systems Manager, Amazon Inspector, AWS Firewall Manager, Amazon GuardDuty, and
    AWS Config.'
  prefs: []
  type: TYPE_NORMAL
- en: Security findings can be correlated between different AWS security services
    for the full picture. Amazon Detective can be launched from AWS Security Hub to
    further investigate security alerts and events, and **security orchestration,
    automation, and response** (**SOAR**) workflows can be initiated once administrators
    and your organization’s security team are familiar with how AWS security services
    work together, in order to make their work more efficient.
  prefs: []
  type: TYPE_NORMAL
- en: AWS **Identity and Access Management** (**IAM**) offers a console and system
    to manage all of the user identities and machine identities throughout an organization’s
    AWS account. All of the AWS services that an organization uses through the same
    account can be managed through the same AWS IAM application. The console is called
    **IAM** **Identity Center**.
  prefs: []
  type: TYPE_NORMAL
- en: Some identities can remain relatively unchanged for years, such as user identities
    for administrators. Other identities may only be needed for a few days or a few
    weeks, such as machine identities for temporary cloud workloads. IAM can manage
    all of the different types of identities that your organization’s AWS services
    use. As far as the access management part is concerned, administrators can “fine-grain”
    customize the permissions and access each identity has.
  prefs: []
  type: TYPE_NORMAL
- en: IAM also supports service control policies to help provide guardrails for the
    access each identity has. Policies can help limit the access that identities have.
    Whichever rules or settings are the most restrictive win. This is connected to
    the principle of least privilege, a common concept in cybersecurity. The principle
    of least privilege means that users and other entities only have as much access
    as they absolutely need to do their jobs and no more. This limits not only the
    harm that a user can cause by their mistakes but also the possible damage that
    could be done if a cyber threat actor maliciously acquires access to the account.
  prefs: []
  type: TYPE_NORMAL
- en: Using AWS IAM effectively means there are robust logs each time a user or machine
    logs onto the system, and each time identities are used to access a part of an
    organization’s AWS services. If security professionals suspect that a threat actor
    may have conducted a privilege escalation attack (when an attacker acquires access
    to an account and increases their access from that point), AWS IAM is the first
    place they should check. AWS IAM also generates alerts when anomalies are detected.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Directory Service** is another IAM-related tool, but it’s specifically
    for managing Microsoft Active Directory through **Lightweight Directory Access
    Protocol** (**LDAP**). Active Directory has been the default means for Windows
    servers to administrate Windows client computers ever since the Windows 2000 Server
    edition. If your organization manages Windows computers through AWS, AWS Directory
    Service can be used and also integrated with AWS IAM.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon GuardDuty** actively monitors an organization’s AWS services for possible
    cyber threats. GuardDuty receives constant updates about the ever-evolving cyber
    threat landscape through both AWS and third-party threat intelligence feeds. The
    system uses a combination of machine learning, behavioral modeling, and anomaly
    detection to detect possible threats.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, GuardDuty may understand that a certain kind of user will transmit
    a certain amount of data during a session in your organization’s application.
    If, all of a sudden, a user downloads 30 times as much data as an average user,
    that would probably trigger the anomaly detection mechanisms. Then, GuardDuty
    would combine the anomaly data with what the system has learned through machine
    learning to decide whether or not it’s an **indicator of compromise** (**IOC**).
    Human security professionals may receive an alert. Sometimes, security professionals
    need to investigate alerts to determine whether a cyberattack is actually happening
    or whether it’s a false positive alert. Is the anti-theft alarm on that parked
    car triggered because of a real auto theft attempt, or because a cat jumped onto
    the car? Innocuous mistakes also happen in cloud security.
  prefs: []
  type: TYPE_NORMAL
- en: GuardDuty can continuously monitor and analyze instance and container workloads,
    user accounts, serverless applications, Amazon S3 resources, and databases. GuardDuty
    can also scan for malware and generate context for security alerts and the events
    associated with them.
  prefs: []
  type: TYPE_NORMAL
- en: When security professionals need to investigate activity related to a GuardDuty
    alert, they can use **Amazon Detective** for help. GuardDuty security findings,
    and logs from Amazon EKS audits, VPC Flow, and AWS CloudTrail, are all integrated
    into the system. Not only can GuardDuty alerts be investigated with Detective,
    but also alerts from AWS Security Hub and integrated security partner products.
  prefs: []
  type: TYPE_NORMAL
- en: Detective can be launched from the AWS Management Console, and then administrators
    can see visualizations and context for their alerts.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Inspector** is designed for vulnerability management. Remember when
    I mentioned the importance of frequent vulnerability scanning in [*Chapter 3*](B18672_03.xhtml#_idTextAnchor050)?
    Your organization becomes ready for pentesting and red team engagements once a
    history of vulnerability assessments and security hardening from assessment findings
    has been established. Then, there should be frequent vulnerability scanning and
    remediation between pentests and red team engagements as well.'
  prefs: []
  type: TYPE_NORMAL
- en: Although there are third-party tools for vulnerability scanning in AWS, Amazon
    Inspector is the native tool. Inspector detects new cloud workloads automatically,
    maintains a frequently updated vulnerability database, and scans your organization’s
    entire AWS services continuously. While GuardDuty is for detecting possible threats,
    Inspector is for detecting vulnerabilities that threat actors could exploit. GuardDuty
    catches a burglar in action, while Inspector detects the unlocked door that a
    burglar could use. But like Detective, Inspector will also provide context for
    the vulnerabilities it detects.
  prefs: []
  type: TYPE_NORMAL
- en: In [*Chapter 3*](B18672_03.xhtml#_idTextAnchor050), I discussed the CVE database,
    which includes records of the majority of known security vulnerabilities found
    in software, hardware, and networking devices. The Inspector tool utilizes the
    CVE database and the CVSS to identify vulnerabilities and provide recommendations
    on their prioritization for mitigation and remediation. For example, a vulnerability
    with a critical CVSS score of 9.1 should be addressed much earlier than one with
    a low score of 3.8\. Since it is not feasible for the defensive security team
    to tackle all vulnerabilities at once, prioritizing them is crucial.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond the known vulnerabilities in CVE, Inspector also uses 50 vulnerability
    intelligence sources to help detect zero-day vulnerabilities. None of these technologies
    are infallible, but Inspector’s ability to detect some zero-day vulnerabilities
    is a big help. Perhaps your pentesting may help your organization find other zero-day
    vulnerabilities one day!
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS CloudTrail** monitors user activity and how the **APIs** (**application
    programming interfaces**, a way for applications to exchange data with each other)
    throughout an organization’s AWS services are used. Unauthorized API usage can
    be analyzed through “who, what, and when” information in CloudTrail events. Machine
    learning models are used to detect anomalies in API usage, and logs and audit
    reports are stored in Amazon S3 to make regulatory compliance easier.'
  prefs: []
  type: TYPE_NORMAL
- en: There is a dedicated AWS CloudTrail console, and log files can also be analyzed
    through Amazon Athena.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine how large and complex your organization’s AWS network can be. There
    can be so many different data assets that it can be difficult to acquire full
    visibility into them all without the right tools.
  prefs: []
  type: TYPE_NORMAL
- en: '**Amazon Macie** uses machine learning and pattern matching to find sensitive
    data wherever it happens to be in your organization’s AWS network. Amazon Macie
    continuously scans all of your organization’s Amazon S3 storage. Then, administrators
    don’t just get a “new sensitive data discovered” alert. Rather, Macie generates
    interactive data maps so administrators can find exactly where sensitive data
    is and how it connects with everything else in your organization’s network.'
  prefs: []
  type: TYPE_NORMAL
- en: Beyond continuous scans, targeted full discovery scans can also be launched
    at any time. Macie findings are integrated into AWS Security Hub so they’re easy
    to discover.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Network Firewall** can be configured to control how data travels through
    your organization’s AWS services, and in and out of them. **AWS Firewall Manager**
    is used to create policies based on network firewall rules. The same policies
    can be applied to any **virtual private clouds** (**VPCs**) your organization
    may have connected.'
  prefs: []
  type: TYPE_NORMAL
- en: Filtering inbound traffic can prevent external cyber threats from making their
    way into your organization’s network. Filtering outbound traffic can prevent sensitive
    data leaks and malware communications (for instance, spyware reporting keylogger
    data to a threat actor’s command and control servers), and help with regulatory
    compliance. Firewall rules and policies can also be applied to client devices
    that connect with your organization’s AWS services.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Certificate Manager** plays a specialized role in your organization’s
    IAM and PKI. It works with both public and private TLS and SSL certificates. From
    AWS Certificate Manager, certificates can be deployed and managed.'
  prefs: []
  type: TYPE_NORMAL
- en: AWS Certificate Manager can work with any of the **certificate authorities**
    (**CAs**) in your AWS network, whether certificates are through Amazon Trust Services,
    AWS Private CA, or public and private certificates that can be imported.
  prefs: []
  type: TYPE_NORMAL
- en: Certificates can be monitored through Amazon CloudWatch and Amazon EventBridge.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Secrets Manager** monitors the secrets all throughout your organization’s
    AWS services. Secrets are used for identification and authentication. Secrets
    include cryptographic keys of various kinds, API keys, access tokens, and other
    types of credentials.'
  prefs: []
  type: TYPE_NORMAL
- en: Secrets can be rotated without disruption to limit the risk of credential breaches
    without impacting the uptime of your applications and services. Secrets can be
    integrated with your organization’s logging, monitoring, and notification services.
    AWS Secrets Manager fully integrates with AWS IAM to apply permissions and policies.
  prefs: []
  type: TYPE_NORMAL
- en: All of your organization’s secrets are stored in a centralized and highly secured
    manner.
  prefs: []
  type: TYPE_NORMAL
- en: '**AWS Audit Manager** is designed to facilitate regulatory compliance. It also
    helps defensive security specialists to perform risk assessments. “How likely
    is a bad thing to happen, and what would it do?”'
  prefs: []
  type: TYPE_NORMAL
- en: Auditing frameworks can be chosen from a collection of prebuilt frameworks or
    they can be custom-made. Specific scopes can be defined and evidence is constantly
    collected during an assessment. From there, root causes of security problems can
    be identified.
  prefs: []
  type: TYPE_NORMAL
- en: So, as you can see, Amazon provides a lot of different security services for
    your organization to use. Your organization should definitely use as many of them
    as are applicable to what your organization does. Also, Amazon’s security services
    integrate with each other to manage how the various aspects of network security
    affect each other.
  prefs: []
  type: TYPE_NORMAL
- en: I strongly recommend that you and the security professionals in your organization
    explore the official AWS Security documentation ([https://docs.aws.amazon.com/security/](https://docs.aws.amazon.com/security/)).
    It covers all of the services I’ve mentioned here, and all of the other AWS security
    services and features as well.
  prefs: []
  type: TYPE_NORMAL
- en: Security tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of different third-party tools that can be used in your pentesting.
    Most of the tools I mention here are for AWS specifically. They’re also mainly
    open source, which means the hacker community can constantly improve these tools
    without having to ask for special permission.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the tedium of your pentesting work can be automated with the right tools,
    but it’s important to understand that pentesting isn’t simply a matter of running
    some tools and then looking at the logs they generate. Some pentests are performed
    without any automated tools at all, and all pentests require a clever human being
    to approach their computer networking target the way a human cyber attacker would.
    That’s whether or not any automated tools are used.
  prefs: []
  type: TYPE_NORMAL
- en: Quite often, pentests and red team engagements include matters such as physical
    security testing (such as breaking physical locks) and **open source intelligence**
    (**OSINT**). Within the framework of penetration testing, OSINT involves the collection
    and analysis of publicly accessible information about your target, as well as
    any vulnerabilities they might possess. OSINT focuses on gathering information
    legally, sometimes from physical sources such as books and printed records, but
    predominately from online sources available on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: Most of the concepts that pertain to pentesting computer networks in general
    apply to pentesting AWS, except perhaps for the shared responsibility model and
    how Amazon’s policies can limit what you may pentest and how. But a lot of the
    information about pentesting AWS specifically applies to the tools that were developed
    just for pentesting AWS and other cloud platforms.
  prefs: []
  type: TYPE_NORMAL
- en: How to use these tools will be covered in detail in *Chapters 5* and *6*, but
    in this section, I’ll introduce you to them and explain what they are.
  prefs: []
  type: TYPE_NORMAL
- en: '**Prowler** ([https://github.com/prowler-cloud/prowler](https://github.com/prowler-cloud/prowler))
    is an open source command-line utility that has a wide variety of features for
    pentesting AWS, Azure, and GCP ([https://docs.prowler.cloud/en/latest/](https://docs.prowler.cloud/en/latest/)).
    I will walk you through using Prowler for AWS in [*Chapter 5*](B18672_05.xhtml#_idTextAnchor080),
    Azure in [*Chapter 8*](B18672_08.xhtml#_idTextAnchor141), and GCP in [*Chapter
    11*](B18672_11.xhtml#_idTextAnchor197).'
  prefs: []
  type: TYPE_NORMAL
- en: Prowler has prebuilt tests specifically designed for assessing CIS, PCI-DSS,
    ISO27001, GDPR, HIPAA, FFIEC, SOC2, AWS FTR, and ENS compliance. You can also
    configure Prowler to work according to custom security frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Prowler can be executed in many different ways. It can run directly from multiple
    types of workstation PCs through Linux or macOS. It can also run from Windows,
    but Cygwin is required. Prowler can also be used from AWS CloudShell, Cloud9,
    Fargate, and Docker and Kubernetes containers.
  prefs: []
  type: TYPE_NORMAL
- en: Prowler has a multitude of libraries, which include ways to check for exposed
    secrets, exposed services, and whether any part of your AWS network can be discovered
    on Shodan.
  prefs: []
  type: TYPE_NORMAL
- en: '**awspx** ([https://github.com/WithSecureLabs/awspx](https://github.com/WithSecureLabs/awspx))
    is designed specifically for AWS. With this tool, you can generate a detailed
    visualization of your data resources all throughout your AWS network, and of all
    of the access relationships.'
  prefs: []
  type: TYPE_NORMAL
- en: You can draw possible attack paths from one resource to another. You can explore
    in-depth which actions impact which resources.
  prefs: []
  type: TYPE_NORMAL
- en: awspx must be run from a Docker container with Linux or macOS, and you’ll also
    need access to the rest of your AWS network from there.
  prefs: []
  type: TYPE_NORMAL
- en: '**Intruder** ([https://www.intruder.io/](https://www.intruder.io/)) is a commercial
    vulnerability scanner with monthly or annual subscription fees. It’s designed
    to be used with the OpenVAS and Tenable vulnerability scanning platforms. It has
    tools for scanning a variety of different types of networks, and it integrates
    with GitHub, Slack, Jira, and a number of different applications. It also includes
    integrations for AWS, Azure, and GCP, which is what’s relevant to us.'
  prefs: []
  type: TYPE_NORMAL
- en: As far as AWS is concerned, Intruder can run automated scans to check for insecure
    AWS configuration, whether or not your AWS has exposed secrets and where, exposed
    services, and a frequently updated library to check for authentication and code
    injection vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Intruder can perform both external and network scans, and also has tools for
    scanning web applications.
  prefs: []
  type: TYPE_NORMAL
- en: '**Acunetix** ([https://www.acunetix.com/vulnerability-scanner/](https://www.acunetix.com/vulnerability-scanner/))
    is also a full-featured vulnerability scanner, but for web applications in particular.
    AWS is just one of many different technologies it can work with.'
  prefs: []
  type: TYPE_NORMAL
- en: According to its developer, Invicti, Acunetix is the first web security scanner,
    having been in development since 2005\. Invicti claims that its proprietary Smart
    Scan algorithm can detect 80% of the vulnerabilities in a system in the first
    20% of a scan.
  prefs: []
  type: TYPE_NORMAL
- en: It has a feature to scan AWS’s web application firewall. It also has project
    management system integration, which may be useful to your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike Intruder, Acunetix can be run as its own self-contained vulnerability
    scanner. It can be run natively from Linux, macOS, or Windows, but it can also
    be integrated into OpenVAS. Scans can be executed both internally and externally.
    Pricing information is available if you request a quote.
  prefs: []
  type: TYPE_NORMAL
- en: '**Rhino Security Labs Buckethead** ([https://github.com/RhinoSecurityLabs/Security-Research/blob/master/tools/aws-pentest-tools/s3/buckethead.py](https://github.com/RhinoSecurityLabs/Security-Research/blob/master/tools/aws-pentest-tools/s3/buckethead.py))
    is a simple, open source tool that runs as a Python script. It’s designed to scan
    your organization’s Amazon S3 buckets to look for exposures and whether or not
    files can be uploaded to them externally and without authorization.'
  prefs: []
  type: TYPE_NORMAL
- en: I looked at the Python script ([https://github.com/RhinoSecurityLabs/Security-Research/blob/master/tools/aws-pentest-tools/s3/buckethead.py](https://github.com/RhinoSecurityLabs/Security-Research/blob/master/tools/aws-pentest-tools/s3/buckethead.py)).
    It’s only 258 lines of code. So, all you need is a command-line utility, the ability
    to run Python, and a connection to your organization’s AWS network.
  prefs: []
  type: TYPE_NORMAL
- en: What’s really nice about Rhino Security Labs Buckethead is that it can find
    really serious vulnerabilities without leaving a trace in your network. It probably
    won’t trigger your organization’s security controls.
  prefs: []
  type: TYPE_NORMAL
- en: 'User toniblyx on GitHub worked on the development of Prowler. They also have
    a collection of other useful AWS pentesting tools on their GitHub. They didn’t
    develop all of these tools themselves, but they’re all part of their “arsenal.”
    Here are some of my favorites (found at [https://github.com/toniblyx/my-arsenal-of-aws-security-tools#offensive](https://github.com/toniblyx/my-arsenal-of-aws-security-tools#offensive)):'
  prefs: []
  type: TYPE_NORMAL
- en: '**WeirdAAL** ([https://github.com/carnal0wnage/weirdAAL](https://github.com/carnal0wnage/weirdAAL))
    is an AWS attack library. Yes, the README file includes a reference to “Weird
    Al” Yankovic. It has modules for the following AWS components:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Lambda
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudFront
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudTrail
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudWatch
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Config
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Pipeline
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Database (local)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: DynamoDB
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: EC2
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: ECR
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Elastic Beanstalk
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: EMR
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Firehose
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IAM
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Lightsail
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: OpsWorks
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: RDS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Recon
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: S3
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SES
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SQS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pacu** ([https://github.com/RhinoSecurityLabs/pacu](https://github.com/RhinoSecurityLabs/pacu))
    is an entire open source AWS pentesting framework from Rhino Security Labs. It
    can be run from a Docker container or directly from a Linux or macOS client with
    Python3.7+ and pip3 support from the command line. It features a collection of
    36 plugin modules to perform a variety of simulated attacks in AWS, including
    privilege escalation, data exfiltration, log manipulation, service exploitation,
    and enumeration. Each module will require your organization’s AWS access keys
    in order to run its tests.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pacu is designed with extensibility in mind, and it encourages other developers
    to contribute to the project with new modules and improvements.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Cred Scanner** ([https://github.com/disruptops/cred_scanner](https://github.com/disruptops/cred_scanner))
    is a Python program that can be run from the command line with Python 3.6 support.
    It has a simple purpose: to find AWS credentials in files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CloudFrunt** ([https://github.com/MindPointGroup/cloudfrunt](https://github.com/MindPointGroup/cloudfrunt))
    is another useful Python command-line tool. It’s designed to find misconfigurations
    in AWS CloudFront.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Redboto** ([https://github.com/ihamburglar/Redboto](https://github.com/ihamburglar/Redboto))
    is a collection of scripts to aid in AWS red team engagements. It’s a series of
    Python files that can be installed through pip.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This particular script may be the most useful:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: It’s certainly the most complicated script of the bunch. This script works well
    in conjunction with **describeInstances.py**, which gives you metadata about instances
    in EC2\. With an API key, you can exfiltrate files from an EC2 instance. The script
    takes a snapshot of a target volume, spins up an instance to attach to the volume,
    then spins up and creates an S3 bucket. When the instance finishes launching,
    it encrypts and copies the chosen files to the S3 bucket, and the script pulls
    down from the S3 bucket and decrypts the files. The script then tears down the
    infrastructure that it has created, leaving only logs behind, if enabled.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: So, there you have it! The most helpful AWS pentesting tools range from complex
    commercial vulnerability scanners with monthly subscription fees to simple, open
    source Python scripts. I look forward to explaining how to use some of these tools
    in much greater detail in the following chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AWS is one of the most popular cloud platforms around. You will almost certainly
    be expected to work with AWS applications and services as a cloud pentester.
  prefs: []
  type: TYPE_NORMAL
- en: AWS includes a lot of its own security controls and tools that your organization
    may or may not be using. It really ought to be using them, as implementing Amazon’s
    own security controls is a crucial cybersecurity baseline that can prevent a lot
    of cyberattacks.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the many first-party AWS security applications include Amazon Inspector,
    AWS Security Hub, and Amazon GuardDuty.
  prefs: []
  type: TYPE_NORMAL
- en: There are also third-party scripts and tools that you can use to conduct vulnerability
    scans and pentests while abiding by Amazon’s policies. They include Prowler, Pacu,
    CloudFront, and many others.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to understand Amazon’s pentesting policies and rules and abide
    by them. Amazon owns all AWS infrastructure. So, even when you’re working with
    your organization’s AWS network, you’re metaphorically in Amazon’s home. You need
    to be a considerate guest.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, I’ll walk you through AWS’s security controls in greater
    detail. I’ll also walk you through actually using Prowler and Pacu, complete with
    videos. You can set up your own AWS instance to try these tools for yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more on the topics covered in this chapter, you can visit the following
    links:'
  prefs: []
  type: TYPE_NORMAL
- en: '*CLI (command line interface) in* *AWS*: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*AWS security products and* *services*: [https://aws.amazon.com/products/security/](https://aws.amazon.com/products/security/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Prowler* *documentation*: [https://docs.prowler.cloud](https://docs.prowler.cloud)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
