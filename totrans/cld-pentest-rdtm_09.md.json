["```\n    az version\n    ```", "```\n    az upgrade\n    ```", "```\n    az group create --name <resourceGroupNameOfYourChoiceHere> --location eastus\n    ```", "```\n    az container create --resource-group <resourceGroupNameOfYourChoiceHere> --name mycontainer --image mcr.microsoft.com/azuredocs/aci-helloworld --dns-name-label <dns-name-label-of-your-choice-here> --ports 80\n    ```", "```\n    az container show --resource-group <resourceGroupNameOfYourChoiceHere> --name mycontainer --query \"{FQDN:ipAddress.fqdn,ProvisioningState:provisioningState}\" --out table\n    ```", "```\n    FQDN                                         ProvisioningState\n    ---------------------------------            -------------------\n    aci-demo.eastus.azurecontainer.io            Succeeded\n    ```", "```\naz container logs --resource-group <resourceGroupNameOfYourChoiceHere> --name mycontainer\n```", "```\ndocker rm <name of folder with container here>\n```", "```\n    az –version\n    ```", "```\n    az upgrade\n    ```", "```\n     #!/bin/bash\n     # This script requires Azure CLI version 2.25.0 or later. Check version with `az --version`.\n     # Modify for your environment.\n     # ACR_NAME: The name of your Azure Container Registry\n     ACR_NAME=$containerRegistry\n     # SERVICE_PRINCIPAL_NAME: Must be unique within your AD tenant\n     SERVICE_PRINCIPAL_NAME=$servicePrincipal\n     # Obtain the full registry ID\n     ACR_REGISTRY_ID=$(az acr show --name $ACR_NAME --query \"id\" --output tsv)\n     # echo $registryId\n     # Create the service principal with rights scoped to the registry.\n     # Default permissions are for docker pull access. Modify the '--role'\n     # argument value as desired:\n     # acrpull:   pull only\n     # acrpush:   push and pull\n     # owner:    push, pull, and assign roles\n     PASSWORD=$(az ad sp create-for-rbac --name $SERVICE_PRINCIPAL_NAME --scopes $ACR_REGISTRY_ID --role acrpull --query \"password\" --output tsv)\n     USER_NAME=$(az ad sp list --display-name $SERVICE_PRINCIPAL_NAME --query \"[].appId\" --output tsv)\n     # Output the service principal's credentials; use these in your services and\n     # applications to authenticate to the container registry.\n     echo \"Service principal ID: $USER_NAME\"\n     echo \"Service principal password: $PASSWORD\"\n    ```", "```\n    az aks create \\\n        --resource-group myResourceGroup \\\n        --name kimAKSCluster \\\n        --node-count 2 \\\n        --generate-ssh-keys \\\n        --attach-acr acrKim\n    ```", "```\n    az aks get-credentials --resource-group myResourceGroup --name kimAKSCluster\n    ```", "```\n    kubectl get nodes\n    ```", "```\ngit clone https://github.com/aquasecurity/kube-hunter.git\n```", "```\ncd ./kube-hunter\npip install -r requirements.txt\n```", "```\npython3 kube_hunter\n```", "```\npip install kube-hunter\n```", "```\nkube-hunter\n```", "```\nkube-hunter --active --log WARNING\n```", "```\nkube-hunter --active --log DEBUG\n```", "```\nkube-hunter --active --log INFO\n```", "```\nifconfig\n```", "```\ndocker run -it --rm --network host aquasec/kube-hunter\n```", "```\n    git clone https://github.com/quarkslab/kdigger\n    cd kdigger\n    ```", "```\n    sudo install kdigger </usr/local/bin or enter your path name here>\n    ```", "```\n    go install github.com/quarkslab/kdigger@main\n    ```", "```\nls\n```", "```\ncd go/bin\n```", "```\n ./kdigger dig all\n```", "```\n; <<>> DiG 9.16.33 <<>>\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 33463\n;; flags: qr rd ra; QUERY: 1, ANSWER: 13, AUTHORITY: 0, ADDITIONAL: 27\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1224\n;; QUESTION SECTION:\n;.                              IN      NS\n;; ANSWER SECTION:\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n.                       7048    IN      NS      XXX.net.\n;; ADDITIONAL SECTION:\nXXX.net.     1461    IN      A       198.XX.X.X\nXXX.net.     1461    IN      AAAA    2001:503:XXXXX\nXXX.net.     1461    IN      A       192.58.XX.XX\nXXX.net.     1461    IN      AAAA    2001:503:XXXXX\nXXX.net.     1461    IN      A       192.XXX.XX.XX\nXXX.net.     1461    IN      AAAA    2001:XXXXX\nXXX.net.     1461    IN      A       199.X.XX.XX\nXXX.net.     1461    IN      AAAA    2001:XXX\n;; Query time: 0 msec\n;; SERVER: 168.63.129.16#53(168.XX.XXX.XX)\n;; WHEN: Fri Jul 28 21:56:48 UTC 2023\n;; MSG SIZE  rcvd: 824\n```", "```\ndig all\n```"]