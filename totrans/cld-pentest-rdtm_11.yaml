- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pentesting GCP Features through Serverless Applications and Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we’ve learned a bit about the various services that **Google Cloud
    Platform** (**GCP**) has to offer, it’s time to start our own GCP deployment and
    learn about some GCP pentesting tools through hands-on practice.
  prefs: []
  type: TYPE_NORMAL
- en: We will install and execute some pentesting tools in the GCP virtual machine
    we set up in [*Chapter 10*](B18672_10.xhtml#_idTextAnchor172). They include Prowler,
    GCPBucketBrute, and GCP Scanner. We’ll also look at the security tools that Google
    provides for us in Security Command Center.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: GCP free tier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Launching a GCP network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using GCP Cloud Shell
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCP native security tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCP pentesting tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploiting GCP applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will be working with Google’s infrastructure. Massive GCP data centers will
    be doing the bulk of the computer processing work for the exercises in this chapter.
    So, fortunately, you don’t need to have a top-of-the-line workstation. You will
    need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A web browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A desktop or laptop PC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Android phone or iPhone
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A good reliable internet connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Check out the following video to view the Code in Action: [https://bit.ly/4093wMk](https://bit.ly/4093wMk)'
  prefs: []
  type: TYPE_NORMAL
- en: GCP free tier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I strongly recommend setting up your own GCP network to test out the exercises
    in this chapter and [*Chapter 12*](B18672_12.xhtml#_idTextAnchor215).
  prefs: []
  type: TYPE_NORMAL
- en: There are several GCP products and services that you can enjoy in the free tier
    without incurring charges to your account. Do keep in mind though that you will
    need to give GCP your credit card number when you sign up. Your credit card will
    be charged if you go over the free tier limits, so you must check your usage and
    billing very carefully. When I signed up, I was given a 300 USD free credit for
    service fees in the first 90 days of my subscription. Depending on when you sign
    up, where in the world you sign up from, and the specifics of your situation,
    you may or may not receive a similar credit. Later in this chapter, I will show
    you where you can check your billing status so that you can make sure you don’t
    incur service charges that you can’t afford or otherwise wouldn’t want to pay
    for.
  prefs: []
  type: TYPE_NORMAL
- en: 'As of this writing in 2023, here are the services that are available in GCP’s
    free tier, as well as their limits ([https://cloud.google.com/free/docs/free-cloud-features](https://cloud.google.com/free/docs/free-cloud-features)):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Compute Engine** is the service that powers virtual machines on GCP. The
    free tier includes one e2-micro instance per month. That means “*1 non-preemptible
    e2-micro VM instance per month in one of the following US regions: us-west1, us-central1,
    us-east1\. 30 GB-months standard persistent disk. 1 GB network egress from North
    America to all region destinations (excluding China and Australia) per month*”
    ([https://cloud.google.com/free/docs/free-cloud-features?hl=en#compute](https://cloud.google.com/free/docs/free-cloud-features?hl=en#compute)).
    Remember that the regions are where GCP’s data centers are. *You* don’t have to
    physically be in the United States. You and your laptop can be in Brazil, India,
    Ethiopia, or any country that can connect to GCP services. So long as the GCP
    data center you’re using is in **us-west1**, **us-central1**, **or us-east1**,
    you’re covered.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Storage** is the main service for storing your data. 5 GB per month
    is included in the free tier. What does 5 GB per month mean? “*5,000 Class A Operations
    per month, 50,000 Class B Operations per month, 100 GB network egress from North
    America to all region destinations (excluding China and Australia) per month.”*
    ([https://cloud.google.com/free/docs/free-cloud-features#storage](https://cloud.google.com/free/docs/free-cloud-features#storage)).
    If you use your GCP network the way I demonstrate in this book, you should be
    fine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**BigQuery** is a serverless data analytics platform. We won’t be using it
    in this book, but in the free tier, you get 1 TB of BigQuery queries per month.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**App Engine** is a platform for deploying web applications and mobile apps.
    You get 28 instance hours per day in the free tier. We won’t be using App Engine
    in this book, but if you deploy an App Engine app with lots of users, you will
    definitely be charged for it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Run** is a service for deploying stateless containers. The free tier
    limit is 2 million requests per month, so you should be fine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Build** can import builds from source code from Cloud Storage, Cloud
    Source Repositories, GitHub, or Bitbucket to create Docker containers or other
    sorts of software artifacts. You get 120 build minutes per day in the free tier.
    We won’t be using this service in this book; we will just be using standard default
    Docker and Kubernetes container images. You’ll be fine.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With **Google Kubernetes Engine**, you get one Autopilot or Zonal cluster per
    month. We’ll just deploy one cluster in [*Chapter 12*](B18672_12.xhtml#_idTextAnchor215).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the free tier, you get some Cloud Logging, Cloud Monitoring, and Cloud Trace
    allotments in the operations suite (formerly known as Stackdriver). Those are
    functions that you can use to analyze your cloud activity in GCP. The free allotments
    are a bit complicated, but it’s unlikely that you will go over them by following
    the instructions in this book. Read more about the free allotments just to be
    safe ([https://cloud.google.com/stackdriver/pricing](https://cloud.google.com/stackdriver/pricing)).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Firestore** is a NoSQL document database service. You get 1 GB of storage
    in the free tier, but I won’t be using it here. It’s for application development.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You get 2 million invocations per month in the free tier for **Cloud Functions**.
    It’s a serverless environment to build and connect cloud services. We probably
    won’t be using it anyway.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflows** facilitates service calls between GCP and external HTTP APIs.
    You get 5,000 free internal steps per month, which should be more than enough.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The free tier includes free access for five users in **Cloud Source Repositories**,
    a service for hosting private Git repositories for application development. We
    won’t be using that service anyway.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will be using **Secret Manager**, which stores passwords, certificates, API
    keys, and the like. The six secret versions we get per month in the free tier
    should be plenty.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alright! Now that we know what we’re getting, let’s deploy a GCP network together.
    We’ll need our own GCP deployment to test our pentesting skills in this book.
    Just like when we deployed instances in AWS and Azure, I’ll walk you through the
    process step by step.
  prefs: []
  type: TYPE_NORMAL
- en: Launching a GCP network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with AWS and Azure, all you need is a modern laptop or desktop PC running
    Windows, macOS, or a Linux distribution to launch and manage a GCP network. Google’s
    computers and infrastructure do all of the heavy lifting as far as computing resources
    are concerned.
  prefs: []
  type: TYPE_NORMAL
- en: I would also recommend using Google Authenticator on your Android phone ([https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&pli=1](https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&pli=1))
    or iPhone ([https://apps.apple.com/us/app/google-authenticator/id388497605](https://apps.apple.com/us/app/google-authenticator/id388497605))
    so that you can use **multi-factor authentication** (**MFA**) with your GCP services.
    I would not recommend using your phone to do most of your GCP work as a PC screen
    and a physical keyboard are ideal for those purposes. But you may install the
    Google Cloud app ([https://cloud.google.com/app](https://cloud.google.com/app))
    on your phone if you want to check the status of your GCP services. It’s especially
    great for checking your billing on the go to make sure you’re not doing anything
    expensive!
  prefs: []
  type: TYPE_NORMAL
- en: A PC or a MacBook made in the past 10 years and a reliable internet connection
    are all you need on your end, wherever in the world you are, to deploy GCP and
    do pentesting on GCP.
  prefs: []
  type: TYPE_NORMAL
- en: 'All the work to start your own GCP deployment is done in your web browser.
    Let’s get started:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step to setting up your own GCP network is to visit the Google Cloud
    free tier page ([https://cloud.google.com/free](https://cloud.google.com/free))
    in your web browser and click the blue **Get started for free** button in the
    middle of your screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.1 – Google Cloud signup page](image/B18672_11_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.1 – Google Cloud signup page
  prefs: []
  type: TYPE_NORMAL
- en: 'On the next screen, make sure your Gmail or Google account is logged in. Set
    up an account if you don’t already have one, or sign in to the one you already
    have. In the drop-down box, select your country and answer the **What best describes
    your organization or needs?** question. I chose **Other**. Make sure you select
    that you’ve read the **Terms of Service** details, and click on the blue button
    that says **CONTINUE**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.2 – Google Cloud signup screen](image/B18672_11_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.2 – Google Cloud signup screen
  prefs: []
  type: TYPE_NORMAL
- en: The next screen requires you to select your **Payments** profile. Google needs
    to have a way to charge you in case you incur GCP service charges, even if you
    manage to stay within the free tier’s limits. I already have a **Payments** profile
    because I’ve paid for Google Play applications and services, I’m a YouTube Premium
    subscriber, and I’ve used Google Pay. If you don’t have a **Payments** profile,
    you may need to enter your credit card number or link your Google Pay account
    ([https://payments.google.com/](https://payments.google.com/)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Account type**, I’ve entered **Individual**. Unless you’re setting up
    GCP on behalf of a business or organization, I would recommend **Individual**
    for you.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Name and address**, make sure your name and street address match what’s
    on your credit card or Google Pay account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Underneath, click on the blue **Start my free trial** button. Any time limits
    for bonus services and credits, such as my 90-day $300 services credit, start
    now!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you scroll down a little bit, you’ll see buttons to launch GCP projects.
    First, there are pre-built solution templates:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Deploy load balanced** **managed VMs**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create a secure** **CI/CD pipeline**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deploy a Java application using** **Compute Engine**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are also buttons for launching a product without a template:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Create** **a VM**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create a** **containerized app**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Run** **containerized apps**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modernize and** **run apps**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execute** **your builds**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Get started** **with containers**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is what the project launch page looks like:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 11.3 – Google Cloud project launch page](image/B18672_11_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.3 – Google Cloud project launch page
  prefs: []
  type: TYPE_NORMAL
- en: For now, let’s click on **Create a VM** to deploy a simple VM on GCP with Compute
    Engine that we can use for the pentesting we’ll do in this chapter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next screen says **Compute Engine API** and the overview says **Creates
    and runs virtual machines on Google Cloud Platform**. Click on the blue **Enable**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You’ll be directed to the VM instances dashboard, which looks like this. Click
    on the blue **CREATE** **INSTANCE** button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.4 – GCP Compute Engine screen](image/B18672_11_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.4 – GCP Compute Engine screen
  prefs: []
  type: TYPE_NORMAL
- en: 'On the next screen, we can name our instance and choose its region and zone,
    as well as its machine configuration. I will walk you through a configuration
    that will be the least likely to incur service charges:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.5 – Machine configuration for a VM instance](image/B18672_11_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.5 – Machine configuration for a VM instance
  prefs: []
  type: TYPE_NORMAL
- en: In the **name** field, name your instance whatever you want. I named mine **crowgirl-1**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In the free tier, our usage of Compute Engine is limited to “*1 non-preemptible
    e2-micro VM instance per month in one of the following US regions: us-west1, us-central1,
    us-east1.*” So, I chose **us-east1** as my region. You can select **us-west1**,
    **us-central1**, or **us-east1** regardless of where in the world you are.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Under **Machine configuration**, to save money, I chose **General purpose**,
    **E2 under Series**, the **e2-micro** machine type (the only machine type that’s
    covered under the free tier), and the Standard VM provisioning model. At the bottom,
    click on the blue **Create** button.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In a few seconds to a minute, our very basic VM in Compute Engine will be ready!
    You’ll see a screen that looks something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.6 – List of VM instances in a project](image/B18672_11_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.6 – List of VM instances in a project
  prefs: []
  type: TYPE_NORMAL
- en: The default Debian Linux image will be installed. We have a Linux VM that can
    use the Bash CLI!
  prefs: []
  type: TYPE_NORMAL
- en: I always prefer to use the CLI that’s built into the cloud platform’s web interface.
    So, let’s launch GCP Cloud Shell.
  prefs: []
  type: TYPE_NORMAL
- en: Using GCP Cloud Shell
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To launch GCP Cloud Shell, look at the menu bar at the top and click on the
    icon that looks like **>_** to the immediate right of the search bar. Do you notice
    how similar GCP’s web interface is to the web interfaces in AWS and Azure?
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.7 – Top menu bar in the GCP console](image/B18672_11_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.7 – Top menu bar in the GCP console
  prefs: []
  type: TYPE_NORMAL
- en: All of the Bash commands we used in [*Chapter 5*](B18672_05.xhtml#_idTextAnchor080)
    for AWS and [*Chapter 8*](B18672_08.xhtml#_idTextAnchor141) for Azure will work
    here. Our Linux VM in GCP is functionally just like any other Linux-based computer;
    a Bash CLI is standard. If you want, you can review some Bash commands from [*Chapter
    5*](B18672_05.xhtml#_idTextAnchor080).
  prefs: []
  type: TYPE_NORMAL
- en: 'The Cloud Shell screen looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.8 – The Cloud Shell screen](image/B18672_11_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.8 – The Cloud Shell screen
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s check out some of the tools Google provides that will help us when
    we work as GCP pentesters.
  prefs: []
  type: TYPE_NORMAL
- en: GCP native security tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Security Command Center is your starting point for all of the security tools
    that are built into GCP. It integrates various first-party GCP security tools
    that I mentioned in [*Chapter 10*](B18672_10.xhtml#_idTextAnchor172). This means
    you can see data from these applications and services within your **Security Command
    Center** (**SCC**) panel:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identity and Access Management** ([https://cloud.google.com/iam](https://cloud.google.com/iam)),
    which manages all of the user identities and machine identities (such as a TLS
    certificate for a web server) in your GCP network with robust logging that’s integrated
    into SCC and can also be integrated into an organization’s third-party security
    monitoring services. “*Identity and Access Management (IAM) lets administrators
    authorize who can take action on specific resources, giving you full control and
    visibility to manage Google Cloud* *resources centrally.*”'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud IDS** ([https://cloud.google.com/intrusion-detection-system](https://cloud.google.com/intrusion-detection-system)),
    which serves the same functions as most network-based IDSs. It reads your network
    logs in real time and notifies security administrators of when there may be indications
    of network threats. It can observe and generate alerts for both ingress (east-west,
    from one internal server or application to another) and egress (north-south, between
    your cloud network and the public internet or other external networks) traffic.
    This is a central concept of zero-trust network security – malicious traffic can
    come from anywhere. The days of a firm network security perimeter between the
    internal network and external networks are in the past. Possible threats that
    Cloud IDS can detect include malware and command and control center-driven attacks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Firewall** ([https://cloud.google.com/firewall](https://cloud.google.com/firewall)),
    which has functions similar to most other stateful inspection-based network firewalls.
    There are global network firewall policies that can be applied to permit or forbid
    traffic according to general GCP security baselines. IAM-governed tags can be
    used to permit or forbid traffic according to how user and machine identity accounts
    are marked with tags. Google Cloud Threat Intelligence lists can also be applied
    so that when Google learns of new cyber threats, your firewall is updated accordingly.
    Of course, security and network administrators can also block or permit specific
    users and machines manually.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud DLP** ([https://cloud.google.com/dlp](https://cloud.google.com/dlp)),
    a tool for **data loss prevention** (**DLP**). It tracks how data travels through
    your GCP network and how it exits your GCP network to ensure that sensitive data
    isn’t breached by your network. Sensitive data can be prevented from being uploaded
    to your network to an external destination, or it can be tokenized or masked according
    to the situation (for example, writing a credit card number as *45xx-xxxx-xxxx-xxx*).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'While testing SCC, I learned that I had to set up Cloud Identity to access
    the application. There is a service called Cloud Identity Premium, which is a
    paid service with extra features. I chose **Cloud Identity Free** because we’re
    keeping costs low to practice pentesting GCP:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to [https://workspace.google.com/gcpidentity/signup?sku     =identitybasic](https://workspace.google.com/gcpidentity/signup?sku=identitybasic)
    to set up Cloud Identity Free once you’ve established a GCP account. The following
    screenshot shows what the first step in setting up **Cloud Identity Free** looks
    like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.9 – Setting up a Cloud Identity account](image/B18672_11_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.9 – Setting up a Cloud Identity account
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, you will need to enter your first and last name and contact
    email address. Click **Next**. Then, you’ll need to enter a domain name (such
    as **packtpub.com**, but not **packtpub.com** because that domain belongs to the
    publisher of this book) that you have access to. Fortunately, I already had a
    domain name that I used for another project. If you don’t have your own domain
    name that you have administrative access to, I recommend getting one through [namecheap.com](http://namecheap.com).
    Depending on the top-level domain (such as **.com**, **.net**, or**.io**) that
    you choose, it may only cost you 5.00 USD per year.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you’ve given Cloud Identity Free a domain name that *you own and have
    administrative access to*, the final step is to enter a username and password
    for your new Cloud Identity/Google Workspace account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 11.1\uFEFF0 – Cloud Identity credentials creation screen](image/B18672_11_011.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 11.10 – Cloud Identity credentials creation screen
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the Cloud Identity wizard will direct you to add a DNS verification record
    to your domain so that Cloud Identity can protect it. The application knew that
    I used Namecheap to register my domain, and directed me in the process of adding
    a verification record, like so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 11.11 \uFEFF– How to connect your Cloud Identity \uFEFFaccount with\
    \ your DNS provider](image/B18672_11_012.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 11.11 – How to connect your Cloud Identity account with your DNS provider
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve followed the steps in the wizard, you may need to wait a few minutes
    for the DNS verification process to complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, you’ll see a screen like this, where you can click on the blue **CONTINUE**
    button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 11.12 \uFEFF– Cloud Identity user setup screen](image/B18672_11_013.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 11.12 – Cloud Identity user setup screen
  prefs: []
  type: TYPE_NORMAL
- en: Once Cloud Identity has been established, Google won’t let you access SCC yet.
    Follow the instructions on the *Creating and managing organization resources*
    ([https://cloud.google.com/resource-manager/docs/creating-managing-organization](https://cloud.google.com/resource-manager/docs/creating-managing-organization))
    page in the Google Cloud documentation to add your Cloud Identity to an organization
    with SCC access. I found TechTrapture’s YouTube video *How to create Organization,Folder
    and projects in GCP* ([https://www.youtube.com/watch?v=QvpedBNZqvA](https://www.youtube.com/watch?v=QvpedBNZqvA))
    to be helpful to make sure my Cloud Identity account was an organization I could
    add a project to so that I could access SCC.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the IAM section of my Google Cloud console (**console.cloud.google.com**),
    I had to make sure that my owner account had Security Center Admin access, like
    so:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.13 – Assigning roles to user accounts in GCP](image/B18672_11_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.13 – Assigning roles to user accounts in GCP
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the GCP console
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you’re in, you’ll see a menu on the left-hand side that consists of the
    following panels:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threats**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vulnerabilities**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assets**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Findings**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sources**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we’ve had a look at SCC, we know how to access it while we’re conducting
    pentests to access important security posture information.
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve set everything up with your administrative Cloud Identity account
    and your organization, you can access SCC at any time from the web application
    at [console.cloud.google.com](http://console.cloud.google.com). The way I always
    find it is by going to the search bar in the menu bar at the top of the console
    screen and searching for **Security** **Command Center**.
  prefs: []
  type: TYPE_NORMAL
- en: You can use this data in your pentest report. The **Compliance** panel is especially
    important for your organization’s blue team. There are many data protection regulations
    that your organization may need to be compliant with, including PCI DSS, Sarbanes
    Oxley, HIPAA, GDPR, and many others. Which ones apply to your organization will
    depend on your industry, where in the world you are, and which foreign countries
    your company manages the data of. For instance, your company may be in India,
    but if some of your customers are in the European Union, the GDPR will apply to
    how your organization handles their data.
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you look through **Security Command Center** before you pentest GCP,
    and before you write your pentest report. The **Vulnerabilities**, **Assets**,
    and **Findings** panels are especially useful for your report.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s run some vulnerability scans and pentests in GCP!
  prefs: []
  type: TYPE_NORMAL
- en: Installing GCP pentesting tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a few different third-party tools that we’ll use to conduct security
    scans in our GCP instance. First, we’ll install them.
  prefs: []
  type: TYPE_NORMAL
- en: Prowler
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I mentioned Prowler for AWS in [*Chapter 5*](B18672_05.xhtml#_idTextAnchor080)
    and for Azure in [*Chapter 8*](B18672_08.xhtml#_idTextAnchor141). You can also
    use Prowler to find vulnerabilities in GCP. I’ll briefly walk you through this
    process as Prowler has already been covered quite a bit in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Everything we’ll be doing will be in Cloud Shell. From the GCP console web application,
    click on the icon that looks like **>_** on the right-hand side of the search
    bar in the top menu bar to open Cloud Shell. The default CLI is a terminal, which
    is Bash. All of the Linux Bash commands we used in the AWS and Azure chapters
    will work here.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, I verified that I had **pip** installed and which version it was with
    this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This was the response I got at the command line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'So, **pip** with Python 3.9 was already installed in my GCP-based Linux VM
    without me having to do anything. **pip** is a program that’s used to install
    Python applications. Prowler is based on Python. So, you can use these commands
    to install Prowler in GCP:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, you can use GitHub to install Prowler with these commands, and
    then verify the installation after:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Next, let’s install GCPBucketBrute, which I introduced in [*Chapter 10*](B18672_10.xhtml#_idTextAnchor172).
  prefs: []
  type: TYPE_NORMAL
- en: GCPBucketBrute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: GCPBucketBrute is specifically designed to scan Google Storage buckets, determine
    what access you have to them, and whether or not they can be privilege escalated.
    This can be very useful data for your pentest report because if GCPBucketBrute
    can access your buckets easily, so can malicious cyber attackers!
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use **git** to install GCPBucketBrute from Cloud Shell (if you’re still
    in the Prowler directory, return to your main directory with the **cd** command
    first):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now, let’s install GCP Scanner.
  prefs: []
  type: TYPE_NORMAL
- en: GCP Scanner
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'GCP Scanner is a GCP pentesting application that’s developed by people at Google
    but they state this in the **README** file ([https://github.com/google/gcp_scanner](https://github.com/google/gcp_scanner)):'
  prefs: []
  type: TYPE_NORMAL
- en: “*This project is not an official Google project. It is not supported by Google
    and Google specifically disclaims all warranties as to its quality, merchantability,
    or fitness for a* *particular purpose.*”
  prefs: []
  type: TYPE_NORMAL
- en: 'I found that installing GCP Scanner with **git** worked best:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Next, let’s run the applications we’ve just installed!
  prefs: []
  type: TYPE_NORMAL
- en: Exploiting GCP applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we’ve installed a few third-party scanning tools, it’s time to use
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Prowler
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s go through the basics of scanning GCP with Prowler first.
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, Prowler will use the credentials of whichever account you used
    to log in to GCP for your VM. If you need to change your account, verify your
    accounts in IAM in the GCP web console. Verify your account credentials. You can
    change accounts in GCP with this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we can run a default Prowler scan in GCP with this command. Make sure
    you’re in the Prowler directory first, then run a scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: If you used GitHub to install Prowler, use **prowler.py** instead of **prowler**
    in your commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'I recommend executing the **help** file first so that you can see all of the
    commands and options you can use in Prowler. As in previous chapters, you can
    get Prowler to list services and checks, and run specific service scans and checks
    in particular locations with particular logging options. All of that information
    can be printed on your screen the Cloud Shell CLI with this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, you can use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Scan results can be printed both on screen and in CSV, JSON, or HTML files in
    your Prowler directory. You can use those logs when you write your pentest report.
  prefs: []
  type: TYPE_NORMAL
- en: GCPBucketBrute
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, let’s scan with GCPBucketBrute. So long as you’re logged into a user account
    instead of a service account, you can get effective results with an unauthenticated
    scan. You may need to go to your GCP web console first to make sure you’re logged
    in to a user account.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enter this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'In the CiA video, I used the **test** keyword, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: I would also suggest trying other keywords that may appear in the files of your
    buckets, such as **file** or **print**.
  prefs: []
  type: TYPE_NORMAL
- en: 'When I ran a scan with **test**, this was the beginning of my results. The
    printout at my CLI was much longer than this though:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: GCP Scanner
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, let’s give GCP Scanner a try. First, make sure you’re in the directory
    that GCP Scanner is in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a folder to save your scan results in:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'If you enter this command, you will get a handy help guide printed at the command
    line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'I ran a simple metadata scan with this command. This checks the metadata in
    your GCP VM’s files to see whether sensitive credentials are exposed in them:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Feel free to play around with all of the options and arguments that are shown
    in GCP Scanner’s help guide:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Congratulations, you’ve just produced a bunch of GCP pentest scanning logs that
    you can reference in your pentest report!
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll conduct pentesting scans within Docker and Kubernetes
    containers in GCP.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Everything you need to create a GCP network to practice pentesting can be done
    with the services in the GCP free tier. Just make sure you check your billing
    in the GCP web console to make sure you aren’t incurring charges.
  prefs: []
  type: TYPE_NORMAL
- en: You may need to set up a Google Workspace or Cloud Identity account to get the
    most out of GCP. That includes using SCC. SCC is your starting point for all of
    the security tools that are built into GCP. It integrates various first-party
    GCP security tools. You can use SCC to check for some threats, vulnerabilities,
    and security recommendations based on Google’s threat intelligence. As with running
    third-party pentesting tools, SCC may provide you with useful information that
    you can use in your pentest report.
  prefs: []
  type: TYPE_NORMAL
- en: Just like with AWS and Azure, Prowler can be used to scan for vulnerabilities
    and regulatory compliance in GCP. We ran a Prowler vulnerability scan at the command
    line in Cloud Shell.
  prefs: []
  type: TYPE_NORMAL
- en: GCPBucketBrute checks whether attackers can access your GCP buckets and whether
    they can be privilege escalated. Because we just set up a simple GCP deployment
    with a VM without much on it, it’s surprising that GCPBucketBrute was still able
    to find somewhere with unauthenticated access!
  prefs: []
  type: TYPE_NORMAL
- en: GCP Scanner can be used to determine what level of access particular credentials
    have in your GCP deployment.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will deploy Docker and Kubernetes clusters in GCP and
    run some vulnerability scans in them.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '*List of free services in* *GCP*: [https://cloud.google.com/free?hl=en](https://cloud.google.com/free?hl=en)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*TechTrapture’s YouTube video* *How to create Organization,Folder and projects
    in* *GCP*: [https://www.youtube.com/watch?v=QvpedBNZqvA](https://www.youtube.com/watch?v=QvpedBNZqvA)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Prowler in* *GCP*: [https://docs.prowler.cloud/en/latest/#google-cloud](https://docs.prowler.cloud/en/latest/#google-cloud)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*GCPBucketBrute*: [https://github.com/RhinoSecurityLabs/GCPBucketBrute](https://github.com/RhinoSecurityLabs/GCPBucketBrute)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*GCP* *Scanner*: [https://github.com/google/gcp_scanner](https://github.com/google/gcp_scanner)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
