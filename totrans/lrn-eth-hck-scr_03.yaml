- en: Linux Basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will be covering the basics of Kali Linux. We will see how
    Kali Linux looks when installed as a virtual machine, and some of the basic elements
    of Kali Linux will be explained in detail. Furthermore, into the chapter, we will
    learn about the different commands that we can use in a Linux Terminal. Once we
    have learned how to use the commands, we will see how to update sources, and how
    to install programs on Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Overview of Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating sources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of Kali Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have Kali Linux installed, let me provide you with an overview
    of the system: what Linux is, the filesystems structure, and some of the basic
    apps that we are going to use. We will see an overview of the system now, and
    later, we will walk through some commands, which we will see in more detail in
    later chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: Status bar icons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As you can see, in the following screenshot, there is a status bar at the top,
    and toward the end (on the left-hand side of the Applications menu), there is
    an Applications tab to access all of the applications that come preinstalled with
    Kali Linux. These are divided into categories, in terms of the type of attack
    that they allow you to carry out. We can see the following: 01 – Information Gathering,
    02 – Vulnerability Analysis, 03 – Web Applications Analysis, 04 – Databases Assessment,
    08 – Exploitation Tools, and 07 – Reverse Engineering. These are all types of
    applications that can be used for penetration testing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d6184262-5676-4ee5-b99f-55d1a586eb8c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Places menu allows you to access your filesystems - the files that you
    will be using. This is similar to My Documents in Windows machines. If we click
    on Computer, we can access all of the files and devices, but we rarely use this
    menu; we usually access it through the Home icon on the vertical bar toward the
    left. If we go to Places and then to Home, we can get access to Desktop, Documents,
    Downloads, Music, and so on, the same way that you would in Windows or macOS X.
    We can even see Trash, which is where your trash goes. This is just a basic file
    manager, with back and forward, and you can double-click on a file to run it or
    double-click on a directory to open it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d5c0b7c3-1ed9-4082-89a8-a8c152a82203.png)'
  prefs: []
  type: TYPE_IMG
- en: To the right, there is an icon called Workspaces; in here, you can see the number
    of desktops, or workspaces. Linux usually supports workspaces, so you can have
    different windows on different workspaces; if you don't have other windows open,
    you can't use the next workspace. However, for example, if you have a file manager
    open here, you can go to the next workspace and it will be empty, and then you
    can have something else running there. You can use as many workspaces as you want,
    and it's easy to switch between them. We will be using them when we perform our
    penetration testing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, toward the right of the workspace icon, you can have a keyboard icon,
    if you have more than one keyboard and want to switch between them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/007694d1-d0fb-4c7b-9d0f-901d6a6b33c8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We then have our networks icon, as seen in the following screenshot. With it,
    we can access wired and wireless networks. One thing to note is that we will not
    be able to access our internal wireless card through a virtual machine. We have
    set the settings of the computer to be connected through NAT, which means that
    it has an internet connection, but the internet connection is coming through a
    host machine. So, there is actually a virtual network set up between this device
    and the main device. This device only has internet access because of the internet
    access provided by the main machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/543113a5-ae43-418c-bd90-1df4ba1d0d61.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we can also change the volume from the same menu; we can turn off the
    computer, lock it, or enter the preferences, too. These are just normal preferences;
    you should familiarize yourself with them. They include Backgrounds, Notifications,
    Displays, Mouse, and Networks. We then have battery settings, which can be accessed
    from the status bar. Applications and Places are the objects we'll be using the
    most, and you can access your network settings from them.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the wireless card
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If we have a wireless card connected, we will be able to see the available
    networks. If we want to connect a wireless card (I have a USB wireless card),
    we can do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the Devices menu on the menu bar, then go to USB. This procedure is the
    same, regardless of the USB device that you connect (wireless, memory stick, and
    so on). Go to Devices | USB, then select the device you want to connect.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'So we connected a wireless card, and the chipset that''s used in the card is
    called Ralink 802.11 n WLAN [0101]. This is the wireless card, and we are going
    to click on it. That should connect it to the Kali machine:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/34169b0c-f8b3-421d-bba9-a36407052939.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to the wireless icon on the status bar, go to the Select Network option
    in Wi-Fi Not Connected, and then select a network. Then, we can see the networks
    that are available around us, and we can select any network that we want to connect
    to; just enter the password in, and connect to the network normally, the way you
    would connect to any other network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](assets/039b0489-7907-4b35-80b4-c71d0c7db48e.png)'
  prefs: []
  type: TYPE_IMG
- en: Even if we disconnect our wireless card now, we will see that we still have
    an internet connection, because our main machine (a macOS X, for example) is connected
    to a network, and this virtual machine is connected to the Mac machine via an
    internal virtual network. So, the browser that comes with Kali Linux is Firefox
    ESR, and we can go to Google and check that we have an internet connection.
  prefs: []
  type: TYPE_NORMAL
- en: Linux commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: These are not hacking commands; they're not penetration testing commands. They're
    just commands used in Linux that allow us to do different things on the operating
    system.
  prefs: []
  type: TYPE_NORMAL
- en: This overview of how the Terminal works was just designed to get you more comfortable
    with the structures, navigating the directories, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's take an overview of the Linux Terminal. The Terminal is a place where
    you can do anything you want on the operating system, run any program by executing
    commands associated with the program we want. The Linux Terminal is very powerful;
    it basically allows us to do a lot more than the graphical interface. A lot of
    the programs that we're going to use have graphical interfaces, but the command
    line is much easier and quicker. Also, in many scenarios, you will get a Secure
    Socket Shell (SSH) or Command Prompt on the target computer, and you will need
    to know the commands in order to do what you wish on the computer, or to pen test
    its security.
  prefs: []
  type: TYPE_NORMAL
- en: Learning how to deal with the Command Prompt is very important. We're going
    to use it a lot in the upcoming chapters, but for now, we will provide a very
    simple overview. It's much easier than running through the graphical interfaces.
    Using it is very simple; you literally type in the command, and the result is
    displayed on the screen as text.
  prefs: []
  type: TYPE_NORMAL
- en: Commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following sections illustrate the basic Linux commands.
  prefs: []
  type: TYPE_NORMAL
- en: The ls command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `ls` command lists all of the files and directories that exist in the current
    working directory. So it''s similar to the `dir` command in Windows machines;
    it just lists all of the files and directories that exist in the current directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'And, as we execute this command, the output for it lists all of the directories,
    such as `Desktop`, `Documents`, `Downloads`, and `Music`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/04c6641c-c6a1-425f-ae04-05bb73e9d413.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s run `ls` with some options. We going to use `ls` and then use `-l`,
    and that will show us more information about the files. It''s basically the same
    command that we ran before, but, as we can see in the following screenshot, we
    now get more information. We can see the total entries that exist in the current
    working directory, and we can see the same directories that we saw before, but
    we can also see the dates that they were created or modified. We can see the user
    responsible for them, and its root use, and we can also see permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0eb73e8c-64be-4432-85de-de7450cf0484.png)'
  prefs: []
  type: TYPE_IMG
- en: We will learn more about permissions in the next chapters. Permissions specify
    which users can do what (read, write, execute). This is just an example of the
    `ls` command.
  prefs: []
  type: TYPE_NORMAL
- en: The man command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the most important commands, which is going to become handy to you in
    the future, is the `man` command. It stands for **manual**. The `man` command
    can be used to query and get the manual of any other command. For example, we
    just used the `ls` command to list all of the directories that exist in the current
    working directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'After running this command, it will show us the manual for the `ls` command.
    And, as we can see, it''s showing us that `ls` is used to list content, because
    it lists files and directories. We can also see that this command actually takes
    options, so it takes more options than just the `ls` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f461ffb5-96ef-49f2-85dd-9fb02dcd1648.png)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding screenshot, we can see the format of the options in Linux;
    it's either a `-` letter abbreviation, or `--`, and you type in the full option.
    So, for example, the `-- all` option does not ignore entries starting with a dot.
    If we type in or press the *Enter* key, the manual will just keep going down so
    you can read more information. These are all of the options that you can do with
    the command. We can see, for example, that the `-l` uses a long listing format.
    To quit this command, we just type in `q`, so we're out of the manual.
  prefs: []
  type: TYPE_NORMAL
- en: The help command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another really useful option is `--help`. We will use `ls` again, and do a
    `--help` command. Now, `man` and `--help` work on almost every command, so you
    can use `man ls`, or `ls --help`, and it will always show you the help or the
    manual page of the program. So, after we execute the preceding command, in the
    following screenshot, we can see the help page for using `ls`, and it tells us
    all of the options for the `ls` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/2b0cc358-9a5a-4518-9c62-ffe8b2e8990a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Again, it''s a `-` or a `--`, and we enter the option name as we did before.
    On top, it shows information about what the command does, and it gives the format
    of the command, so it should be used in this particular format: `Usage: ls`. We
    then enter the options, and then whether we want to do anything to the file. It''s
    very similar to the `man` command; sometimes, programs will not have `man`, and
    they''ll just have the `help` command.'
  prefs: []
  type: TYPE_NORMAL
- en: If we have any command or any program that we are not sure how to use, we can
    always just type in `man` and the name of the command, or the name of the command
    and `--help`. Another useful exercise when dealing with the Terminal is that we
    can press the up and down arrows to go through the history of the command. So,
    we can switch between the `man ls`, `ls -l`, and `ls --help` commands through
    the up and down arrow keys.
  prefs: []
  type: TYPE_NORMAL
- en: The Tab button
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another useful item is the *Tab* button on the keyboard. If we are typing a
    command, or if we are looking for a file and we are just not sure, we can use
    *Tab *button to autocomplete. For example, let's suppose that we want to type
    a filename. Let's first create a file; we just go to Places | Home, because right
    now, we are going to create a new file. Let's create a new folder, called `test`.
    Let's suppose that we are looking to do something with the `test` folder; the
    `cd` command can be used to change the working directory to another directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s suppose that we want to go into the `test` directory; we can use the
    command, and then find ourselves in the `test` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Another useful command is `pwd`; it shows you the current working directory.
    Just execute it, and, as we can see, we''re now in the `root/test` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now, if we want to go back, we can just use `cd`, change the directory, and,
    instead of typing a directory name that we want to go to, we can just type `cd
    ..`.
  prefs: []
  type: TYPE_NORMAL
- en: These were just basic commands, there are so many commands in Linux. Again,
    every program that we install on the system will have a Command Prompt version,
    and we can access that program through the Command Prompt. A lot of the programs
    that we're going to use will not even have a graphical interface, so we will have
    to use them through the Terminal. Again, don't be scared of that; we're going
    to go over it in the future.
  prefs: []
  type: TYPE_NORMAL
- en: Updating resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we know how to interact with the Terminal and Linux basics, we will
    just look at some final steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Updating the source list
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing `terminator`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing required updates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Going to the Kali machine, the first thing that I want to show you is viewing
    the machine in full screen. Just go to View and then Full-screen, and that will
    automatically expand everything and put it in proper full screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at the package manager in Kali Linux. We can install programs using
    a command called `apt-get`. We usually type in `apt-get`, and then, if we want
    to install something, we type `apt-get install`, followed by the package name
    (the program name). Before we do any of that, we have to update the sources; the
    way this program works is through fetching a number of libraries. On a fresh installation,
    we want to update our sources, so we make sure that it has the latest sources
    for the libraries, and the latest available programs. We''re just going to use
    `apt-get update`. This command will not update the system; it will only update
    the list of available programs that can be installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d0628b5d-5b2f-4b79-a6fe-dd1e6531fe94.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, everything has been updated, so we can go ahead and start installing programs.
    We are going to look at an example of installing a useful Terminal application
    called `terminator`. The command is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Press *Enter*; now, it will ask us if we really want to install this. We will
    say yes, by typing `y` and hitting *Enter*, and this will automatically download
    the application and install it for us:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/577f4c31-5dc3-4b87-a4ea-5c197eeaaf2d.png)'
  prefs: []
  type: TYPE_IMG
- en: Now, we can go ahead and try to use `terminator`. To do so, we will go to the
    Applications on the menu bar toward the left and search `terminator`. We will
    right-click to add it to My Favorites, so it shows up in the dock. We are going
    to open it, it's just another Terminal application. We can increase the size of
    the text here, and actually run programs through the Terminal, using any of the
    commands we illustrated previously. The advantage of the Terminator is that we
    can split the screen and run multiple commands. If we right-click on the screen,
    we can split it horizontally, and we can have three different windows that can
    run three different commands or programs at the same time. So, this can be really
    handy; it can make your life much easier in the future.
  prefs: []
  type: TYPE_NORMAL
- en: One more command involves upgrading our system. In many cases, when we upgrade
    our system, we face issues such as broken libraries; some of our programs might
    not work when the libraries they depend on have updated, but the program itself
    has not. If we face issues, we can restore a previous snapshot; but generally,
    we just don't upgrade. If there's a new version of Kali, we just import that as
    another virtual machine, instead of upgrading the existing Kali version.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, if you want to upgrade your system, all you have to do is type in `apt-get
    upgrade`. If you press *Enter*, it will tell you that a large number of libraries
    and packages will be upgraded. If you hit *Enter* again, it will start downloading,
    installing, and configuring these packages as seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3263e4b0-d2dd-44b5-a783-5c903308eb82.png)'
  prefs: []
  type: TYPE_IMG
- en: It might ask you to configure a few things, so don't be too adventurous and
    try to change things—keep them the way they are. Again, most of the time, we keep
    everything the same.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned what Kali Linux is, and the advantages of using
    it when it is installed on our virtual machine. After that, we looked through
    the GUI of Kali Linux, including various icons it has. We then used a few Linux
    commands that we are going to use in future chapters. Finally, we learned how
    we can update the resources of our system.
  prefs: []
  type: TYPE_NORMAL
- en: The upcoming chapters will focus on network penetration testing. Initially,
    we will learn all of the fundamentals; later, we will learn the attacks that we
    can perform on networks.
  prefs: []
  type: TYPE_NORMAL
