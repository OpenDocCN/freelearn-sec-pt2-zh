- en: Post-Connection Attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In all the attacks that we performed in the previous chapters, we weren't connected
    to a network. In this chapter, however, we are going to look at attacks that we
    can perform when we break through the network. Firstly, we are going to learn
    about all the important information we can gather when we enter a network that
    will help us to launch attacks; we will be using a netdiscover tool for this purpose.
    We will also learn about a tool that is similar to netdiscover—namely, AutoScan.
    This has a better interface and is more powerful than netdiscover. We will learn
    about yet another tool called Zenmap, which works in a similar fashion to the
    way AutoScan and netdiscover explore all the clients that are connected to a system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topic:'
  prefs: []
  type: TYPE_NORMAL
- en: Post-connection attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Post-connection attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Everything we've done so far has not involved us connecting to a network. In
    this section, we're going to be talking about post-connection attacks—in other
    words, attacks that we can do after connecting to a network. Now, it doesn't matter
    if this network is a wireless or a wired network, and it doesn't matter how we
    managed to connect to it. We're going to forget all about what we did so far,
    and we're just going to assume that we have a connection to the network. We could
    have just connected physically using a wire to the router or to the server, we
    could have managed to crack the key, if the target was using a WEP or WPA key,
    or perhaps the network was a wireless network that wasn't using any encryption,
    and we just connected to it. It doesn't matter how we gained our connection; if
    we have gained access to a network, then we can launch all of the attacks that
    we're going to talk about in this section.
  prefs: []
  type: TYPE_NORMAL
- en: 'One important thing to note first, though, is that in all of the previous attacks
    we kept our wireless card in monitor mode, so that we could capture any packet
    that goes in the air. In this section, we''re going to be using our wireless cards
    in managed mode, as we only want to capture packets that are directed to us, because
    we have access to the network and so we don''t really need to capture everything.
    Another thing to bear in mind is that, if we are testing in our lab and we want
    to test these attacks without using a number of wireless cards, we should go to
    the VirtualBox settings of the Kali machine, go to Setting | Network, and make
    sure that it''s using the NAT Network, and that it''s on the same subdomain (NatNetwork, in
    our example) as the other virtual machines, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f5dad30b-8c69-4b8f-8e79-d3ef6e81f67c.png)'
  prefs: []
  type: TYPE_IMG
- en: We can use the `eth0` card interface in our attacks from the Kali machine; it's
    going to be a virtual interface, but it's just going to work as a normal interface.
    Alternatively, we can use your wireless card—just connect from our Kali, connect
    to our target network, and then we will be able to test the security of any device
    that is in our network.
  prefs: []
  type: TYPE_NORMAL
- en: So, we can connect our virtual machine, or our Windows virtual machine, to the
    same network, or we can just test any other device that we have, be it our phone,
    an old laptop, or any other device.
  prefs: []
  type: TYPE_NORMAL
- en: The netdiscover tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing we're going to talk about in this section is gathering information.
    Gathering information about the connected clients and the router is very important
    because it will help us know what their IP and MAC addresses are and the operating
    system that they're running, as well as the ports that they have open in their
    devices. As for the router, we'll be able to know the manufacturer of the router,
    and then we'll be able to look for exploits and vulnerabilities that we can use
    against the router or against the clients if we are trying to hack them.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 4](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml), *Network Penetration
    Testing*, we saw how we can use `airodump-ng` to discover connected clients. In
    the second part of the `airodump-ng` output, we learned how we could see the associated
    clients and their MAC addresses. That was about it—that's everything we can get
    before we connect to the target access point. Now, after connecting, we can gather
    much more detailed information about these devices. There are a lot of programs
    for this task, but we're going to talk about three programs, starting with the
    simplest and quickest one—netdiscover.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we have said before, netdiscover is the quickest and the simplest program
    to use, but it doesn''t show very detailed information about the target clients.
    It''ll only show us their IP address, their MAC address, and sometimes the hardware
    manufacturer. We''re going to use it by typing `netdiscover`, and then we''re
    going to enter `-i` and specify our wireless device, which is `eth0`. Then we''re
    going to enter the range, which can be any range we want. Looking at the IP (which
    is `10.0.2.1`) tells us which network we are in. We want to discover all the clients
    that are in this network, so we''re going to try and see if there is a device
    in `10.0.2.1`. Then we''re going to try `12`, `13`, `14`, `15`, `16`, up to `254`—that''s
    the end of the range. So, to specify a whole range, we can write `/24`. That means
    we want `10.0.2.1`, and then this IP is just going to increase up to `10.0.2.254`,
    which is the end of the IP range in the network. The command for this is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We are going to hit *Enter*. It will return the output really fast, producing
    the result shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d53fe45f-afa5-44e4-9217-f9e267934b95.png)'
  prefs: []
  type: TYPE_IMG
- en: As we said, it's the quickest way, and we can see in the preceding screenshot
    that we have four devices connected to the network. We have their `MAC Addresses `and
    we have the `MAC Vendor`. That's about it. The method was very quick, and it just
    shows simple information.
  prefs: []
  type: TYPE_NORMAL
- en: The AutoScan tool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AutoScan is another program that can be used to discover computers or clients
    connected to the same network. It's not as fast as netdiscover, but it has a graphical
    interface, so it's easier to use, and it actually displays more detailed information
    about the discovered clients. Let's go to the Kali machine and download the Linux
    version of AutoScan from [https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download](https://sourceforge.net/projects/autoscan/files/AutoScan/autoscan-network%201.42/autoscan-network-1.42-Linux-x86-Install.tar.gz/download).
    The problem with the latest version (version 1.5) is that it has a bug, so it
    doesn't work very well. So, what we are going to do is download an older version,
    which is 1.42\. If we go to Files | Downloads, we will see the file. Let's extract
    that file by right-clicking on it and clicking on Extract Here from the drop-down
    menu. This will bring up the installer.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will run this installer in the Terminal, but before we do that, there is
    a library that AutoScan uses that we need to install. This library is only available
    to computers that have a 32-bit architecture, and consequently 32-bit processors,
    so we need to add that architecture first and then install the library. The first
    command we''re going to enter is for adding 32-bit compatibility to our 64-bit
    computer. If your computer is already 32-bit, then you don''t need to run the
    command, but if it''s a 64- bit computer, then you need to run the command. We
    are just going to launch the `dpkg --add-architecture i386` command. Now, we need
    to update the sources. To do this, we enter `apt-get update`. Now, we are going
    to install the library that AutoScan needs, called `libc6`. Run the `apt-get install
    libc6: i386` command and say `Yes` when it asks if you want to continue.'
  prefs: []
  type: TYPE_NORMAL
- en: Later, it will ask us to restart the services as configurations are made—say `Yes`
    when it does. OK, now it should be all installed. Now that we have installed the
    library that AutoScan needs, all we need to do is just install AutoScan itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you might recall, AutoScan was downloaded in the `Downloads` folder. We''re
    going to navigate to the `Downloads` folder by running `cd Downloads`. Then, if
    we list the files in `Downloads` using `ls`, we will see that we have the AutoScan
    installer itself written in green:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6e0309fa-aa58-4152-8c84-afa4a00c1e19.png)'
  prefs: []
  type: TYPE_IMG
- en: 'To run the installer, we''re going to write `./` and then write the name of
    the installer—that is, `autoscan-network-1.42-Linux-x86-Install`—and hit *Enter*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/231e9a3c-8b1a-4e6f-846f-c87175c9215f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It will ask us to click Next if we wish to continue installing AutoScan. Once
    we''ve confirmed our choice, it will ask us where we want to install it. We are
    going to keep it in the default place, which is `/opt/AutoScan`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ef2bb58f-3fb2-40f5-9b84-cf33b7bc6e76.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, the program should be fully installed. If we go to the desktop, we will
    see that we now have a launcher on the desktop. Also, if we go to Show Applications and
    look for AutoScan, we will see that we have two files; the uninstaller and AutoScan
    itself:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/dd5337a8-1da6-4e6e-bd03-dcd20d0f00e8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are now going to run AutoScan. We can use it to discover clients that are
    connected to the same network as us. The AutoScan Wizard (as shown in the following
    screenshot) will actually help us start the scan and see the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/9880c703-c192-498c-9c6f-ba3aba2a9edf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will just click on Forward. Next, it will ask us to name the network—we''re
    just going to keep it as Local network, and then click Forward:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/fc23ba51-cb45-4c2b-b865-3644748ccd76.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Again, it''s still going to ask us where the network is. It''s our localhost,
    so we are keeping it as it is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/931c3023-ce10-427a-9766-0e3987a94624.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, we click Forward. Next, AutoScan will show us the available interfaces.
    This is really important, because, depending on which interface we pick, we will
    discover the devices that are connected to the same network that this interface
    is connected to. For example, wlan0 [192.168.0.3] is an actual wireless card connected
    to our real home network, so if we use this interface, we will be able to discover
    all the devices that are connected to our Wi-Fi home network because wlan0 [192.168.0.3] is
    connected to that network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a32c2f76-1e99-41b1-9ebf-6d285892b7b3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are going to click on Forward, and then we''re going to click on Forward one
    more time. Now, the program is working, and as we can see in the following screenshot
    it is already discovering devices in our network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/6e982a02-30f6-475f-b0eb-f752a1cd698d.png)'
  prefs: []
  type: TYPE_IMG
- en: Give it some time. First of all, it's going to discover the IPs, then it will
    try to gather information about the open ports, the operating system, and the
    services used on these open ports.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the scan is over, we will be able to see all the devices in our network, as
    we can see in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b1047227-1a66-48ec-bab4-45a368b1da51.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking on any device will show us more information on the right-hand tabs.
    For example, if we click on the router, as shown in the preceding screenshot,
    it will get us more information than netdiscover, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/fc2266da-0658-4456-8c11-06623fa6d2ed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'At first, we can see the IP Address and the Mac Address. It''s also telling
    us that This is probably a gateway of the LAN, so it''s probably not an actual
    computer, but a router. Now, in the Info tab, we can see that we have open ports,
    and that two of the open ports are a TCP and a UDP port:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/0d393d40-e419-472c-a508-1e73efedaed4.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can see, the tool is easier to use and shows us more information than
    netdiscover, but it takes a longer time to actually scan the network and discover
    the information. In the next section, we'll have a look at Zenmap, which will
    show us more detailed information about the clients that are connected to our
    network.
  prefs: []
  type: TYPE_NORMAL
- en: Zenmap
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The third program that we're going to look at is **Network Mapper** (**Nmap**).
    Nmap is a network discovery tool that can be used to gather information on just
    about any device. With it, we can gather information about any client that is
    within our network, we can discover clients that are within our network, we can
    gather information about clients that are outside our network, and we can gather
    information about clients just by knowing their IP. We can even can enter their
    IP and then gather information on them. Nmap is a huge tool, and has many uses.
    It can be used to bypass firewalls, as well as all kinds of protection and security
    measures. There are entire books and courses on how to use Nmap. In this section,
    we're only going to have a quick look at Nmap, and learn some of the basic Nmap
    commands that can be used to discover clients that are connected to our network,
    and also discover the open ports on these clients.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''re going use Zenmap, which is the graphical user interface for Nmap. If
    we just type `zenmap` on the Terminal, we will bring up the application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/c27d50fe-a706-4e4b-b211-898c00eae6a1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In the Target field, we are going to put our IP address. If there is only one
    IP address that we want to gather information on, we can just enter that address,
    or we can enter a range, like we did with netdiscover. For this exercise, we will
    be entering `10.0.2.1/24`. In the Profile drop-down menu, we can have various
    profiles:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b56d852e-5e15-452f-a04b-ab88025ffee7.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can put a custom command in the Command option if we want, or we can use
    one of the ready-made profiles in the Profile drop-down menu. Let''s look at these
    ready-made profiles. First, we''ll look at the Ping scan profile first. Select Ping
    scan from the Profile drop-down menu and hit the Scan button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d639ed68-39dc-4de5-abb8-483e5ce80b72.png)'
  prefs: []
  type: TYPE_IMG
- en: The preceding scan is kind of a quick scan, but it doesn't show too much information,
    as we can see in the preceding screenshot. It only shows the connected devices.
    As we can see, we have the connected devices on the left-hand panel, and we have
    their IP addresses, their MAC addresses, and their vendors. Sometimes in netdiscover,
    we are not able to see the manufacturer of the device. Sometimes this information
    is also hidden from AutoScan. However, we can see the manufacturer with Nmap,
    as seen in the preceding screenshot. We are also able to know that the `10.0.2.5` is
    a VirtualBox virtual NIC device. This is a virtual wireless card, as we are performing
    scans in our wired lab. In the case of wireless scans, it will display the manufacturers
    of the router or device, and we can go ahead and look for exploits in those devices.
    Again, the Ping scan was very quick. We were able to find out the manufacturers,
    the IP addresses, and the MAC addresses of the connected clients.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next scan we''re going to have a look at is the Quick scan. Now, the Quick
    scan is going to be slightly slower than the Ping scan, but we will get more information
    than the Ping scan; we''re going to be able to identify the open ports on each
    device:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a6860565-67b9-49ae-ae7d-d171bf331b80.png)'
  prefs: []
  type: TYPE_IMG
- en: As we can see in the preceding screenshot, the main router has an open port
    called 53/tcp.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's have a look at the Quick scan plus, which will take the Quick scan
    one step further. It's going to be slower than the Quick scan, but it will show
    us the programs that are running on the opened ports. So, in the Quick scan we
    saw that, for example, port `80` is open, but we didn't know what was running
    on port `80`, and we saw that port `22` was running, but we didn't know what was
    running. We knew it was SSH, but we don't know what SSH server was running on
    that port.
  prefs: []
  type: TYPE_NORMAL
- en: 'So again, this will take longer than the Quick scan. This scan is slower than
    all the previous scans that we talked about, but we can see that it gathers much
    more information, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/a67b1b4d-6140-49e7-9f09-0f255c8e80a4.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see in the preceding screenshot that we have a Linux device connected.
    We can see that the operating system of the device is connected, and that it also
    got us the version for the programs. Last time, we only knew that port `22 `was
    open—now we know that it's running, and that the server that's running there is
    OpenSSH 4.7.
  prefs: []
  type: TYPE_NORMAL
- en: From the information that the Quick scan provided us about our Linux device,
    we were able to identify port `80`, and could tell that the port was open. We
    knew that HTTP was running on this, obviously, but we didn't know what version
    of the server was running on it. Now we know that it was Apache HTTP server 2.2.8
    and that it was a Linux device. So again, this is very accurate. We can go ahead
    and look for exploits and vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: This is just an example of how useful it is to gather information. Even if this
    didn't work, we could go ahead and look for exploits for these programs and we
    will manage to gain access to this network. So, gathering information is a huge
    step in penetration testing. Zenmap, or Nmap, is a huge tool that we can use to
    carry out many types of scans. We can experiment with these ready-made profiles
    to see what they can do.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have covered all the possible techniques that we can use
    to break through network and gather important pieces of information about the
    clients on the network. This will help us to launch attacks on the target system.
    For this purpose, we learned about three different tools—netdiscover, AutoScan, and Zenmap.
    All these tools have unique features that make them efficient in gathering information
    about targets.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to learn about various man-in-the-middle attacks.
    We will also be learning about the Wireshark tool.
  prefs: []
  type: TYPE_NORMAL
