- en: Gaining Access to Computer Devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are now moving toward the next segment of the book, where we will be covering
    topics related to gaining access to computer devices. In this part, we will be
    looking at ways to gain access to a victim''s machine. We will be hacking victims''
    systems using various techniques. This chapter will cover the first approach to
    attacking the victim''s system: the server-side attack. We will perform a server-side
    attack using the Metasploit device and also exploitation of backdoors.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter has the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to gaining access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server-side attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server-side basics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server-side attacks, Metasploit basics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code execution Metasploit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to gaining access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now you have enough information to go ahead and try to gain access to other
    systems, to computers, servers, web servers, and stuff like that. In this section,
    we''re going to be talking about gaining access to computer devices. What do we
    mean by computer devices? Any electronic device you see is a computer. A phone,
    a TV, a laptop, a web server, a website, a network, a router; all of these things
    are computers. Each one of them has an operating system, and they have programs
    installed on these operating systems. In most cases, these computers are used
    by a user. Here, we are going to be talking about how to gain access to computers.
    In this example, we are going to use a computer. We are going to have a Windows
    device target, and we''re going to have a Linux device hacker. But the concept
    is always the same; getting access to computer devices is always the same. We
    can apply the same concepts if we are targeting a phone, a tablet, or a web server,
    but we will be considering them all just like a normal computer. This is very
    important to understand: every device we see is a computer, and they work just
    like our personal computer. We can set up a web server on our computer, we can
    make it look and act like a website, or even make it act like a TV, or, for that
    matter, anything we want. Literally, TVs and all such things are just simple computers
    with less complicated hardware in them.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We''re going to be talking about attacking these devices from two main sides:
    the server side and the client side.'
  prefs: []
  type: TYPE_NORMAL
- en: Server side
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A server-side attack doesn't require any user interaction. We're going to have
    a computer, and we're going to see how we can gain access to that computer without
    the need for the user to do anything. This mostly applies to web servers, applications,
    and devices that don't get used much by people. People basically configure them
    and then they run automatically. All we have is an IP address, and we're going
    to see how we can test the security and gain access to that computer based on
    that IP. Our main way of getting in is going to be the operating system that that
    target runs, and the applications installed on that system. Various types of server-side
    attacks include SQL injection attacks, buffer overflow, and denial-of-service
    attacks.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will be focusing on server-side attacks. We will look in
    detail at what a server-side attack is and how to implement one.
  prefs: []
  type: TYPE_NORMAL
- en: Client side
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The second approach that we're going to try is the client-side attack. This
    approach will require the client, or the person who uses that computer, to do
    something. This could involve a number of things, such as installing an update,
    opening a picture, or opening a Trojan. We're going to learn how to create a Trojan,
    how to create backdoors, how to use social engineering to make the target person
    do something so that when they carry out that action, we will gain access to their
    computer. Information gathering is going to be crucial in this case, because we
    actually need to know the person that we're targeting. Various types of client-side
    attacks include content spoofing, cross-site scripting, and session fixation.
  prefs: []
  type: TYPE_NORMAL
- en: Post-exploitation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once we get an access to the system, we will see what we can do after we gain
    access to this computer, regardless of the method used to gained access to it.
    This could involve a server-side exploit, a client-side exploit, or even just
    physical access, where the victim leaves their desk and you get in. We're going
    look at what we can do once we have access to the target, how we can further exploit
    that target and increase our privileges, or target other computers in the same
    place.
  prefs: []
  type: TYPE_NORMAL
- en: Sever-side attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing we're going to look at is server-side attacks. These are attacks
    that don't require user interaction. We can use these attacks with web servers,
    and also use them against normal computers that people use every day. The reason
    why we are going to be using it against my Metasploitable (which runs Unix, and
    which is more of a server than a normal personal computer) is because if our target
    uses a personal computer, and if they're not on the same network as us, then even
    if we manage to get their IP address, their IP address is going to be behind a
    router. They'll probably be connecting through a router, and therefore, if we
    use the IP to try and determine what operating systems run on it and what applications
    are installed, we will not get much useful information because we are only going
    to be getting information about the router and not about the person. The person
    will be hiding behind the router. When we are targeting a web server, or a server
    in general, then the server will have an IP address and we can access that IP
    address directly on the internet. This attack will work if the person is on the
    same network and if the person has a real IP. If we can ping the person, even
    if it's a personal computer, then we can run all of the attacks and all of the
    information-gathering methods that we're going to learn about.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to be targeting my Metasploitable machine. Before we start working
    on it, we will just check the network settings. Just to verify it, it is set to
    NAT and it''s on the same network as the Kali machine. The Kali machine is going
    to be our attacking machine. Again, we have to check that the network is set to
    the NAT network and it''s on the same subnet. This is very important. If we do
    `ifconfig`, we will be able to see our IP address as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4bd0c595-ba74-40d1-a677-8f253002d3fb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we go to my Kali machine, we should be able to ping it. As we can see in
    the following screenshot, when we ping on the IP, we''re getting responses back
    from the machine, which tells us we are connected to that machine and we can get
    responses from it. Therefore, we can try and test its security as shown with the
    next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f8893495-0acb-46f0-85e4-acf11f1d9f45.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, we can use these attacks and these approaches against any computer that
    we can ping. If it's a personal computer or if it's a server of any kind, as long
    as we can ping that location or we can ping that person, then we can launch these
    attacks and methods that we're going to talk about.
  prefs: []
  type: TYPE_NORMAL
- en: 'Server-side attacks work against websites, web servers, people, and normal
    computers, as long as we can ping them. Just to convey this idea, we will see
    the Metasploitable machine, which is just a normal virtual machine that we can
    use right here to do anything we want. We can list it using the `-ls` command,
    and we can even install a graphical interface. Then we will be able to use it
    in the way we use my Kali machine. But at the same time, it has a web server.
    If we try to navigate to the server, we will see that it actually has a web server
    and it has websites that we can actually read and browse. We''re going to have
    a look at these websites and see how we can pen test them in the later chapters as
    we can see in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/58a79573-9baa-4442-9dc9-c13033756460.png)'
  prefs: []
  type: TYPE_IMG
- en: Everything is a computer, and if we can ping the IP, we can use server-side
    attacks. They mostly work against servers because servers always have real IPs.
    If the person is in the same network as we are, then we can ping them to do all
    of these attacks as well.
  prefs: []
  type: TYPE_NORMAL
- en: Server-side attack basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step in server-side attacks is information gathering. Information
    gathering is very important because it will show us the operating system of the
    target, the installed programs, the running services on the target, and the ports
    associated with these services. From these installed services, we can try and
    get into the system. We can do this by trying the default passwords. We saw this
    in the network penetration testing part where the iPad had an SSH service installed
    that basically gave us full access to the computer if the person still uses the
    default password, which was alpine. We can do this with any other service, and
    we will do so further in this section.
  prefs: []
  type: TYPE_NORMAL
- en: There's a lot of people that install services and misconfigure them, so we'll
    have another example of this as well. Sometimes, a lot of these services are designed
    to give someone remote access to that computer, but they obviously need to have
    some security implementations. People often misconfigure these services, so we
    can take advantage of these misconfigurations and gain access to these computers.
    Another problem with these services is that some of them might even have backdoors,
    and we'll see an example of that too. A lot of them will have vulnerabilities,
    such as remote buffer overflows or code execution vulnerabilities, and this will
    allow us to gain full access to the computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'The simplest way of doing this is something that we''ve seen before: Zenmap.
    We use Zenmap with the IP. We get a list of all of these services, and then Google
    each one of them to see if they contain any vulnerabilities. We''ve seen how we
    can use Zenmap in previous chapters, but we just want to convey the idea that
    anything is a computer. We''ve seen before how the Metasploitable device is actually
    a website. It has a web server running; websites are no different than this. If
    we want to get the IP of a website, all we have to do is `ping`. For example,
    if we''re targeting Facebook, we have to `ping facebook.com`, and we''ll get their
    IP. We will have Facebook''s IP and we''ll be able to run Zenmap against it and
    get a list of all the running services on Facebook. Now, obviously we are not
    going to do that because we are not allowed to do that. What we are going to do
    is run Zenmap against this Metasploitable device, which basically is a computer
    device, and that''s what we''re interested in testing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We going to run Zenmap in the same way that we did before. We will go to Activities.
    We are just going to look for Zenmap and open it. Now we are going to enter the
    IP of our target, of the Metasploitable device, which was `10.0.2.4` in our example.
    Remember that in [Chapter 4](16c0aae0-6766-4e7f-ade5-e359e50c2160.xhtml), *Network
    Penetration Testing* we used to put the base IP and put it over 24 to cover all
    the IPs around us in the network. In this case, you might be testing a remote
    IP. For example, in the case of Facebook, all you have to do is just put the Facebook
    target IP in there and test it. But since we don''t have permission to do so,
    we are not going to do that. We do have permission to test our own device, though,
    which is installed on the same network as us, so that''s why we will be putting
    in that IP. We can literally put any IP we want in there and test it. We are going
    to use Scan, and this will give us a list of all the installed applications as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b5b98c95-8c8f-450f-916a-b00d12420b46.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the scan is finished, we will have a lot of open ports and a lot of services.
    It is advisable that we go on the Nmap Output tab, check port by port, read what
    the services are, and Google the names of the services. For example, we have port
    `21` in the following screenshot, which is an FTP port. FTP is a service that''s
    installed to allow people to upload or download files from the remote server.
    FTP services usually use a username and a password, but we can see that this service
    has been misconfigured and it allows an anonymous FTP login. Unlike the SSH that
    we used before in the network penetration testing, we can use the default password.
    With this we will be able to log in without a password, note the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/cd25d133-5f37-46dd-9a28-f581ea1af90d.png)'
  prefs: []
  type: TYPE_IMG
- en: All we have to do is download an FTP client, such as FileZilla, and we will
    be able to connect using this IP address on port `21`. We won't go into the details
    of how to do it, as it is very simple. We just have to download the application
    and connect to it. We can also Google an FTP server, which in our case is vsftpd
    2.3.4, and see whether it has any issues, if it has any misconfigurations, or
    it has any known code execution exploits. Once we Google this, we can see that
    this particular application, vsftpd 2.3.4, has a backdoor installed with it. It
    literally came with a backdoor when it was released. We need to Google the services
    one by one and check whether they have any misconfigurations or any exploits installed,
    or any known exploits.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we are going to have a look at port `512`. Let''s assume we went on them
    one by one, we couldn''t find anything, and we reached the `512` TCP port, as
    shown in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4f7621b8-b8b3-4e15-93b6-d4262bc88856.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are going to Google the service that''s running on this port, as we don''t
    know what it is. After a little Googling, we know that netkit-rsh is a remote
    execution program. If we manage to log in with this, we''ll be able to execute
    commands on the target computer, and it uses the `rsh rlogin`, which is a program
    that ships with Linux. It allows us, similar to SSH, to execute remote commands
    on the target computer. Let''s go back and see how we can connect to the `rsh
    rlogin` service. Let''s look at the `netkit-rsh` package, and what comes with
    this package. As we can see, this is Ubuntu. The target computer system is running
    on Ubuntu, and we can see that in here it uses the `rsh-client` service to connect.
    We need to install a package to connect to that service. It is a client program
    for a remote shell connection. Now go back, and let''s install `rsh-client`. As
    we did before when we needed to install something, we run `apt-get`, and we do
    `install`. We''ll type the name of the program that we want to install, so it''s
    `rsh-client`. The command to install `rsh-client` is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '`apt-get` is going to install it for us and configure it, and once it''s installed,
    we''re going to use `rlogin` to log in, because the first page told us that it
    uses the `rlogin` program to facilitate the login process. We are going to do
    `rlogin`, and again, if we don''t know how to use this app, we use `--help` to
    see how to use it, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/06e6474a-efa7-4831-bd5d-b4ebdcc02e3c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'What''s important here is the username (`-l`) and the `host`, which is the
    target IP. Now we are going to do `rlogin`. We are going to put the username as
    `root`, which is the user with the most privileges on the system, and we''ll put
    the target IP, which is `10.0.2.4`. Here is the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'And now we are logged into the Metasploitable machine. If we execute the `id` command
    to get the ID, we can see that we are `root`. If we do a `uname -a` it will list
    the hostname and the kernel that''s running on the machine. We can see that we
    are in the Metasploitable machine with `root` access, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b61e8508-8c6a-4441-8562-c6da39bdb543.png)'
  prefs: []
  type: TYPE_IMG
- en: This is a basic manual way of gaining access to the target computer by exploiting
    the misconfiguration of an installed service. The `rlogin` service was not configured
    properly. All we had to do was just Google what came with that port, and we managed
    to log in and gain full access to the target computer.
  prefs: []
  type: TYPE_NORMAL
- en: Again, the key point here is we do a Zenmap scan and then go to each port that
    we find. We Google that port and look for misconfigurations and default passwords.
    If this target service came in with a backdoor or code execution, maybe it just
    wasn't programmed properly or it had a flaw that can be used to gain access to
    that computer.
  prefs: []
  type: TYPE_NORMAL
- en: Server-side attacks – Metasploit basics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''re going to look at an example of a very simple thing:
    a backdoor. Some programs or services are shipped with backdoors embedded in them.
    We''re going to exploit this, and we are choosing this very simple exploit because
    we are going to look at a framework called Metasploit. We will be using this framework
    a lot. We are going to start with something simple and then we''re going to go
    deeper into the framework. First, let''s look at how we can find that exploit.
    Again, using the same method that we''ve always been using, we have an Nmap scan;
    as we know, we''re going to go on each port and Google them, looking for exploits.
    We are going to Google the service name `vsftpd 2.3.4 exploit`. It''s the service
    name followed by `exploit`. We can see that the first result comes in from a website
    called Rapid7\. Rapid7 is a company that makes the Metasploit framework, so that''s
    why we chose this particular exploit. We''re going to exploit this service, or
    this problem, using Metasploit. Rapid7 will tell us that the 2.3.4 version of
    FTP has a backdoor command execution, so we can basically execute commands on
    the target computer if it has this program installed. And from Nmap, we know that
    this program is installed, which means that we can execute commands on the target
    machine.'
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit, as we have said, is made by Rapid7\. It is a huge framework that
    contains a large number of exploits. It allows you to exploit vulnerabilities
    or create your own exploits. If you are an expert and you know how to discover
    and make exploits, then Metasploit will help you do that. For now, we're making
    use of a very simple existing vulnerability. The commands on Metasploit are very
    easy. They might seem a bit complicated at first, but once we get used to them,
    they are very easy to use, and a lot of them are generic commands. Here, we will
    show you the basic generic commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are other commands that we will get used to in time:'
  prefs: []
  type: TYPE_NORMAL
- en: '`msfconsole`: This just launches the Metasploit program.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`help`: With this, we can get information about the commands and a description
    of how we can use them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`show`: This shows the available exploits. We can show the available auxiliaries
    and the available payloads. We''ll talk about what each of these mean in the future.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`use`: This command is used to use something that we have shown. For example,
    we show the exploits and we pick a certain exploit that we want to use. Then we
    use the `use` command and we type in the exploit name to run it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`set`: The `set` command is used to set specific options for the exploit. For
    example, if we want to set the IP address of our target, we set the IP and then
    we enter the value of the IP that we want to set it to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`exploit`: At the end, once we finish configuring, we can type in `exploit`
    to execute that exploit.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We went on Nmap, we Googled the name of the service, and the first thing that
    came up is that this service has a backdoor command execution. Because this is
    on Rapid7, the vulnerability is exploitable using Metasploit, and the module name
    that we're going to be using is `exploit.unix/ftp/vsftpd_234_backdoor` to exploit
    this vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we will go to our console, and we will launch Metasploit using the `msfconsole` command, and
    we''re going to run `use` and then put the name of the exploit, which is `exploit.unix/ftp/vsftpd_234_backdoor`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'As we can see in the following screenshot, the name changed to `exploit` and
    then the name of exploit that we''re using:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b84e84ba-62ad-4c32-b4d9-67f97706a602.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Then we''re going to use the `show` command to show the options that we need
    to set. As we know, `show` is a generic command that we can use in a number of
    cases. In this case, we''re doing `show options` to see all the options that we
    can change for this particular exploit. As you can see in the following screenshot,
    the second option is the port that the service is running on. It''s already set
    to port `21`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/464d8448-97ca-4802-aee4-bd7392af770b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If we go back to Nmap, we will see that our target FTP client, or server, is
    running on port `21`. We don''t need to change any of that. What we need to change
    is `RHOST`. `RHOST` is the target IP address, and we''re going to set `RHOST`,
    and that''s the IP address of my target Metasploitable machine. We use `set`,
    and after `set` we put the option name. If we want to change the port, we set
    `RPORT`, but we are changing the `RHOST` to `10.0.2.4`. As explained at the start
    of this topic, we''re going to use the `set` option, or the `set` command. The
    command is going to be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Press *Enter*, and as we can see now, in the next screenshot, the `RHOST` is
    set to `10.0.2.4`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/4c8d319a-ef59-491c-9bda-eaef4db8ee36.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we will do `show options` again just to make sure that everything is configured
    correctly, and as you can see in the following screenshot, `RHOST` has been changed
    to `10.0.2.4`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/9e00cbab-19dc-4122-b92b-82b8c7e946cf.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Everything is ready now. To execute the `exploit`, we just type in `exploit`.
    We can see in the following screenshot that the `exploit` was run successfully,
    and now we have access to the target computer. If we do `id` we will see that
    our `UID` is `root`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e03f0557-7292-429b-90f0-f94c9e37f3e6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now basically we are running Linux commands here, so if we do a `uname -a`
    we will see that this is my Metasploitable machine, and if we do `ls` then it''ll
    list the files for us. If we do `pwd` it''ll show us where we are, and we can
    use Linux commands to do anything we want on the target machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/964b623d-22fc-4ccf-8004-9c0e0fa7652b.png)'
  prefs: []
  type: TYPE_IMG
- en: Now this was a very simple use of Metasploit. In the future, we're going to
    be using it for more advanced actions.
  prefs: []
  type: TYPE_NORMAL
- en: Metasploit remote code execution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we''re going to have a more advanced look at Metasploit, and we''ll see
    how to use it to exploit a vulnerability that exists in a certain service. It''s
    a code execution vulnerability that will give us full access to the target computer.
    Coming back to our results in Nmap, we''re going to do the same thing that we''ve
    been doing for a while: we copy the service name and see whether it has any vulnerabilities.
    For now, we''re having a look at port `139`, which has a Samba server version
    3.X. We''re going to go to Google, just like we did in the previous section, and
    we''re going to look for `Samba 3.X exploit`. You will see there''s a number of
    results. The one that we''re interested in is from Rapid7, because, as mentioned
    earlier, these are the people that make Metasploit, so the exploits that we see
    there can be used through Metasploit. The exploit we''ll be using is username
    map script. It''s a command execution vulnerability. The name of the vulnerability
    is `exploit/multi/samba/usermap_script`, so it''s the same thing that we used
    before with the evil backdoor in the FTP service. This is just a different name
    that we''re going to use, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/d8d342c9-fef3-4ef5-9339-1ce62bd8d9b4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We will go to Metasploit and run `msfconsole`. We will be writing a command
    like we did in the previous section. We write `use`, and then we are going to
    type the name of the exploit that we want to use. The next thing that we are going
    to do is `show options`. The command will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is the output of the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/c7d8fe26-1f88-4244-84be-033a267bb208.png)'
  prefs: []
  type: TYPE_IMG
- en: Using these exploits is always pretty much the same. The only difference is
    the `options` that we can set for each exploit. We always run `use` and then we
    type in the exploit name, and then do `show options` to see what we can change
    to work with this exploit. In the future, we probably will get different exploits
    than what we have now. Every time we want to run an exploit, we do `use <exploit
    name>`, and then we do `show options` to see the options that we want to configure.
    But using the exploits and setting the options and running them is always the
    same.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will learn a few examples that should cover pretty much everything that
    we want to do in the future. Again, we need to set up `RHOST`, which is the IP
    of the target computer, and we''re going to do it the same way that we did before.
    As setting the `options` is always the same, so we''re going to do `set RHOST`,
    and then we''re going to put the IP of the target computer, which is `10.0.2.4`.
    Exactly like we did before, we''re using the `set` command to set an option, which
    is the `RHOST`. We''re going to run `show options`, and as we can see in the following
    screenshot, the `RHOST` will be set correctly according to the specified IP:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/ecce93f1-d64d-47bb-bf8c-30b13e0a6b43.png)'
  prefs: []
  type: TYPE_IMG
- en: This is where things differ from the previous section. In the preceding section,
    we used a backdoor that was already installed on the target computer, so all we
    had to do was connect to the backdoor and then we could run any Linux commands
    on the target computer. In this section, the target computer does not have a backdoor;
    it has a normal program that has a buffer overflow or a code execution vulnerability.
    The program doesn't have any code that allows us to run Linux commands. It has
    a certain flaw that will let us run a small piece of code. These small pieces
    of code are called **payloads**. What we need to do is create a payload and then
    run it on the target computer using the vulnerability that we found. That piece
    of code will allow us to do different things. The payload is what allows us to
    do things that are useful to us.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the payload might let us do Linux commands, and there are other types
    of payload we''ll look at in the future. To see the payloads that you can use
    with this particular exploit, all you have to do is run the `show payloads` command.
    We can use different types of payload, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b482b5d3-9ac2-4852-81f1-8b021dc0f0bd.png)'
  prefs: []
  type: TYPE_IMG
- en: Payloads are small pieces of code that will be executed on the target computer
    once the vulnerability has been exploited. When we exploit the vulnerability,
    the code that we're going to pick will be executed, and depending on the type
    of payload we choose, that payload will do something that is useful to us. Right
    now, we can see that all the payloads are command line, so they let us run commands
    on the target computer, just like Linux commands. And all of them only run on
    Unix, because our target is Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two main types of payloads:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Bind payloads**: All they do is open a port on the target computer, and then
    we can connect to that port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reverse payloads**:They do the opposite of bind payloads. They open a port
    in my machine and then they connect from the target computer to our machine. This
    is useful because this allows us to bypass firewalls. Firewalls filter any connections
    going to the target machine, but if the target machine connects to us and we don''t
    have a firewall, then we will be able to bypass the firewall.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We will be using the `cmd/unix/reverse_netcat` payload. The last part of these
    payloads are the programming language or the tool that''s going to be used to
    facilitate the connection. For example, we can see in preceding screenshot that
    there are payloads written in Perl, Ruby, Python, PHP, or using Netcat, which
    is a tool that allows connections between computers. The `cmd/unix/reverse_netcat` payload is
    the one that we are going to use, and we are going to use it in the same way we
    use an exploit. We are just going to use it using the `set` command. The command
    will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The same way you set an `option`, we''re going to set payload. We do `show
    options` to see if there are any other `options` that we need to `set`, and because
    we picked a payload, there are more `options`. As you can see in the following
    screenshot, there is an option called `LHOST`, and it''s the listening address,
    which is our own address:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/c4816ec1-da1f-42f9-ba5e-41fe63aa69fa.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are going to get our own IP address using `ifconfig`, and our address for
    this example is `10.2.0.15`, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/f0d945f2-099f-4730-98ec-2c2f0b762d53.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are going to set the `LHOST `in the same way that we set the `RHOST` before.
    We set the `LHOST` to `10.2.0.15`. Before, we used `set RHOST` to set this option.
    Now we''re setting the `LHOST` to set this particular option. The `set` command
    is really simple: `set`, the `<option name>`, and then the `<value>` that we want
    to set it to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we are going to do `show options`, and everything seems fine, as shown
    in the next screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/e5492ef4-4989-4346-9e58-b8cbc625ec29.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We''re using this exploit. The `RHOST` is set to `10.0.2.4`, which is OK, and
    then the `LHOST` is set to `10.0.2.15`, which is perfect, and then we can also
    set the port that you''re going to be listening on on your current computer. You
    can actually set it to `80` if you want to. That''s the port that is used by web
    browsers. If we set the `LPORT` to `80`, the target computer will try to connect
    to us using port `80`, which is never filtered on firewalls because that''s the
    port that web browsers, or web servers, use. Whenever we access a website, we
    actually access port `80` on that website. If we open port `80` on our machine
    and the target connects to us on port `80`, then the firewall will think that
    the target is only browsing the internet. We are not going to do that now because
    we have a web server running on port `80` and that will conflict. We are just
    going to `set` the `LPORT` to `5555`, in the same way as `LHOST`. We are going
    to do `show options` again, and as we can see in the following screenshot, that
    port has been changed to `5555`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/3e44a1d0-8a1b-4a74-8a86-48006fd903f8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now we are going to run the `exploit` command to run the exploit. As we can
    see in the following screenshot, it''s telling us that `session 1` has been opened
    and the connection is between the `10.0.2.15:5555` device and the `10.0.2.4:48184`
    device, which is our device and the target device:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/951e4b9f-f5b1-468c-b64d-19a8a922a79c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We are going to do `pwd`, and we do `id`. We will see that we are `root`. If
    we do `uname -a`, we will see we are in the Metasploitable machine, and if we
    do `ls` we will be able to list the files and so on. We can use any Linux command
    just like we did before in the previous section, shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/b1150740-4f58-471a-9a8c-c1aea2c5f810.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at the concept of gaining access to a machine, and
    we also got an overview of ways to gain access. We also looked at the basics of
    server-side attacks, which are the techniques of gaining access to victims' machines.
    We saw how to use a default password or a misconfigured service to gain access
    to the target computer. We then saw how to use a service with a default password,
    a service that has not been configured correctly, and a service that came with
    a backdoor to gain full access to the target computer. We also looked at using
    Metasploit to connect to a backdoor that was installed on the FTP service. The
    next chapter will be about using the MSFC and Nexpose tools to scan and analyze
    vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
