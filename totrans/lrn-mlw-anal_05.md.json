["```\nint main()\n{\n  int x = 1;\n  int y;\n  y = x;\n  return 0;\n}\n```", "```\n.text:00401000 ; Attributes: bp-based frame ➊\n.text:00401000\n.text:00401000 ; ➋ int __cdecl main(int argc, const char **argv, const char **envp)\n.text:00401000  ➐ _main proc near\n.text:00401000\n.text:00401000    var_8= dword ptr -8  ➌\n.text:00401000    var_4= dword ptr -4  ➌\n.text:00401000    argc= dword ptr 8   ➌\n.text:00401000    argv= dword ptr 0Ch  ➌\n.text:00401000    envp= dword ptr 10h  ➌\n.text:00401000\n.text:00401000    push ebp  ➏   \n.text:00401001    mov ebp, esp  ➏\n.text:00401003    sub esp, 8  ➏  .text:00401006    mov ➍ [ebp+var_4], 1\n.text:0040100D    mov eax, [ebp+var_4] ➍\n.text:00401010    mov ➎ [ebp+var_8], eax\n.text:00401013    xor eax, eax \n.text:00401015    mov esp, ebp  ➏\n.text:00401017    pop ebp  ➏\n.text:00401018    retn\n```", "```\n.text:00401006    mov dword ptr [ebp-4], 1\n.text:0040100D    mov eax, [ebp-4]\n.text:00401010    mov [ebp-8], eax\n```", "```\n.text:00401006    mov [ebp+var_4], 1\n.text:0040100D    mov eax, [ebp+var_4]\n.text:00401010    mov [ebp+var_8], eax\n.text:00401013    xor eax, eax\n.text:00401018    retn\n```", "```\n.text:00401006    mov [ebp+x], 1\n.text:0040100D    mov eax, [ebp+x]\n.text:00401010    mov [ebp+y], eax\n.text:00401013    xor eax, eax\n.text:00401018    retn\n```", "```\n.text:00401006    mov [ebp+x], 1     ; x = 1\n.text:0040100D    mov eax, [ebp+x]   ; eax = x\n.text:00401010    mov [ebp+y], eax   ; y = eax\n.text:00401013    xor eax, eax       ; return 0\n.text:00401018    retn\n```", "```\n.text:00401000    ; x = 1  ➑\n.text:00401000    ; y = x  ➑\n.text:00401000    ; return 0 ➑\n.text:00401000    ; Attributes: bp-based frame\n.text:00401000\n.text:00401000    ; int __cdecl main(int argc, const char **argv, const char **envp)\n.text:00401000    _main proc near ; CODE XREF: ___tmainCRTStartup+194p\n```", "```\nint a;\nchar b;\nint main()\n{\n   a = 41;\n   b = 'A';\n   int x = a;\n   int *y = &a;\n   char *string = \"test\";\n   return 0;\n}\n```", "```\n.text:00401000    var_C= dword ptr -0Ch  ➊ \n.text:00401000    var_8= dword ptr -8  ➊ \n.text:00401000    var_4= dword ptr -4  ➊ \n.text:00401000    argc= dword ptr 8\n.text:00401000    argv= dword ptr 0Ch\n.text:00401000    envp= dword ptr 10h\n.text:00401000\n.text:00401000    push ebp\n.text:00401001    mov ebp, esp\n.text:00401003    sub esp, 0Ch\n.text:00401006    mov ➋ dword_403374, 29h  \n.text:00401010    mov ➌ byte_403370, 41h  \n.text:00401017    mov eax, dword_403374  ➍ \n.text:0040101C    mov [ebp+var_4], eax\n.text:0040101F    mov [ebp+var_8], offset dword_403374  ➎ \n.text:00401026    mov [ebp+var_C], offset aTest ; \"test\"  ➏\n.text:0040102D    xor eax, eax\n.text:0040102F    mov esp, ebp\n.text:00401031    pop ebp\n.text:00401032    retn\n```", "```\n.data:00403000    aTest db 'test',0  ➐; DATA XREF: _main+26o\n```", "```\n.data:00403374     dword_403374 dd ?    ➑; DATA XREF: _main+6w \n.data:00403374                       ➒; _main+17r ... \n```", "```\nint x = 0;\nif (x == 0)\n{\n    x = 5;\n}\nx = 2;\n```", "```\n.text:00401004    mov [ebp+var_4], 0\n.text:0040100B    cmp [ebp+var_4], 0\n.text:0040100F    jnz short loc_401018 ➊\n.text:00401011    mov [ebp+var_4], 5\n.text:00401018\n.text:00401018    loc_401018:  ➌; CODE XREF: _main+Fj\n.text:00401018    ➋ mov [ebp+var_4], 2\n```", "```\nvoid test() { }\nvoid main() {\n    test();\n}\n```", "```\n.text:00401010    push ebp\n.text:00401011    mov ebp, esp\n.text:00401013    call sub_401000 ➊\n.text:00401018    xor eax, eax\n```", "```\n.text:00401000    sub_401000    proc near ➋; CODE XREF: _main+3p\n.text:00401000                  push ebp\n.text:00401001                  mov ebp, esp\n.text:00401003                  pop ebp\n.text:00401004                  retn\n.text:00401004    sub_401000    endp\n```", "```\n.data:00403374 dword_403374      dd ?          ; DATA XREF: _main+6w \n.data:00403374                                 ; _main+17r ... ➊\n```", "```\nHANDLE WINAPI CreateFile(\n_In_ LPCTSTR lpFileName,\n_In_ DWORD dwDesiredAccess,\n_In_ DWORD dwShareMode,\n_In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,\n_In_ DWORD dwCreationDisposition,\n_In_ DWORD dwFlagsAndAttributes,\n_In_opt_ HANDLE hTemplateFile\n);\n```", "```\npush  0                   ; hTemplateFile\npush  80h                 ; dwFlagsAndAttributes\npush  2  ➍                ; dwCreationDisposition\npush  0                    ; lpSecurityAttributes\npush  1                    ; dwShareMode\npush  40000000h  ➌         ; dwDesiredAccess\npush  offset FileName  ➋   ; \"psto.exe\"\ncall  CreateFileA  ➊\n```", "```\npush 0                 ; hTemplateFile\npush 80h               ; dwFlagsAndAttributes\npush CREATE_ALWAYS     ; dwCreationDisposition\npush 0                 ; lpSecurityAttributes\npush 1                 ; dwShareMode\npush GENERIC_WRITE     ; dwDesiredAccess\npush offset FileName   ; \"psto.exe\"\ncall CreateFileA\n```", "```\nlea  ecx, [esp+7E8h+phkResult] ➊\npush ecx ➋                        ; phkResult\npush 20006h                       ; samDesired\npush 0                            ; ulOptions\npush offset aSoftwareMicros ;Software\\Microsoft\\Windows\\CurrentVersion\\Run\npush HKEY_CURRENT_USER            ; hKey\ncall ds:RegOpenKeyExW\n```", "```\nmov   ecx, [esp+7E8h+phkResult] ➌\nsub   eax, edx\nsar   eax, 1\nlea   edx, ds:4[eax*4]\npush  edx                     ; cbData\nlea   eax, [esp+7ECh+pszPath] ➐\npush  eax ➏                  ; lpData\npush  REG_SZ                 ; dwType\npush  0                      ; Reserved\npush  offset ValueName       ; \"System\" ➎\npush  ecx ➍ ; hKey\ncall  ds:RegSetValueExW\n```", "```\nmov   edx, [esp+7E8h+phkResult]\npush  edx                     ; hKey\ncall  esi                     ; RegCloseKey\n```", "```\nxor  r9d, r9d  ➍                           ; lpSecurityAttributes\nlea  rcx, [rsp+3B8h+FileName] ➊             ; lpFileName\nlea  r8d, [r9+1] ➌                          ; dwShareMode\nmov  edx, 40000000h ➋                       ; dwDesiredAccess\nmov  [rsp+3B8h+dwFlagsAndAttributes], 80h ➏  ; dwFlagsAndAttributes\nmov  [rsp+3B8h+dwCreationDisposition], 2  ➎  ; lpOverlapped\ncall cs:CreateFileW\nmov  rsi, rax  ➐\n```", "```\nand  qword ptr [rsp+3B8h+dwCreationDisposition], 0\nlea  r9,[rsp+3B8h+NumberOfBytesWritten]       ; lpNumberOfBytesWritten\nlea  rdx, [rsp+3B8h+Buffer]                   ; lpBuffer\nmov  r8d, 146h                                ; nNumberOfBytesToWrite\nmov  rcx, rsi ➑                               ; hFile\ncall cs:WriteFile\n```", "```\n10001BF2     push offset aSpoolsv_exe  ; \"spoolsv.exe\"\n10001BF7     push edi                  ; char *\n10001BF8     call _stricmp  ➊ \n10001BFD     test eax, eax\n10001BFF     pop ecx\n10001C00     pop ecx\n10001C01     jnz loc_10001CF9\n\n[REMOVED]\n\n10001CF9 loc_10001CF9: ➋      ; CODE XREF: DllEntryPoint+10j\n10001CF9      xor  eax, eax\n10001CFB      pop  edi\n10001CFC      pop  esi\n10001CFD      pop  ebx\n10001CFE      leave\n10001CFF      retn 0Ch\n```", "```\nPython>ea = idc.get_screen_ea()\nPython>print hex(ea)\n0x40206a\n```", "```\nPython>ea = idc.get_screen_ea()\nPython>idc.get_segm_name(ea)\n.text\n```", "```\nPython>ea = idc.get_screen_ea()\nPython>idc.generate_disasm_line(ea,0)\npush ebp\n```", "```\nPython>ea = idc.get_screen_ea()\nPython>idc.get_func_name(ea)\n_main\n```", "```\nimport idautils\nfor addr, name in idautils.Names():\n      if \"CreateFile\" in name:\n             print hex(addr),name\n```", "```\n0x407010      CreateFileA\n```", "```\nimport idc\nimport idautils\n\nea = idc.get_name_ea_simple(\"CreateFileA\")\nif ea != idaapi.BADADDR:\n    print hex(ea), idc.generate_disasm_line(ea,0)\nelse:\n    print \"Not Found\"\n```", "```\nimport idc\nimport idautils\n\nea = idc.get_name_ea_simple(\"CreateFileA\")\nif ea != idaapi.BADADDR:\n    for ref in idautils.CodeRefsTo(ea, 1):\n        print hex(ref), idc.generate_disasm_line(ref,0)\n```", "```\n0x401161   call  ds:CreateFileA\n0x4011aa   call  ds:CreateFileA\n0x4013fb   call  ds:CreateFileA\n0x401c4d   call  ds:CreateFileA\n0x401f2d   call  ds:CreateFileA\n0x401fb2   call  ds:CreateFileA\n```"]