["```\n$python [the_python_file_name.py]\n```", "```\n$./**[the_python_file_name.py]** \n```", "```\n$chmod +x [the_python_file_name.py]\n```", "```\n# Comment one line\n\n\"\"\" the three double quotes can be used\nfor multiple lines comments\"\"\" \n```", "```\nif x == 1:\n x = x + 1\n print 'Success'\n```", "```\nreport_results = nmap_report + \\\ntheharvester_report + \\\nmetasploit_report \n```", "```\nips = ['192.168.0.1',192.168.0.10','192.168.0.99',\n192.168.0.100]\n```", "```\n# import the os library to allow us to create a new directory\nimport os\n#create a test directory\nos.mkdir('Test')\n```", "```\nprint 'The application has finished execution'\n```", "```\nip_address = raw_input('IP:')\nprint ip_address\n```", "```\nif results is None:\n print ('Empty results')\n```", "```\n# A string type port number\nport_number = \"80\"\n\n# An integer, which holds the number of hosts\nhost_count = 254\n\n# Convert port number into integer type\nint(port_number)\n\n# Convert port number into a float type with decimals\nfloat(port_number)\n\n# Convert the number of host into a string\nstr(host_count)\n```", "```\nip_address = '10.0.0.1'\n# Or you can use double quotes:\nip_address= \"10.0.0.1\"\n#Multiple lines, using triple double quotes/single quotes\nwelcome_message = \"\"\" Hello there, welcome to our powerful intelligent\n                        script, you will be amazed!\"\"\"\n```", "```\ndevice_name = 'Cisco Router 2911'\nip_address = '10.0.1.1'\nhost = device_name + \":\" + ip_address\n```", "```\nip_address = '10.0.1.1'\nhost = \"router IP address is : %s\" % ip_address\n```", "```\nmessage = \" Welcome To Python \"\nmessage = message.strip()\n```", "```\nip_address = '10.0.1.1'\nstring_length = len(ip_address)\n```", "```\nips= \"10.0.0.1,10.0.0.2\"\nips_splitted = ips.split(',')\nprint ips_splitted[0]\n```", "```\nnum1 = max(2,8)\nnum2=min(2,8)\n```", "```\n# Generate a Random number from 10 to 100 and with 1 increment at a time (10,11,12,13...100)\nimport random\nrand = random.randrange(10,100,1)\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n# To add a third item to the list\nips.append('192.1.1.2')\nprint ips\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n# Print the first IP address\nprint ips[0]\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n# Assign the first item a new value\nips[0] = 192.168.1.1\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n# We will delete the first IP address:\ndel ips[0]\nprint ips\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n# Print the length of the ips list which is 2 in this case:\nprint len(ips)\n```", "```\nips = ('1.1.1.1','2.2.2.2')\n```", "```\nips = ('1.1.1.1','2.2.2.2')\n# Print the first IP address\nips[0]\n```", "```\nips = ('1.1.1.1','2.2.2.2')\n# Print the length of the ips list which is 2 in this case:\nprint len(ips)\n```", "```\nhosts_dictionary = { 'Srv-001':'10.0.0.100', 'Srv-002':'10.0.0.100'}\n```", "```\nhosts_dictionary = { 'Srv-001':'10.0.0.100', 'Srv-002':'10.0.0.101'}\nhosts_dictionary['Srv-003'] = '10.0.0.103'\nprint hosts_dictionary\n```", "```\nhosts_dictionary = { 'Srv-001':'10.0.0.100', 'Srv-002':'10.0.0.101'}\nhosts_dictionary['Srv-002'] = '10.0.0.122'\nprint hosts_dictionary\n```", "```\nhosts_dictionary = { 'Srv-001':'10.0.0.100', 'Srv-002':'10.0.0.101'}\ndel hosts_dictionary['Srv-002']\nprint hosts_dictionary\n```", "```\nhosts_dictionary = { 'Srv-001':'10.0.0.100', 'Srv-002':'10.0.0.101'}\nfor host,ip in hosts_dictionary.items(): print \"host:%s , IP: %s\" % (host,ip)\n```", "```\ndef addition(x,y): \n    return x + y\n```", "```\nips = ['192.1.1.1','192.1.1.254']\n\nfor ip in ips:\n    print ip\n```", "```\n# class name\nclass Host:\n    #class constructor\n    def __init__(self,name):\n        self.name = name\n    def print_host(self):\n        print self.name\n\n#let's call it from somewhere else\nh = Host('SRV-001')\nh.print_host()\n```", "```\ntry:\n    [put your code here]\nexcept Exception, e:\n    exception_message = str(e)\n    print(\"Error: \" + exception_message)\n```", "```\nf=open('/root/dic.txt',r)\nfor txt in f:\n    print txt\nf.close()\n```", "```\nf=open('ips.txt',a)\nf.write('192.168.0.0\\n')\nf.close()\n```"]