["```\n> Get-Command -Name *wmi* -CommandType Cmdlet,Function\nCommandType  Name               Version    Source\n-----------  ----               -------    ------\nCmdlet       Get-WmiObject      3.1.0.0    Microsoft.PowerShell.Management\nCmdlet       Invoke-WmiMethod   3.1.0.0    Microsoft.PowerShell.Management\nCmdlet       Register-WmiEvent  3.1.0.0    Microsoft.PowerShell.Management\nCmdlet       Remove-WmiObject   3.1.0.0    Microsoft.PowerShell.Management\nCmdlet       Set-WmiInstance    3.1.0.0    Microsoft.PowerShell.Management\n```", "```\n> Get-WmiObject -List\n   NameSpace: ROOT\\cimv2\nName                  Methods Properties\n----                  ------- ----------\nCIM_Indication        {}      {CorrelatedIndications, IndicationFilterName, IndicationIde...\nCIM_ClassIndication   {}      {ClassDefinition, CorrelatedIndications, IndicationFilterNa...\nCIM_ClassDeletion     {}      {ClassDefinition, CorrelatedIndications, IndicationFilterNa...\n...\n```", "```\n> Get-WmiObject -Class Win32_Service\nExitCode  : 0\nName      : AdobeARMservice\nProcessId : 3556\nStartMode : Auto\nState     : Running\nStatus    : OK\n…\n```", "```\n> Get-WmiObject -Class Win32_Service -ComputerName PSSec-PC02\n```", "```\n> Get-WmiObject -ComputerName PSSec-PC02 -Query \"select * from win32_service where name='WinRM'\"\nExitCode  : 0\nName      : WinRM\nProcessId : 6408\nStartMode : Auto\nState     : Running\nStatus    : OK\n```", "```\n> Get-Command -Name \"*cim*\" -CommandType Cmdlet,Function\nCommandType     Name                        Version    Source\n-----------     ----                        -------    ------\nCmdlet          Get-CimAssociatedInstance   1.0.0.0    CimCmdlets\nCmdlet          Get-CimClass                1.0.0.0    CimCmdlets\nCmdlet          Get-CimInstance             1.0.0.0    CimCmdlets\nCmdlet          Get-CimSession              1.0.0.0    CimCmdlets\nCmdlet          Invoke-CimMethod            1.0.0.0    CimCmdlets\nCmdlet          New-CimInstance             1.0.0.0    CimCmdlets\nCmdlet          New-CimSession              1.0.0.0    CimCmdlets\nCmdlet          New-CimSessionOption        1.0.0.0    CimCmdlets\nCmdlet          Register-CimIndicationEvent 1.0.0.0    CimCmdlets\nCmdlet          Remove-CimInstance          1.0.0.0    CimCmdlets\nCmdlet          Remove-CimSession           1.0.0.0    CimCmdlets\nCmdlet          Set-CimInstance             1.0.0.0    CimCmdlets\n```", "```\n> vi /etc/ssh/sshd_config\n```", "```\nSubsystem powershell /usr/bin/pwsh -sshs -NoLogo\n```", "```\n    PasswordAuthentication yes\n    ```", "```\n    PubkeyAuthentication yes\n    ```", "```\nPasswordAuthentication no\nPubkeyAuthentication yes\n```", "```\n> /etc/init.d/ssh restart\n```", "```\n> vi /private/etc/ssh/sshd_config\n```", "```\nSubsystem powershell /usr/local/bin/pwsh -sshs -NoLogo\n```", "```\n    PasswordAuthentication yes\n    ```", "```\n    PubkeyAuthentication yes\n    ```", "```\n> sudo launchctl stop com.openssh.sshd\n> sudo launchctl start com.openssh.sshd\n```", "```\n> Enable-PSRemoting\nWinRM has been updated to receive requests.\nWinRM service type changed successfully.\nWinRM service started.\nWinRM has been updated for remote management.\nWinRM firewall exception enabled.\nConfigured LocalAccountTokenFilterPolicy to grant administrative rights remotely to local users.\n```", "```\nWinRM firewall exception will not work since one of the network connection types on this machine is set to Public. Change the network connection type to either Domain or Private and try again.\n```", "```\n> Get-NetConnectionProfile\nName             : Network 1\nInterfaceAlias   : Ethernet\nInterfaceIndex   : 4\nNetworkCategory  : Public\nIPv4Connectivity : Internet\nIPv6Connectivity : NoTraffic\n```", "```\n> Set-NetConnectionProfile -NetworkCategory Private\n```", "```\n> Enable-PSRemoting -SkipNetworkProfileCheck\n```", "```\n> winrm set winrm/config/service '@{AllowUnencrypted=\"false\"}'\n```", "```\n> Set-Item wsman:\\localhost\\Service\\AllowUnencrypted -Value $false\n```", "```\n> Set-Item wsman:\\localhost\\client\\TrustedHosts -Value 172.29.0.12 -Concatenate -Force\n```", "```\n> Get-Item wsman:\\localhost\\client\\TrustedHosts\n   WSManConfig: Microsoft.WSMan.Management\\WSMan::localhost\\Client\nType            Name             SourceOfValue   Value\n----            ----             -------------   -----\nSystem.String   TrustedHosts                     172.29.0.12\n```", "```\n> $Cert = New-SelfSignedCertificate -CertstoreLocation Cert:\\LocalMachine\\My -DnsName \"PSSec-PC01\"\n> Export-Certificate -Cert $Cert -FilePath C:\\tmp\\cert\n```", "```\n> New-Item -Path WSMan:\\LocalHost\\Listener -Transport HTTPS -Address * -CertificateThumbPrint $Cert.Thumbprint –Force\n```", "```\n> New-NetFirewallRule -DisplayName \"Windows Remote Management (HTTPS-In)\" -Name \"Windows Remote Management (HTTPS-In)\" -Profile Any -LocalPort 5986 -Protocol TCP\n```", "```\n> Get-ChildItem WSMan:\\Localhost\\listener | Where -Property Keys -eq \"Transport=HTTP\" | Remove-Item -Recurse\n```", "```\n> Set-Item WSMan:\\Localhost\\listener\\<ListenerName>\\port -Value <PortNumber>\n```", "```\n> Import-Certificate -Filepath \"C:\\tmp\\cert\" -CertStoreLocation \"Cert:\\LocalMachine\\Root\"\n```", "```\n> $cred = Get-Credential\n> Enter-PSSession -ComputerName PSSec-PC01 -UseSSL -Credential $cred\n```", "```\n> Enter-PSSession -ComputerName PSSec-PC01 -ConfigurationName 'microsoft.powershell32'\n```", "```\n> New-PSSessionConfigurationFile -Path <Path:\\To\\Your\\SessionConfigurationFile.pssc>\n```", "```\n> New-PSSessionConfigurationFile -SessionType RestrictedRemoteServer -Path .\\PSSessionConfig.pssc\n```", "```\n> Register-PSSessionConfiguration -Name PSSessionConfig\nWARNING: Register-PSSessionConfiguration may need to restart the WinRM service if a configuration using this name has recently been unregistered, certain system data structures may still be cached. In that case, a restart of WinRM may be required.\nAll WinRM sessions connected to Windows PowerShell session configurations, such as Microsoft.PowerShell and session configurations that are created with the Register-PSSessionConfiguration cmdlet, are disconnected.\n   WSManConfig: Microsoft.WSMan.Management\\WSMan::localhost\\Plugin\nType            Keys                                Name\n----            ----                                ----\nContainer       {Name=PSSessionConfig}              PSSessionConfig\n```", "```\n> Get-PSSessionConfiguration -Name PSSessionConfig\nName          : PSSessionConfig\nPSVersion     : 5.1\nStartupScript :\nRunAsUser     :\nPermission    : NT AUTHORITY\\INTERACTIVE AccessAllowed, BUILTIN\\Administrators AccessAllowed, BUILTIN\\Remote Management Users AccessAllowed\n```", "```\n> Enter-PSSession -ComputerName PSSEC-PC01 -Authentication Kerberos\n```", "```\n> Enter-PSSession -ComputerName PSSec-PC01\n```", "```\n$cred = Get-Credential -Credential \"PSSEC\\Administrator\"\n```", "```\nEnter-PSSession -ComputerName PSSEC-PC01 -Credential $cred\n```", "```\nEnter-PSSession -ComputerName 172.29.0.12 -Credential $cred\n```", "```\n> Enter-PSSession -ComputerName 172.29.0.10\nEnter-PSSession : Connecting to remote server 172.29.0.10 failed with the following error message : The WinRM client\ncannot process the request. If the authentication scheme is different from Kerberos, or if the client computer is not\njoined to a domain, then HTTPS transport must be used or the destination machine must be added to the TrustedHosts\nconfiguration setting. Use winrm.cmd to configure TrustedHosts. Note that computers in the TrustedHosts list might not\nbe authenticated. You can get more information about that by running the following command: winrm help config. For\nmore information, see the about_Remote_Troubleshooting Help topic.\nAt line:1 char:1\n+ Enter-PSSession -ComputerName 172.29.0.10\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidArgument: (172.29.0.10:String) [Enter-PSSession], PSRemotingTransportException\n    + FullyQualifiedErrorId : CreateRemoteRunspaceFailed\n```", "```\n> winrm set winrm/config/service '@{AllowUnencrypted=\"true\"}'\n```", "```\n> winrm set winrm/config/service/auth '@{Basic=\"true\"}'\n```", "```\n> Restart-Service -Name WinRM\n```", "```\n> winrm set winrm/config/client '@{AllowUnencrypted=\"true\"}'\n```", "```\n> winrm set winrm/config/client/auth '@{Basic=\"true\"}'\n```", "```\n> Restart-Service -Name WinRM\n```", "```\n> $cred = Get-Credential -Credential \"PSSec\"\n> New-PSSession -ComputerName 172.29.0.12 -Authentication Basic -Credential $cred\n```", "```\n> Get-Command -ParameterName ComputerName\nCommandType  Name               Version    Source\n-----------  ----               -------    ------\nCmdlet       Connect-PSSession  3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Enter-PSSession    3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Get-PSSession      3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Invoke-Command     3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       New-PSSession      3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Receive-Job        3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Receive-PSSession  3.0.0.0    Microsoft.PowerShell.Core\nCmdlet       Remove-PSSession   3.0.0.0    Microsoft.PowerShell.Core\n```", "```\nInvoke-Command -ComputerName <Name> -ScriptBlock {<ScriptBlock>}\n```", "```\n> Invoke-Command -ComputerName PSSec-PC01 -ScriptBlock { Restart-Service -Name Spooler -Verbose }\nVERBOSE: Performing the operation \"Restart-Service\" on target \"Print Spooler (Spooler)\".\n```", "```\n> Invoke-Command -ComputerName PSSec-PC01 -FilePath c:\\tmp\\test.ps1\n```", "```\n> Invoke-Command -ComputerName PSSec-PC01,PSSec-PC02 {Restart-Service -Name Spooler}\n```", "```\n$sessions = New-PSSession -ComputerName PSSec-PC01, PSSec-PC02 -Credential $cred\n```", "```\nInvoke-Command –Session $sessions -ScriptBlock { Get-Hotfix -Id 'KB5023773' -ErrorAction SilentlyContinue }\n```", "```\nGet-WindowsUpdate -Install -KBArticleID 'KB5023773'\n```", "```\n    Remove-PSSession -Session $sessions\n    ```", "```\n    Remove-PSSession -id 2\n    ```", "```\n    Get-Item WSMan:\\localhost\\client\\AllowUnencrypted\n    ```", "```\n    Get-Item wsman:\\localhost\\service\\AllowUnencrypted\n    ```", "```\n    Get-Item wsman:\\localhost\\client\\auth\\Basic\n    ```", "```\n    Get-Item wsman:\\localhost\\service\\auth\\Basic\n    ```"]