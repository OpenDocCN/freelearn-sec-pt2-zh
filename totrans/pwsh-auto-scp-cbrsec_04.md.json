["```\n> Import-Module EventList\n> (Get-Module EventList).LogPipelineExecutionDetails = $true\n> (Get-Module EventList).LogPipelineExecutionDetails\nTrue\n```", "```\nImport-Module <Module-Name>\n(Get-Module <Module-Name>).LogPipelineExecutionDetails = $true\n```", "```\n> Invoke-Command -ComputerName PSSec-PC01 -ScriptBlock {Restart-Service -Name Spooler -Verbose}\nVERBOSE: Performing the operation \"Restart-Service\" on target \"Print Spooler (Spooler)\".\n```", "```\nHKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\n```", "```\nNew-Item -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Force\nSet-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Name \"EnableScriptBlockLogging\" -Value 1 -Force\n```", "```\n> $cert = Get-Content C:\\tmp\\PEL_certificate.cer –Raw\n> Enable-ProtectedEventLogging –Certificate $cert\n```", "```\n> Get-WinEvent Microsoft-Windows-PowerShell/Operational | Where-Object Id -eq 4104 | Unprotect-CmsMessage\n```", "```\nHKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription\n```", "```\n> Enable-PSTranscription -OutputDirectory \"C:\\PSLogs\"\n```", "```\n> New-PSSessionConfigurationFile -Path \"$env:userprofile\\Documents\\PSSession.pssc\" -TranscriptDirectory \"C:\\tmp\"\n```", "```\n\\\\server\\share$\\env:computername-$($env:userdomain)-$($env:username)-$(Get-Date Format YYYYMMddhhmmss).txt\n```", "```\n> wevtutil.exe cl Security\n```", "```\nGet-WinEvent -LogName \"Microsoft-Windows-PowerShell/Operational\" -FilterXPath \"*[System[(EventID=4100 or EventID=4101 or EventID=4102 or EventID=4103 or EventID=4104)]]\"\n```", "```\n> $eventLog = @{ ProviderName=\"Microsoft-Windows-PowerShell\"; Id = 4104 }\n> Get-WinEvent -FilterHashtable $eventLog\n```", "```\n> Get-WinEvent Microsoft-Windows-PowerShell/Operational | Where-Object Id -eq 4104\n> Get-WinEvent PowerShellCore/Operational | Where-Object Id -eq 4104\n```", "```\n> powershell.exe -version 2 –command <command>\n```", "```\nDisable-WindowsOptionalFeature -Online -FeatureName MicrosoftWindowsPowerShellV2Root\n```", "```\n> powershell.exe -version 2\nVersion v2.0.50727 of the .NET Framework is not installed and it is required to run version 2 of Windows PowerShell.\n```", "```\n> Get-WindowsOptionalFeature -Online | Where-Object {$_.FeatureName -match \"PowerShellv2\"}\nFeatureName : MicrosoftWindowsPowerShellV2Root\nState       : Enabled\nFeatureName : MicrosoftWindowsPowerShellV2\nState       : Enabled\n```", "```\nGet-WindowsOptionalFeature -Online | Where-Object {$_.FeatureName -match \"PowerShellv2\"} | ForEach-Object {Disable-WindowsOptionalFeature -Online -FeatureName $_.FeatureName -Remove}\n```", "```\n> Get-WindowsOptionalFeature -Online | Where-Object {$_.FeatureName -match \"PowerShellv2\"} | ForEach-Object {Disable-WindowsOptionalFeature -Online -FeatureName $_.FeatureName -Remove}\nPath          :\nOnline        : True\nRestartNeeded : False\nPath          :\nOnline        : True\nRestartNeeded : False\n```", "```\n> Get-WindowsOptionalFeature -Online | Where-Object {$_.FeatureName -match \"PowerShellv2\"}\nFeatureName : MicrosoftWindowsPowerShellV2Root\nState       : Disabled\nFeatureName : MicrosoftWindowsPowerShellV2\nState       : Disabled\n```", "```\nGet-WinEvent -LogName \"Windows PowerShell\" | Where-Object Id -eq 400 | Foreach-Object {\n        $version = [Version] ($_.Message -replace '(?s).*EngineVersion=([\\d\\.]+)*.*','$1')\n        if($version -lt ([Version] \"5.0\")) { $_ }\n}\n```", "```\n> Install-Module EventList\n```", "```\n> Open-EventListGUI\n```", "```\n> Get-BaselineEventList -BaselineName \"MSFT Windows Server 2019 - Domain Controller\"\n```", "```\n> Get-MitreEventList -Identity \"T1039\"\n```", "```\n> Install-Module EventList -Force\n```", "```\n> Get-WinEvent Microsoft-Windows-PowerShell/Operational | Where-Object Id -eq 4104\n```", "```\n> Limit-EventLog -LogName \"Windows PowerShell\" -MaximumSize 4194240KB\n```", "```\n> – Get-ItemProperty -Path  'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Windows PowerShell\\' -Name 'MaxSize' | Select-Object -ExpandProperty MaxSize\n```", "```\n> New-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Windows PowerShell\\' -Name 'MaxSize' -Value 4000MB -PropertyType DWORD -Force\n```"]