["```\n> Get-ChildItem -Path \"HKLM:\\SOFTWARE\\Microsoft\\PowerShell\" -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.Name -like \"*PowerShellEngine*\"}\n```", "```\n> New-ItemProperty -Path HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\ -Name \"HelloWorld\" -Value \"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\HelloWorld.ps1\"\n```", "```\n> New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ -Name \"HelloWorld\" -Value \"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\HelloWorld.ps1\"\n```", "```\n> SecEdit.exe /export /areas USER_RIGHTS /cfg $Env:Temp\\secedit.txt\n```", "```\n> SecEdit.exe /export /mergedpolicy /areas USER_RIGHTS /cfg $Env:Temp\\secedit.txt\n```", "```\n> Get-UserRightsAssignment.ps1 -Path C:\\tmp\\secedit.txt\n```", "```\n\\\\pssec.local\\SYSVOL\\PSSec.local\\Policies\\{B04231D1-A45A-4390-BB56-897DA6B1A910}\\Machine\\Microsoft\\Windows NT\\SecEdit\n```", "```\n> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:<output_file_name> <input_file_name>\n```", "```\n> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:MyProgram.exe MyProgram.cs\n```", "```\n> .\\MyProgram.exe\n```", "```\n$code = @\"\nusing System;\nclass Program {\n    static void Main(string[] args) {\n        Console.WriteLine(\"Hello World!\");\n    }\n}\n\"@\n$code | Out-File -FilePath MyProgram.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:MyProgram.exe MyProgram.cs\n.\\MyProgram.exe\n```", "```\n> C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"C:\\Users\\Administrator\\Documents\\Chapter05\\DirectoryTest.dll\" \"C:\\Users\\Administrator\\Documents\\Chapter05\\DirectoryTest.cs\"\n```", "```\n> $DllPath = \"C:\\Users\\Administrator\\Documents\\Chapter05\\DirectoryTest.dll\"\n> $DllBytes = [System.IO.File]::ReadAllBytes($DllPath)\n> [System.Reflection.Assembly]::Load($DllBytes)\n```", "```\n$signature = @\"\n[DllImport(\"user32.dll\")]\npublic static extern int MessageBoxA(IntPtr hWnd, string text, string caption, uint type);\n\"@\nAdd-Type -MemberDefinition $signature -Name \"User32\" -Namespace \"Win32\" -PassThru\n$null = [Win32.User32]::MessageBoxA([IntPtr]::Zero, 'I just called to say \"Hello World!\" :-) ', 'Hello world', 0)\n```", "```\n$excel = New-Object -ComObject Excel.Application\n$workbook = $excel.Workbooks.Add()\n$worksheet = $workbook.Worksheets.Item(1)\n$worksheet.Cells.Item(1,1) = \"Hello world!\"\n$workbook.SaveAs($env:TEMP + \"\\example.xlsx\")\n$excel.Quit()\n```", "```\n$COMPath = ${Env:\\TEMP} + \"\\COMHijack.dll\"\n$CLSIDString = \"{CDC82860-468D-4d4e-B7E7-C298FF23AB2C}\"\n$RegPath = \"HKCU:\\Software\\Classes\\CLSID\\\" + $CLSIDString + \"\\InprocServer32\"\nNew-Item -Path $RegPath -Force\nNew-ItemProperty -Path $RegPath -Name \"(Default)\" -Value $COMPath -Force\nNew-ItemProperty -Path $RegPath -Name \"ThreadingModel\" -Value \"Apartment\" -Force\n```", "```\n> Get-WmiObject __namespace -Namespace 'root' -List -Recurse | Format-Table __namespace\n```", "```\nGet-CimInstance -ClassName __Namespace -Namespace 'root'\n```", "```\n    (Get-CimClass -ClassName Win32_OperatingSystem).CimClassMethods\n    ```", "```\n    (Get-CimClass -ClassName Win32_OperatingSystem).CimClassProperties\n    ```", "```\nSelect * from __InstanceDeletionEvent within 15 where TargetInstance ISA 'Win32_Service'\n```", "```\nSelect * from __InstanceDeletionEvent within 15 where TargetInstance ISA 'Win32_Service' AND Targetinstance.name='windefend'\n```", "```\n$query = \"Select * from __InstanceDeletionEvent within 15 where TargetInstance ISA 'Win32_Service' AND Targetinstance.name='windefend'\"\n$CimEventDefenderFilter = @{\n    Name = \"MicrosoftDefenderFilter\";\n    Query = $query;\n    QueryLanguage = \"WQL\";\n    EventNamespace = \"\\root\\cimv2\";\n};\n$CimEventDefenderInstance=New-CimInstance -ClassName __EventFilter -Namespace \"Root/SubScription\" -Property $CimEventDefenderFilter\n```", "```\n> Get-CimInstance -Namespace root/subscription -ClassName __EventFilter\n```", "```\n$Message = @(\"%Targetinstance.Name% has been terminated on $env:computername. Current Status: %TargetInstance.Status%\")\n$CimDefenderConsumerProperties = @{\n    Name = 'Windows Defender Service (windefend) was terminated';\n    MachineName = $env:computername;\n    EventID = [uint32]12345;\n    EventType = [uint32]2;\n    SourceName = 'Application';\n    NumberOfInsertionStrings = [uint32]1;\n    InsertionStringTemplates = $Message\n    Category= [uint16]123;\n}\n$CimDefenderEventConsumer = New-CimInstance -ClassName NTEventLogEventConsumer -Namespace 'ROOT/subscription' -Property $CimDefenderConsumerProperties\n```", "```\n> Get-CimInstance -Namespace Root/Subscription -ClassName SMTPEventConsumer\n```", "```\n$CimDefenderBindingProperties=@{\n    Filter = [Ref]$CimEventDefenderInstance\n    Consumer = [Ref]$CimDefenderEventConsumer\n}\n$CimDefenderBinding = New-CimInstance -ClassName __FilterToConsumerBinding -Namespace \"root/subscription\" -Property $CimDefenderBindingProperties\n```", "```\n> Get-CimInstance -Namespace root/Subscription -ClassName __FilterToConsumerBinding\n```", "```\n> Get-CimInstance -Namespace 'ROOT/subscription' -ClassName __EventFilter -Filter \"name='MicrosoftDefenderFilter'\" | Remove-CimInstance\n```", "```\n> Get-CimInstance -Namespace 'ROOT/subscription' -ClassName NTEventLogEventConsumer -Filter \"name='Windows Defender Service (windefend) was terminated'\" | Remove-CimInstance\n```", "```\n> Get-CimInstance -Namespace 'ROOT/subscription' -ClassName __FilterToConsumerBinding -Filter \"Filter = \"\"__eventfilter.name='MicrosoftDefenderFilter'\"\"\" | Remove-CimInstance\n```", "```\n$WritableCimProperties = foreach ($Class in Get-CimClass) {\n    foreach ($Property in $Class.CimClassProperties) {\n        if ($Property.Qualifiers.Name -contains 'Write') {\n            [PSCustomObject]@{\n                CimClassName = $Class.CimClassName\n                PropertyName = $Property.Name\n                Write = $true\n            }\n        }\n    }\n}\n$WritableCimProperties\n```", "```\n$UserAccount = Get-CimInstance -ClassName Win32_UserAccount -Filter \"Name LIKE 'vicvega%'\"\n$UserAccount.Disabled = $false\nSet-CimInstance -InputObject $UserAccount\n```", "```\n> (Get-CimInstance -ClassName Win32_UserAccount -Filter \"Name LIKE 'vicvega%'\").Disabled\n```", "```\n> Get-CimInstance -ClassName win32_group -filter \"name='Administrators'\"\n```", "```\n> Get-CimInstance -Query \"select * from win32_group where name = 'Administrators'\"\n```", "```\n> Get-CimInstance -ClassName win32_process\n```", "```\n> Get-CimInstance -ClassName win32_process | Select-Object ProcessId, Name, CommandLine\n```", "```\n> Get-CimInstance -Query \"select * from win32_useraccount\" | Select-Object -Property *\n```", "```\n> Get-CimInstance -Query \"select * from win32_group\"\n> Get-CimInstance -Query \"select * from win32_groupuser\"\n```", "```\n> $group = Get-CimInstance -ClassName win32_group -filter \"name='Administrators'\"\n> Get-CimAssociatedInstance -InputObject $group -ResultClassName Win32_UserAccount\n```", "```\n> Get-CimInstance -Query \"select * from win32_quickfixengineering\"\n```", "```\n> Get-CimInstance -Query \"select * from Win32_StartupCommand\"\n```", "```\n> rundll32 PowerShdll,main Get-Process\n```", "```\n> nps.exe <powershell single command>\n```"]