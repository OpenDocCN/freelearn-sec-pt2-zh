["```\n> $ExecutionContext.SessionState.LanguageMode = \"ConstrainedLanguage\"\n```", "```\n> $ExecutionContext.SessionState.LanguageMode = \"FullLanguage\".\n```", "```\n> New-PSRoleCapabilityFile -Path .\\Support.psrc\n```", "```\n> New-PSRoleCapabilityFile -Path <path> -ParameterName <values>\n```", "```\n> New-PSRoleCapabilityFile -Path .\\Support.psrc -VisibleCmdlets 'Restart-Service'\n```", "```\nVisibleCmdlets = 'Restart-Service', 'Restart-Computer'\n```", "```\nVisibleCmdlets = 'Get-*'\n```", "```\nVisibleCmdlets = @{ Name = 'Restart-Service'; Parameters = @{ Name = 'Name'; ValidateSet = 'Dns', 'Spooler' }},\n@{ Name = 'Restart-Computer'; Parameters = @{ Name = 'Name'; ValidateSet = 'Confirm', 'Delay', 'Force', 'Timeout' }}\n@{ Name = 'Get-ChildItem'; Parameters = @{ Name = 'Path';  ValidatePattern = '^C:\\\\Users\\\\[^\\\\]+$' }}\n```", "```\nVisibleFunctions = 'Restart-NetAdapter'\n```", "```\nVisibleAliases = 'cd', 'ls'\n```", "```\nVisibleExternalCommands = 'C:\\tmp\\putty.exe', 'C:\\scripts\\myOwnScript.ps1'\n```", "```\nVisibleProviders = 'Registry'\n```", "```\nModulesToImport = @{ModuleName='EventList'; ModuleVersion='2.0.2'}\n```", "```\nScriptsToProcess = 'C:\\Scripts\\MyScript.ps1'\n```", "```\nAliasDefinitions = @{Name='ipc'; Value='ipconfig'; Description='Displays the Windows IP Configuration'; Options='ReadOnly'}\nVisibleAliases = 'ipc'\n```", "```\nVisibleFunctions = 'Restart-PrintSpooler'\nFunctionDefinitions = @{\n    Name        = 'Restart-PrintSpooler'\n    ScriptBlock = {\n        if ((Get-Service -Name 'Spooler').Status -eq 'Running') {\n            Write-Warning \"Attempting to restart Spooler service...\"\n            Restart-Service -Name 'Spooler'\n        }\n        else {\n            Write-Warning \"Attempting to start Spooler service...\"\n            Start-Service -Name 'Spooler'\n        }\n    }\n}\n```", "```\nVariableDefinitions = @{ Name = 'Variable1'; Value = { 'Dynamic' + 'InitialValue' } }, @{ Name = 'Variable2'; Value = 'StaticValue' }\n```", "```\nVariableDefinitions =@{TestShare1 = '$Env:TEMP\\TestShare'; TestShare2 = 'C:\\tmp\\TestShare'}\n```", "```\nEnvironmentVariables = @{Path= '%SYSTEMROOT%\\system32; %SYSTEMROOT%\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\PowerShell\\7\\;C:\\Program Files\\Git\\cmd'}\n```", "```\nTypesToProcess = 'C:\\tmp\\CustomFileTypes.ps1xml'\n```", "```\nFormatsToProcess = 'C:\\tmp\\CustomFormatFile.ps1xml'\n```", "```\nAssembliesToLoad = \"System.Web\",\"FSharp.Compiler.CodeDom.dll\", 'System.OtherAssembly, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n```", "```\nNew-PSSessionConfigurationFile -Path .\\JEA_SessionConfigurationFile.pssc\n```", "```\n> New-PSSessionConfigurationFile -SessionType RestrictedRemoteServer -Path .\\JEA_SessionConfigurationFile.pssc\n```", "```\nTranscriptDirectory = 'C:\\Jea-Transcripts'\n```", "```\n> Enter-PSSession –ComputerName localhost –ConfigurationName ServerOperator -Credential $ServerOperator\n```", "```\nGroupManagedServiceAccount = 'MyJEAgMSA'\n```", "```\nRoleDefinitions = @{\n    'CONTOSO\\JEA_DNS_ADMINS' = @{ RoleCapabilities = 'DnsAdmin', 'DnsOperator', 'DnsAuditor' }\n    'CONTOSO\\JEA_DNS_OPERATORS' = @{ RoleCapabilities = 'DnsOperator', 'DnsAuditor' }\n    'CONTOSO\\JEA_DNS_AUDITORS' = @{ RoleCapabilities = 'DnsAuditor' }\n}\n```", "```\nRequiredGroups = @{ And = 'MFA-logon' }\n```", "```\nRequiredGroups = @{ Or = 'MFA-logon', 'smartcard-logon' }\n```", "```\nRequiredGroups = @{ And = 'elevated-jea', @{ Or = 'MFA-logon', 'smartcard-logon' }}\n```", "```\nMountUserDrive = $true\nUserDriveMaximumSize = 10485760\n```", "```\nCopy-Item -Path .\\myFile.txt -Destination User: -ToSession $ServerOperator\n```", "```\nCopy-Item -Path User:\\access.log -Destination . -FromSession $jeasession\n```", "```\nRegister-PSSessionConfiguration -Path .\\MyJEAConfig.pssc -Name 'JEAMaintenance' -Force\n```", "```\nRestart-Service -name WinRM\n```", "```\nEnter-PSSession –ComputerName <computer> –ConfigurationName <configuration name>\n```", "```\n> $jeasession = New-PSSession –ComputerName <computer> –ConfigurationName <configuration name>\n> Import-PSSession -Session $jeasession -AllowClobber\n```", "```\n> Install-Module ScriptBlockLoggingAnalyzer\n```", "```\n> New-Item -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Force\n> Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Name \"EnableScriptBlockLogging\" -Value 1 -Force\n```"]