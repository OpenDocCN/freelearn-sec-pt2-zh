- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using PowerShell in Azure
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we delve into the strategic utilization of PowerShell to execute
    a comprehensive penetration test on Azure environments. PowerShell, a versatile
    scripting language, empowers penetration testers to analyze Azure’s intricate
    ecosystem, including Identity Management, Role-Based Access Control, Data Storage,
    SQL, Web Services, and more. From gathering detailed information on Azure resources
    to automating complex analyses, this chapter demonstrates how PowerShell is a
    key ally in identifying vulnerabilities, assessing security configurations, and
    fortifying Azure against potential threats. Harness the full potential of PowerShell
    to enhance the efficiency and efficacy of penetration testing in Azure, ensuring
    a robust and resilient cloud security posture.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the main topics to be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Azure
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure architecture and governance
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing Azure
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Networking in Azure
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity Management and Role-Based Access Control
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Data Storage and permissions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure and SQL
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure and key vaults
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure and virtual machines
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure and Web Services
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to Azure
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Azure** is the Microsoft Cloud computing platform. Azure is built around
    the concepts of Identity Management and Role-Based Access Control. Within Azure,
    we have various resources of various types that we can control. At the heart of
    Azure is the **Azure Active Directory**. This is used to perform Identity Management.
    Azure testing can be broken down into the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '**Accessing Azure and reconnaissance**: This concerns accessing the Azure environment
    and starting to profile the Azure Tenancy'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Investigating networks and DNS**: This involved profiling the Azure infrastructure
    to identify what systems have been deployed and how the network infrastructure
    has been configured'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identity Management and Role-Based Access Control**: This is concerned with
    profiling and identifying the weaknesses in the Identity Management deployed within
    the Azure Tenancy'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Examining storage**: This focuses on the analysis and vulnerability identification
    of the Storage Structures used within Azure Tenancy'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual machines**: This focuses on the analysis and vulnerability identification
    of the virtual machines used within Azure Tenancy'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure and SQL**: This concerns identifying and profiling the types of SQL
    systems used within Azure Tenancy'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Key Vaults**: This examines how the key vaults used to store passwords
    for Azure have been configured'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure architecture and governance
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Azure architecture encompasses a comprehensive set of cloud computing services,
    building blocks, and resources designed to facilitate various applications and
    services’ development, deployment, and management. Microsoft Azure provides a
    flexible and scalable platform that supports diverse workloads, from simple web
    applications to complex enterprise solutions. Here’s an overview of key components
    within Azure’s architecture:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '**Global data center presence**: Azure operates a vast network of data centers
    strategically distributed across the globe. This global presence ensures low-latency
    access to services and high availability for applications.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全球数据中心分布**：Azure 运营着一个庞大的数据中心网络，这些数据中心在全球战略性地分布。全球的分布确保了低延迟访问服务并为应用程序提供高可用性。'
- en: '**Regions**: Azure is divided into geographical regions, each comprising multiple
    data centers. The regions are isolated from each other to provide redundancy and
    enable users to deploy resources in proximity to their target audience.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**区域**：Azure 被划分为多个地理区域，每个区域包含多个数据中心。这些区域彼此隔离，以提供冗余并使用户能够将资源部署到靠近目标受众的位置。'
- en: '**Availability zones**: Azure offers availability zones within regions in the
    form of physically separate data centers with independent power, cooling, and
    networking. Deploying resources across availability zones enhances resiliency
    and fault tolerance.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可用性区域**：Azure 在区域内提供可用性区域，以物理隔离的数据中心形式存在，具有独立的电力、冷却和网络。跨可用性区域部署资源可以提高韧性和容错能力。'
- en: '**Resource groups**: Resource groups are logical containers that organize and
    manage related resources within Azure. Grouping resources simplifies management,
    monitoring, and the application of policies.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源组**：资源组是逻辑容器，用于组织和管理 Azure 中的相关资源。将资源分组可以简化管理、监控和策略应用。'
- en: '**Virtual networks**: Azure virtual networks allow users to create private,
    isolated networks within the Azure cloud. They facilitate the connection of resources,
    such as virtual machines and databases, while enabling control over network configurations.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟网络**：Azure 虚拟网络允许用户在 Azure 云中创建私有、隔离的网络。它们便于连接虚拟机、数据库等资源，同时使用户能够控制网络配置。'
- en: '**Virtual Machines** (**VMs**): Azure VMs provide scalable computing power
    in the cloud. Users can deploy and manage VMs running various operating systems
    tailored to their specific application needs.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**虚拟机**（**VMs**）：Azure 虚拟机提供云中可扩展的计算能力。用户可以部署和管理运行各种操作系统的虚拟机，以满足其特定应用需求。'
- en: '**Azure Blob Storage**: Azure Blob Storage is a scalable and secure object
    storage solution for large amounts of unstructured data, such as documents, images,
    and videos. It offers different storage tiers to optimize costs.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Blob 存储**：Azure Blob 存储是一种可扩展且安全的对象存储解决方案，适用于大量非结构化数据，如文档、图像和视频。它提供不同的存储层，以优化成本。'
- en: '**Azure app service**: The Azure app service enables the deployment of web,
    mobile, and API applications without managing the underlying infrastructure. It
    supports various programming languages and frameworks.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 应用服务**：Azure 应用服务使得用户能够在无需管理底层基础设施的情况下部署 Web、移动和 API 应用程序。它支持多种编程语言和框架。'
- en: '**Azure SQL database**: The Azure SQL database is a fully managed relational
    database service that provides high availability, security, and scalability for
    applications requiring structured Data Storage.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure SQL 数据库**：Azure SQL 数据库是一个完全托管的关系型数据库服务，提供高可用性、安全性和可扩展性，适用于需要结构化数据存储的应用程序。'
- en: '**Azure Kubernetes Service** (**AKS**): For containerized applications, Azure
    offers AKS—a managed Kubernetes service. It simplifies the deployment, management,
    and scaling of containerized applications.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Kubernetes 服务**（**AKS**）：对于容器化应用程序，Azure 提供 AKS——一种托管的 Kubernetes 服务。它简化了容器化应用程序的部署、管理和扩展。'
- en: '**Azure Active Directory** (**AAD**): Azure Active Directory is a cloud-based
    Identity and access management service. It provides authentication, authorization,
    and single sign-on capabilities, enhancing security and user management.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Active Directory**（**AAD**）：Azure Active Directory 是一项基于云的身份和访问管理服务。它提供身份验证、授权和单点登录功能，增强安全性和用户管理。'
- en: '**Azure Functions**: Azure Functions allow users to run event-triggered code
    without provisioning or managing servers. It supports serverless computing, enabling
    the efficient execution of small, isolated functions.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Functions**：Azure Functions 允许用户运行事件触发的代码，而无需预配或管理服务器。它支持无服务器计算，实现小规模、独立功能的高效执行。'
- en: '**Azure Security Center**: Azure Security Center provides advanced threat protection
    across all Azure resources. It monitors security configurations, identifies potential
    threats, and provides actionable insights to enhance security posture.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 安全中心**：Azure 安全中心为所有 Azure 资源提供高级威胁保护。它监控安全配置，识别潜在威胁，并提供可操作的洞察，以增强安全态势。'
- en: '**Azure DevOps**: Azure DevOps is a set of development tools and services for
    building, testing, and deploying applications. It includes features such as version
    control, continuous integration, and release management.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure DevOps**：Azure DevOps 是一组用于构建、测试和部署应用程序的开发工具和服务。它包括版本控制、持续集成和发布管理等功能。'
- en: In conclusion, Azure’s architecture provides a robust foundation for building
    and scaling applications in the cloud. With its diverse services, global infrastructure,
    and strong security features, Azure caters to the needs of a wide range of businesses
    and industries, enabling them to innovate and transform their IT landscape.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 总结：Azure 的架构为在云中构建和扩展应用程序提供了强大的基础。凭借其多样化的服务、全球基础设施和强大的安全功能，Azure 满足了广泛企业和行业的需求，使它们能够创新并转型其
    IT 环境。
- en: 'PowerShell plays a crucial role in Azure governance, enabling administrators
    to efficiently manage, enforce policies, and maintain compliance across Azure
    resources. Here’s a detailed explanation with examples of how PowerShell can be
    utilized for governance within Azure:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 在 Azure 治理中起着至关重要的作用，使管理员能够高效地管理、执行策略并保持 Azure 资源的合规性。以下是如何在 Azure
    中利用 PowerShell 进行治理的详细说明和示例：
- en: Azure Policy enforcement
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure 策略强制执行
- en: 'Azure Policy allows you to enforce rules and standards across resources. PowerShell’s
    AzPolicy module provides cmdlets to work with Azure Policy:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 策略允许你在资源上强制执行规则和标准。PowerShell 的 AzPolicy 模块提供了与 Azure 策略交互的 cmdlet：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The PowerShell cmdlet **New-AzPolicyAssignment** is used to create a new policy
    assignment in Azure. The command you provided seems to be creating a new policy
    assignment named “**DenyResourceWithoutTags**” with the display name “**Deny Resources
    Without Tags**”. Here’s a breakdown of the parameters used:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell cmdlet **New-AzPolicyAssignment** 用于在 Azure 中创建新的策略分配。你提供的命令似乎是在创建一个名为
    “**DenyResourceWithoutTags**” 的新策略分配，显示名称为 “**Deny Resources Without Tags**”。以下是所使用的参数的详细说明：
- en: '**Name**: Specifies the name of the policy assignment. In this case, it’s “**DenyResourceWithoutTags**”.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Name**：指定策略分配的名称。在这种情况下，它是 “**DenyResourceWithoutTags**”。'
- en: '**DisplayName**: Specifies the display name for the policy assignment. This
    is the name that will be shown in Azure Portal and other interfaces.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DisplayName**：指定策略分配的显示名称。这是将在 Azure 门户和其他界面中显示的名称。'
- en: '**Scope**: Specifies the scope at which the policy assignment will be applied.
    In this example, it’s set to a subscription-level scope: **(/subscriptions/{subscriptionId})**.
    You need to replace **{subscriptionId}** with the actual subscription ID.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Scope**：指定策略分配将应用的范围。在此示例中，它设置为订阅级别的范围：**(/subscriptions/{subscriptionId})**。你需要将
    **{subscriptionId}** 替换为实际的订阅 ID。'
- en: '**PolicyDefinitionReferenceId**: Specifies the ID of the policy definition
    to be assigned. This references an existing policy definition. The value should
    be in the format **/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionId}**.
    You need to replace **{policyDefinitionId}** with the actual ID of the policy
    definition you want to assign.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PolicyDefinitionReferenceId**：指定要分配的策略定义的 ID。这引用一个现有的策略定义。值应采用 **/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionId}**
    格式。你需要将 **{policyDefinitionId}** 替换为你想要分配的实际策略定义的 ID。'
- en: '**EnforcementMode**: Specifies the enforcement mode for the policy assignment.
    In this case, it’s set to **DoNotEnforce**, which means the policy is created
    but not enforced. This is useful for testing or rolling out policies gradually.
    The possible values for enforcement mode are **Default**, **DoNotEnforce**, and
    **Enforce**.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EnforcementMode**：指定策略分配的强制执行模式。在这种情况下，它设置为 **DoNotEnforce**，意味着策略已创建但未强制执行。这对于测试或逐步推出策略非常有用。强制执行模式的可能值有
    **Default**、**DoNotEnforce** 和 **Enforce**。'
- en: Role-based access control (RBAC)
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于角色的访问控制（RBAC）
- en: 'PowerShell’s AzRole module helps manage RBAC assignments, ensuring proper permissions
    for users or applications:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 的 AzRole 模块有助于管理 RBAC 分配，确保为用户或应用程序提供适当的权限：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Resource tagging
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源标签
- en: 'Enforcing resource tagging enhances organization and cost management. PowerShell
    can be used to automate tagging processes:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 强制执行资源标签有助于增强组织和成本管理。可以使用 PowerShell 自动化标签过程：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Resource locking
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源锁定
- en: 'Prevent the accidental deletion or modification of critical resources by using
    PowerShell to apply resource locks:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 PowerShell 应用资源锁定，防止意外删除或修改关键资源：
- en: '[PRE3]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Azure blueprint deployment
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure 蓝图部署
- en: 'Define and deploy Azure Blueprints, which contain templates for resources,
    policies, and RBAC assignments, ensuring consistent governance:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Compliance reporting
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PowerShell can be used to generate compliance reports, providing insights into
    the adherence of resources to organizational policies:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In summary, PowerShell in Azure governance empowers administrators to automate
    policy enforcement, manage access control, implement resource tagging, apply locks,
    deploy blueprints, and generate compliance reports. This ensures a well-organized,
    secure, and compliant Azure environment aligned with organizational standards.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Accessing Azure
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our goal in this section is to describe how PowerShell can be used to connect
    a query with a resource within Azure.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Install and import the Azure PowerShell module
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before diving into reconnaissance, installing and importing the Azure PowerShell
    module is essential. This module provides cmdlets designed explicitly for interacting
    with Azure resources:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Authenticate and connect to Azure
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Authenticate and connect to your Azure subscription to access the resources
    within the environment:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Once we have connected to an Azure Tenancy, we can query it to ensure it is
    correct:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Networking in Azure
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Our goal in this section is to describe how PowerShell can be used with Azure
    to perform network reconnaissance and profiling as part of a penetration test.
    Our goal is to use this information to construct a network map. Once we have a
    public IP address and name, we can start to use nslookup to explore the type of
    DNS services:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'From the analysis of the DNS names, we can identify the type of service. The
    following table lists the available DNS suffixes:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '| **DNS Suffix** | **Associated** **Azure Service** |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
- en: '| file.core.windows.net | Storage accounts – Files |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
- en: '| blob.core.windows.net | Storage accounts – Blobs |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
- en: '| azurewebsites.net | App Service and Functions App |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
- en: '| scm.azurewebsites.net | App Services – Management |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
- en: '| database.windows.net | Databases – MSSQL |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
- en: '| documents.azure.com | Databases – Cosmos DB |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
- en: '| cloudapp.azure.com | Customer – Assigned public IP DNS |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
- en: '| vault.azure.net | Key Vault |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
- en: '| azurecontainer.io | Container instances |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
- en: '| azurecr.io | Container registry |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
- en: Table 12.1 – List of available DNS suffixes
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Resource discovery
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Begin by discovering Azure resources using the **Get-AzResource** cmdlet. This
    provides information about various resources, including virtual machines, databases,
    and networking components:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Virtual network enumeration
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To understand the network structure, use the **Get-AzVirtualNetwork** cmdlet.
    This retrieves details about virtual networks, including subnets and associated
    resources:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Subnet analysis
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Dig deeper into subnet configurations within virtual networks to identify IP
    address ranges and the associated resources:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Network security group exploration
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Examine **Network Security Groups** (**NSGs**) using **Get-AzNetworkSecurityGroup**.
    NSGs act as firewalls, controlling traffic to and from resources:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Public IP address enumeration
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公共 IP 地址枚举
- en: 'Identify the public IP addresses associated with resources to understand potential
    external-facing points:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 识别与资源关联的公共 IP 地址，以了解潜在的外部连接点：
- en: '[PRE14]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Azure Active Directory (AAD) reconnaissance
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure Active Directory（AAD）侦察
- en: 'Understand the Identity landscape using AAD commands. This includes retrieving
    information about users, groups, and applications. The **Get-AzureADUSer** command
    retrieves users from the AAD (Entra):'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AAD 命令了解身份管理情况。这包括检索有关用户、组和应用程序的信息。**Get-AzureADUser** 命令从 AAD（Entra）中检索用户：
- en: '[PRE15]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Service principal enumeration
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务主体枚举
- en: 'Identify service principals, which are used for authenticating Azure services,
    by using **Get-AzADServicePrincipal**:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Get-AzADServicePrincipal** 来识别服务主体，服务主体用于验证 Azure 服务：
- en: '[PRE16]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Constructing the network map
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建网络图
- en: 'With the collected information, you can start building a network map. Use tools
    such as Graphviz to visualize the relationships between different resources, subnets,
    and security groups:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 利用收集到的信息，你可以开始构建网络图。使用如 Graphviz 等工具可视化不同资源、子网和安全组之间的关系：
- en: '[PRE17]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: After generating the DOT file, you can use Graphviz tools to convert it into
    a visual representation, providing a comprehensive network map.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 生成 DOT 文件后，可以使用 Graphviz 工具将其转换为可视化表示，提供全面的网络图。
- en: PowerShell and Azure cmdlets offer penetration testers a robust toolkit for
    network reconnaissance and profiling in Azure environments. You can construct
    a detailed network map by collecting information about resources, virtual networks,
    security configurations, and Identity components. This map is valuable for understanding
    the Azure landscape, identifying potential attack surfaces, and making informed
    decisions during a penetration test. Always ensure proper authorization and adhere
    to ethical guidelines when conducting penetration tests in any environment.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 和 Azure cmdlets 为渗透测试人员提供了一个强大的工具集，用于在 Azure 环境中进行网络侦察和画像分析。通过收集资源、虚拟网络、安全配置和身份组件的信息，可以构建详细的网络图。这个图对于理解
    Azure 环境、识别潜在攻击面以及在渗透测试中做出明智决策至关重要。在任何环境中进行渗透测试时，始终确保获得适当授权，并遵守道德准则。
- en: Identity Management and Role-Based Access Control
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 身份管理和基于角色的访问控制
- en: Penetration testing involves assessing the security of a system, and PowerShell
    is a valuable tool for analyzing **Identity Management** (**IDM**) and **Role-Based
    Access Control** (**RBAC**) in Azure environments. With its extensive set of cmdlets,
    PowerShell allows penetration testers to gather information, identify potential
    vulnerabilities, and simulate scenarios to evaluate the security posture of an
    Azure environment.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试涉及评估系统的安全性，PowerShell 是分析 Azure 环境中 **身份管理**（**IDM**）和 **基于角色的访问控制**（**RBAC**）的有价值工具。通过其丰富的
    cmdlets 集，PowerShell 使渗透测试人员能够收集信息、识别潜在漏洞，并模拟场景来评估 Azure 环境的安全态势。
- en: Gathering information about users and Identity Management
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收集关于用户和身份管理的信息
- en: 'PowerShell can retrieve detailed information about users and their attributes
    AAD. The **Get-AzADUser** cmdlet is a powerful tool for this task:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 可以检索关于用户及其属性的详细信息。**Get-AzADUser** cmdlet 是执行此任务的强大工具：
- en: '[PRE18]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This command fetches information such as display name, user principal name,
    user type, and object ID for all users in Azure AD. Penetration testers can use
    this data to identify privileged accounts and potential targets for exploitation.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令获取 Azure AD 中所有用户的显示名称、用户主体名称、用户类型和对象 ID 等信息。渗透测试人员可以利用这些数据识别特权账户和潜在的攻击目标。
- en: Exploring RBAC assignments
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 RBAC 分配
- en: 'PowerShell facilitates the examination of RBAC assignments, enabling penetration
    testers to understand who has access to what resources. The **Get-AzRoleAssignment**
    cmdlet retrieves information about role assignments:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 便于检查 RBAC（基于角色的访问控制）分配，帮助渗透测试人员了解谁可以访问哪些资源。**Get-AzRoleAssignment**
    cmdlet 用于检索角色分配的相关信息：
- en: '[PRE19]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This command displays the display name, sign-in name, and role definition name
    for each role assignment within the specified subscription. It helps testers identify
    users with elevated privileges and understand the overall RBAC configuration.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令显示每个角色分配的显示名称、登录名称和角色定义名称，帮助测试人员识别具有提升权限的用户，并理解整体的 RBAC 配置。
- en: Reviewing access control settings for resources
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查资源的访问控制设置
- en: 'PowerShell can review access control settings to assess the effectiveness of
    RBAC configurations for specific resources. The **Get-AzRoleDefinition** cmdlet
    provides details about built-in roles and their permissions:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This command fetches information about the “**Contributor**” role, including
    its name, description, and the actions it permits. Penetration testers can use
    this information to evaluate the impact of specific role assignments and identify
    potential security risks.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Modifying RBAC assignments for simulation
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PowerShell allows penetration testers to simulate scenarios by modifying RBAC
    assignments. The **New-AzRoleAssignment** cmdlet can be used to create temporary
    assignments for testing purposes:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This command assigns the “**Reader**” role to a specific user for the specified
    subscription. Testers can use this capability to assess the impact of changes
    to RBAC configurations without affecting the production environment.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Automating Identity Management and RBAC analysis
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PowerShell scripts can be written to automate the analysis of Identity Management
    and RBAC. For example, a script could iterate through users and their roles, generate
    reports, and highlight anomalies or potential security issues:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This script iterates through all users, retrieves their role assignments, and
    outputs relevant information. Automation can significantly enhance the efficiency
    of the penetration testing process.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: PowerShell is an invaluable tool for penetration testers when analyzing Identity
    Management and RBAC in Azure environments. By leveraging its capabilities, testers
    can gather information, evaluate configurations, and simulate scenarios to effectively
    identify and address security vulnerabilities.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: Azure Data Storage and permissions
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'PowerShell is a powerful tool for penetration testers to analyze Identity and
    Data Storage permissions in Azure environments. In a penetration test scenario,
    understanding and scrutinizing Azure Data Storage and associated permissions is
    crucial for identifying potential security vulnerabilities. Here’s how PowerShell
    can be employed for this purpose:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing Azure Data Storage
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure offers various storage services, such as Blob Storage, Table Storage,
    and Queue Storage. PowerShell can gather information about these services, configurations,
    and data:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: This script lists all Azure storage accounts and their associated containers,
    providing a starting point for penetration testers to analyze Data Storage configurations.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Investigating data permissions
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PowerShell enables testers to examine permissions and access the control settings
    associated with Azure Data Storage. Understanding who has access to the data and
    what level of permissions they possess is critical for identifying potential security
    risks:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This script retrieves and displays the **Access Control Lists** (**ACLs**) for
    a specific Blob Container, providing insights into who has access and what level
    of access they have.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Checking RBAC settings
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Azure uses RBAC to manage access to resources, including Data Storage. PowerShell
    can be employed to review RBAC assignments and configurations:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 使用 RBAC 管理对资源的访问，包括数据存储。可以利用 PowerShell 来审查 RBAC 的分配和配置：
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: This script provides information about the role assignments associated with
    the specified storage account, helping testers identify users with elevated privileges.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本提供有关指定存储账户的角色分配的信息，帮助测试人员识别具有提升权限的用户。
- en: Analyzing data security with Azure Key Vault
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Azure Key Vault 分析数据安全
- en: 'Azure Key Vault is often used to securely store and manage sensitive information,
    such as storage account keys. PowerShell can interact with Azure Key Vault and
    assess the security of key management:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Key Vault 经常用于安全存储和管理诸如存储账户密钥之类的敏感信息。PowerShell 可以与 Azure Key Vault 交互，并评估密钥管理的安全性：
- en: '[PRE26]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This script fetches and displays secrets stored in the specified Azure Key Vault,
    allowing testers to identify sensitive information that may impact the security
    of Azure Data Storage.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本获取并显示存储在指定 Azure Key Vault 中的机密，允许测试人员识别可能影响 Azure 数据存储安全的敏感信息。
- en: Automating Data Storage and permissions analysis
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化数据存储和权限分析
- en: 'PowerShell scripts can be written to automate the analysis of Azure Data Storage
    and the associated permissions. These scripts can iterate through storage accounts,
    containers, and access settings, providing comprehensive insights into the security
    landscape:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 可以编写 PowerShell 脚本来自动化分析 Azure 数据存储及其相关权限。这些脚本可以迭代存储账户、容器和访问设置，提供对安全景观的全面洞察：
- en: '[PRE27]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This script automates retrieving and analyzing information about all Azure storage
    accounts, streamlining the penetration testing workflow.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本自动检索和分析所有 Azure 存储账户的信息，简化渗透测试工作流程。
- en: In conclusion, PowerShell proves to be a versatile and efficient tool for penetration
    testers when analyzing Identity and Data Storage permissions in Azure. By leveraging
    its capabilities, testers can gather information, assess configurations, and identify
    the potential security risks associated with Azure Data Storage. Automation further
    enhances the effectiveness of penetration testing, allowing for a thorough examination
    of Azure resources in a scalable and efficient manner.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，PowerShell 在分析 Azure 中的身份和数据存储权限时证明了其多功能性和高效性。通过利用其功能，测试人员可以收集信息、评估配置，并识别与
    Azure 数据存储相关的潜在安全风险。自动化进一步增强了渗透测试的效果，允许以可扩展和高效的方式彻底检查 Azure 资源。
- en: Azure and SQL
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 和 SQL
- en: PowerShell is a powerful tool for penetration testers to analyze the Identity
    and SQL components within Azure environments. Azure Identity services, such as
    AAD and SQL databases, are crucial in securing and managing access to resources.
    Here’s how PowerShell can be employed for analyzing Identity in Azure and SQL
    in Azure during a penetration test.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell 是渗透测试人员分析 Azure 环境中的身份和 SQL 组件的强大工具。Azure 身份服务，如 AAD 和 SQL 数据库，在安全和管理访问资源方面至关重要。以下是
    PowerShell 在渗透测试期间用于分析 Azure 中的身份和 Azure 中的 SQL 的方法。
- en: Analyzing Azure Identity
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析 Azure 身份
- en: 'The following are the steps involved:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是涉及的步骤：
- en: 'Retrieving user information: PowerShell can fetch information about users in
    Azure Active Directory, providing insights into potential targets for exploitation:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检索用户信息：PowerShell 可以获取 Azure Active Directory 中关于用户的信息，提供潜在攻击目标的见解：
- en: '[PRE28]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This command fetches details such as display name, user principal name, user
    type, and object ID for all users in Azure AD. Penetration testers can analyze
    this data to identify privileged accounts or potential attack points.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令获取 Azure AD 中所有用户的显示名称、用户主体名称、用户类型和对象 ID 的详细信息。渗透测试人员可以分析这些数据，以识别特权账户或潜在攻击点。
- en: 'Examining service principals: Service principals represent non-human accounts
    that are often used for automation tasks. PowerShell allows testers to investigate
    service principals and their permissions:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查服务主体：服务主体代表通常用于自动化任务的非人类账户。PowerShell 允许测试人员调查服务主体及其权限：
- en: '[PRE29]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This command lists service principals, providing details about their display
    names, service principal names, application IDs, and object types. Testers can
    scrutinize these details to identify potential security risks.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此命令列出服务主体，提供有关其显示名称、服务主体名称、应用程序 ID 和对象类型的详细信息。测试人员可以仔细审查这些细节，以识别潜在的安全风险。
- en: Analyzing Azure SQL
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析 Azure SQL
- en: 'The following are the steps involved:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是涉及的步骤：
- en: 'Retrieving SQL server information: PowerShell enables testers to gather information
    about Azure SQL servers, including their configurations and associated databases:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This command lists details such as SQL server name, resource group, location,
    and version. Testers can use this information to assess the SQL server’s configuration
    and potential security risks.
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Examining database permissions: PowerShell can analyze permissions within Azure
    SQL databases, helping testers identify users with elevated privileges:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This script retrieves information about Active Directory administrators for
    a specific SQL database. It provides details such as display and sign-in names,
    helping testers identify users with administrative roles.
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Auditing SQL database activity: PowerShell can enable and review auditing settings
    for Azure SQL databases, helping testers track and analyze database activity:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This command enables auditing for successful and failed database authentications.
    Testers can then review audit logs to analyze user activity.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Automating Identity and SQL analysis
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PowerShell scripts can automate the analysis of Azure Identity and SQL components.
    These scripts can be iterated through users, service principals, SQL servers,
    and databases, providing a comprehensive overview of the security landscape.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'In summary, PowerShell proves to be an indispensable tool for penetration testers
    when analyzing Identity in Azure and SQL in Azure. By utilizing its capabilities,
    testers can gather information, scrutinize configurations, and identify the potential
    security risks associated with Azure Identity services and SQL databases. Automation
    further streamlines the penetration testing process, allowing for a thorough examination
    of Azure resources in a scalable and efficient manner. Here’s how you can leverage
    PowerShell for testing Azure and Key Vaults:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure Resource Management**: PowerShell provides cmdlets to interact with
    Azure resources, allowing you to test resource provisioning, configuration, and
    management. For instance, you can use cmdlets such as **New-AzResourceGroup**,
    **New-AzStorageAccount**, and **New-AzVM** to create resource groups, storage
    accounts, and virtual machines, respectively. You can then validate if the resources
    are created correctly using cmdlets such as **Get-AzResource**.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Key Vault management**: PowerShell offers cmdlets for managing Azure
    Key Vaults, enabling you to test access policies, key management, and secrets.
    For example, you can use **New-AzKeyVault**, **Set-AzKeyVaultAccessPolicy**, and
    **Set-AzKeyVaultSecret** to create a Key Vault, set access policies, and store
    secrets, respectively. You can verify the existence of secrets and keys using
    **Get-AzKeyVaultSecret** and **Get-AzKeyVaultKey**.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing Azure Functions with PowerShell**: Azure Functions can be tested
    and managed using PowerShell scripts. You can use the **New-AzFunctionApp** cmdlet
    to create a new Function App and **Publish-AzWebapp** to deploy your function
    code. Then, you can test the function by triggering it with sample input data
    and validating the output.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration testing Azure APIs**: PowerShell can be utilized for the integration
    testing of Azure APIs. By using cmdlets such as **Invoke-RestMethod**, you can
    make HTTP requests to Azure REST APIs and validate responses. For example, you
    can test Azure resource manager APIs by sending requests to manage Azure resources
    programmatically.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated testing of Azure Policies**: PowerShell scripts can be employed
    to test Azure Policies. You can use cmdlets such as **New-AzPolicyDefinition**
    to define policies, **Test-AzPolicyAssignment** to evaluate policy compliance,
    and **Get-AzPolicyEvent** to retrieve policy evaluation results.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure and key vaults
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: PowerShell is a powerful scripting language and command line shell that can
    be instrumental in analyzing Azure resources and Key Vaults during a penetration
    test. Azure services, such as **Azure Resource Manager** (**ARM**) and Azure Key
    Vault, are critical components that store sensitive information. Here’s how PowerShell
    can be employed to analyze Azure and Key Vaults in Azure during penetration testing.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing Azure resources
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the steps involved:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: 'Retrieving information about Azure resources:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell can retrieve detailed information about various Azure resources,
    including virtual machines, storage accounts, and networking components:'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: This command lists the virtual machines in a specified resource group, displaying
    details such as VM name, resource group, location, and power state. Penetration
    testers can analyze this information to identify potential targets for exploitation.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Examining **Network Security Groups** (**NSGs**) rules:'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Network Security Groups control inbound and outbound traffic to Azure resources.
    PowerShell enables testers to review NSGs rules for potential security risks:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This script fetches and displays inbound NSGs rules for a specific subnet, providing
    insights into the configured security policies.
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Analyzing Azure Key Vaults
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the steps involved:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: 'Retrieving Key Vault secrets:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell can retrieve and analyze the secrets stored in Azure Key Vaults,
    helping testers identify sensitive information that may impact security:'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: This command fetches and displays details about secrets in the specified Azure
    Key Vault, including their name, version, and whether they are enabled. Penetration
    testers can use this information to assess the security of stored secrets.
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Auditing Key Vault access:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell enables testers to audit access to Key Vaults, providing insights
    into who accessed the Key Vault and when:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This command enables various security features, including auditing, for an Azure
    Key Vault. Testers can then review audit logs to analyze access patterns.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Automating the analysis of Azure resources and Key Vaults
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PowerShell scripts can automate the Azure resources and Key Vaults analysis.
    These scripts can iterate through various resource types, Key Vaults, and configurations,
    providing comprehensive insights into the security landscape.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, PowerShell is a valuable tool for penetration testers when analyzing
    Azure resources and Key Vaults. By leveraging its capabilities, testers can gather
    information, scrutinize configurations, and identify potential security risks
    associated with Azure services and stored secrets. Automation further streamlines
    the penetration testing process, enabling a thorough examination of Azure resources
    and Key Vaults in a scalable and efficient manner.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Azure and virtual machines
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The basic method that Azure uses to develop a service is that of a virtual
    machine. We can query an Azure Tenancy to identify all associated VM machines.
    By using the **Get-AzVM** command, we can get a list of all the VM machines associated
    with the tenancy:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We can use the **Get-AzVM** command to query the virtual machines by name and
    by location as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Once we know the names of all the virtual machines within a tenancy, we can
    query the tenancy and extract the public IP address for a virtual machine. We
    achieve this as follows. Then, once we have identified all public IP addresses
    associated with a tenancy, we can start to attack/probe these IP addresses:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Once we have identified the IP addresses that we can use to access Microsoft
    Azure, we can start to make use of the various features that it provides.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Azure and Web Services
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'PowerShell is a versatile tool for penetration testers to analyze Azure resources
    and Web Services as part of a comprehensive security assessment. Azure, Microsoft’s
    cloud computing platform, hosts a wide range of services, and penetration testers
    can leverage PowerShell to assess the security of these services. Here’s a detailed
    guide on how PowerShell can be utilized for analyzing Azure resources and Web
    Services during a penetration test:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing Azure resources
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the steps involved:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: 'Retrieving information about Azure resources:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell can gather information about various Azure resources, such as virtual
    machines, storage accounts, and databases:'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: This command fetches details such as VM name, resource group, location, and
    power state. It provides insights into the current state of virtual machines,
    helping penetration testers identify potential targets.
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Analyzing storage accounts:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell allows testers to examine storage accounts and associated configurations:'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This script lists storage accounts along with details such as account name,
    resource group, location, and account type. It aids testers in assessing the security
    posture of Azure Storage.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Investigating Azure databases:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For databases hosted in Azure, PowerShell can provide information on their
    configurations and settings:'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This command retrieves details such as database name, collation, edition, and
    service objective. Testers can use this information to assess the security configurations
    of Azure SQL databases.
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Analyzing Web Services in Azure
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the steps involved:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'Retrieving information about Azure App Services:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Azure App Services host web applications and APIs. PowerShell allows testers
    to fetch details about these services:'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This command lists Azure App Services, including details such as service name,
    resource group, location, and default hostname. It provides insights into the
    web applications hosted in Azure.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Analyzing web application configurations:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'PowerShell can be used to retrieve configurations and settings for web applications
    hosted on Azure App Services:'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: This script fetches the site configuration for a specific web application, including
    the settings related to authentication, CORS, and other security-related parameters.
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Investigating Azure Functions:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Azure Functions provide serverless computing capabilities. PowerShell can help
    testers analyze the configurations of Azure Functions:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This command lists Azure Functions, providing details such as function app name,
    resource group, location, and kind. Testers can use this information to assess
    serverless components.
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Automating the analysis of Azure resources and Web Services
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PowerShell scripts can be written to automate the analysis of Azure resources
    and Web Services. Automation enhances efficiency and allows penetration testers
    to scale their assessments.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: In summary, by leveraging PowerShell capabilities, testers can gather detailed
    information, scrutinize configurations, and identify any potential security risks
    associated with Azure services and hosted web applications. Automation further
    streamlines the penetration testing process, enabling a thorough examination of
    Azure resources and Web Services in a scalable and efficient manner.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored the pivotal role of PowerShell in conducting a
    penetration test on Azure. By leveraging PowerShell’s capabilities, we navigated
    through Azure’s multifaceted landscape, dissecting Identity Management, Role-Based
    Access Control, Data Storage, SQL, and Web Services. By employing PowerShell scripts,
    testers gained granular insights into Azure resources, executed automated analyses,
    and identified potential security vulnerabilities. The chapter emphasized the
    importance of cross-service analysis and showcased PowerShell’s efficiency in
    fortifying Azure against cyber threats.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: With this comprehensive exploration, you are equipped to harness PowerShell’s
    prowess for effective penetration testing, ensuring a resilient and secure Azure
    environment.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
