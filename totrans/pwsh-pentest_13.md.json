["```\n # List all Amazon S3 buckets\naws s3 ls\n```", "```\n # Install AWS Tools for PowerShell module\nInstall-Module -Name AWSPowerShell\n# Configure AWS credentials\nSet-AWSCredential -AccessKey AKIAIOSFODNN7EXAMPLE -SecretKey wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n```", "```\n # List all EC2 instances\nGet-EC2Instance -Region us-east-1\n```", "```\n # Get details of an IAM role\nGet-IAMRole -RoleName \"MyRole\"\n```", "```\n # List security groups and their inbound rules\nGet-EC2SecurityGroup | Select-Object GroupName, IpPermissions\n```", "```\n # List all Lambda functions\nGet-LMFunction -FunctionName <String>\n```", "```\n # Search CloudTrail logs for specific events\nFind-CTEvent -StartTime (Get-Date).AddDays(-1) -EndTime (Get-Date)\n```", "```\n # Validate IAM credential security\nTest-AWSSecureStoredCredentials\n```", "```\n Get-Content ./Data.json | convert-From-JSON\n```", "```\n # List all VPCs\nGet-EC2Vpc\n```", "```\n # List all subnets in a VPC\nGet-EC2Subnet -VpcId \"vpc-snowcap-9827162\"\n```", "```\n # List security groups and their inbound rules\nGet-EC2SecurityGroup | Select-Object GroupName, IpPermissions\n```", "```\n # List NACLs and associated rules\nGet-EC2NetworkAcl\n```", "```\n # List all Elastic Load Balancers\nGet-ELBLoadBalancer\n```", "```\n # Get route table information for a subnet\nGet-EC2RouteTable -AssociationId \"rtbassoc-0123456789abcdef0\"\n```", "```\n # List VPN connections\nGet-EC2VpnConnection\n```", "```\n # List Direct Connect gateways\nGet-DCGateway\n```", "```\n # Enable VPC Flow Logs\nSet-EC2FlowLog -ResourceId \"vpc-12345678\" -TrafficType ALL -LogDestination \"arn:aws:logs:us-east-1:123456789012:log-group:my-log-group\"\n```", "```\n # List hosted zones in Route 53\nGet-R53HostedZoneList\n```", "```\n # List all S3 buckets\nGet-S3Bucket\n```", "```\n # List all S3 buckets\nGet-S3Bucket\n```", "```\n # Get the policy for a specific S3 bucket\nGet-S3BucketPolicy -BucketName \" snowcapcyber-bucket\"\n```", "```\n # Get ACLs for an S3 bucket\nGet-S3ACL -BucketName \"snowcapcyber-bucket\"\n```", "```\n # List objects in an S3 bucket\nGet-S3Object -BucketName \" snowcapcyber-bucket \"\n# Get metadata for a specific object\nGet-S3ObjectMetadata -BucketName \"snowcapcyber-bucket \" -Key \"snowcapxyber-object.txt\"\n```", "```\n # Download an object from S3\nRead-S3Object -BucketName \"snowcapcyber-bucket\" -Key \"example-object.txt\" -File \"local-file.txt\"\n```", "```\n # Check if versioning is enabled for an S3 bucket\nGet-S3BucketVersioning -BucketName \"snowcapcyber-bucket\"\n```", "```\n # Get server-side encryption configuration for an S3 bucket\nGet-S3BucketEncryption   -BucketName \"snowcapcyber-bucket\"\n```", "```\n # Get logging configuration for an S3 bucket\nGet-S3BucketLogging -BucketName \"snowcapcyber-bucket\"\n```", "```\n # Check replication status for an S3 bucket\nGet-S3BucketReplication -BucketName \"snowcapcyber-bucket\"\n```", "```\n # Get CORS configuration for an S3 bucket\n# Install and import the AWS Tools for PowerShell module if you haven't already\nInstall-Module -Name AWSPowerShell.NetCore -Force -AllowClobber\nImport-Module AWSPowerShell.NetCore\n# Set your AWS credentials\nSet-AWSCredential -AccessKey YourAccessKey -SecretKey YourSecretKey -StoreAs MyProfile\n# Set the name of your S3 bucket\n$bucketName = \" snowcapcyber-bucket \"\n# Fetch CORS configuration for the specified bucket\n$corsConfiguration = Get-S3CORSConfiguration Get-S3BucketCors -BucketName $bucketName\n# Display CORS configuration\n$corsConfiguration\n```", "```\n # Get Intelligent-Tiering configuration for an S3 bucket\nGet-S3BucketIntelligentTiering -BucketName \"snowcapcyber-bucket\"\n```", "```\n # Get tags for an S3 bucket\nGet-S3BucketTagging-BucketName \"snowcapcyber-bucket\"\n```", "```\n Get-RDSDBInstance\n```", "```\n # Get details of a specific RDS instance\nGet-RDSDBInstance -DBInstanceIdentifier \"my-database-instance\"\n```", "```\n # List security groups associated with an RDS instance\nGet-RDSDBSecurityGroup -DBInstanceIdentifier \"my-database-instance\"\n```", "```\n # Get IAM database authentication status for an RDS instance\nGet-RDSDBInstance -DBInstanceIdentifier \"my-database-instance\" | Select-Object -ExpandProperty IAMDatabaseAuthenticationEnabled\n```", "```\n # List all RDS snapshots\nGet-RDSDBSnapshot\n```", "```\n # List Amazon Aurora clusters\nGet- RDSDBCluster\n```", "```\n # List RDS parameter groups\nGet-RDSDBParameterGroup\n```", "```\n # Get events for a specific RDS instance\nGet-RDSDBEvents -DBInstanceIdentifier \"my-database-instance\"\n```", "```\n # Get encryption details for an RDS instance\nGet-RDSDBInstance -DBInstanceIdentifier \"my-database-instance\" | Select-Object -ExpandProperty StorageEncrypted\n```", "```\n # List log files for a specific RDS instance\nGet-RDSDBLogFiles -DBInstanceIdentifier \"my-database-instance\"\n```", "```\n # Get connection pooling configuration for an RDS instance\nGet-RDSDBInstance -DBInstanceIdentifier \"my-database-instance\" | Select-Object -ExpandProperty ConnectionPoolConfigurationInfo\n```", "```\n # List security groups and their rules\nGet-EC2SecurityGroup | Select-Object GroupName, IpPermissions\n```", "```\n # List IAM users and their policies\nGet-IAMUser | Get-IAMUserPolicy\n```", "```\n # List KMS keys\nGet-KMSKey\n```", "```\n # Search CloudTrail logs for specific events\nFind-CTEvent -StartTime (Get-Date).AddDays(-1) -EndTime (Get-Date)\n```", "```\n # List GuardDuty findings\nGet-GDFinding -DetectorId <String>\n```", "```\n # List Amazon Inspector findings\nGet-INSFindingList\n```", "```\n # Get ACLs for an S3 bucket\nGet-S3BucketAcl -BucketName \"snowcapcyber-bucket\"\n```", "```\n # List NACLs and their rules\nGet-EC2NetworkAcl | Select-Object NetworkAclId, Entries\n```", "```\n # List all ECR repositories\nGet-ECRRepository\n```", "```\n # Get details of a Docker image\ndocker inspect <image_id>\n```", "```\n # Get details of an ECS task definition\nGet-ECSTaskDefinition -TaskDefinition \"my-task-definition\"\n```", "```\n # List EKS clusters\nGet-EKSCluster\n```", "```\n # Validate kubeconfig file\nkubectl config view --kubeconfig=<path_to_kubeconfig>\n```", "```\n # List ECS services in a cluster\nGet-ECSService -Cluster \"my-cluster\"\n```", "```\n # List Kubernetes pods\nkubectl get pods --namespace=<namespace>\n```", "```\n # Scan a Docker image for vulnerabilities using Trivy\ntrivy <image_name>\n```", "```\n # Get logs from an ECS task\nGet-ECSTaskLogs -TaskId \"my-task-id\"\n```", "```\n # List Kubernetes roles and role bindings\nkubectl get roles, rolebindings --namespace=<namespace>\n```", "```\n # Get ECS Container Insights metrics\nGet-ECSContainerInstanceMetric -Cluster \"my-cluster\" -ContainerInstance \"my-instance-id\"\n```", "```\n # List AWS API Gateways\n$apiGateways = Get-AGApi\nforeach ($api in $apiGateways) {\n    Write-Host \"API Name: $($api.name)\"\n    Write-Host \"API ID: $($api.id)\"\n    Write-Host \"Description: $($api.description)\"\n    Write-Host \"Created Date: $($api.createdDate)\"\n    Write-Host \"API Endpoint: $($api.endpointConfiguration.types[0]) $($api.endpointConfiguration.vpcEndpointIds)\"\n    Write-Host \"--------------------------------------------------\"\n}\n```", "```\n # List AWS Lambda functions\nGet-LMFunction -FunctionName <String>\n```", "```\n # List CloudFront distributions\nGet-CFDistribution\n```", "```\n # Get S3 bucket website configuration\nGet-S3BucketWebsite -BucketName \"snowcapcyber-bucket\"\n```", "```\n # List Route 53 DNS records\nGet-Route53ResourceRecordSet -HostedZoneId \"snowcapcyber-hosted-zone-id\"\n```", "```\n # List ACM certificates\nGet-ACMCertificate\n```", "```\n # List ALBs\nGet-ELBLoadBalancer\n```", "```\n # Get details of AWS WAF WebACLs\nGet-WAFWebACL\n```", "```\n # List RDS instances for web application databases\nGet-RDSDBInstance\n```", "```\n # Get WAF logs\nGet-WAFLogs -StartTime (Get-Date).AddDays(-1) -EndTime (Get-Date)\n```", "```\n # List X-Ray traces\nGet-XRayTraceSummaries\n```", "```\n # Retrieve security headers from a web service\nInvoke-RestMethod -Uri \"https://example.com\" -Method Head\n```", "```\n # Check SSL/TLS configuration of a web service\nTest-NetConnection -ComputerName \"example.com\" -Port 443 -InformationLevel \"Detailed\" | Select-Object TLS*\n```", "```\n # Example: PowerShell-based XSS payload\n<script>alert('XSS')</script>\n```", "```\n # Example: SQL injection payload\n' OR '1'='1'; --\n```"]