- en: '*Chapter 2*: Getting Started – Setting Up a Lab Environment'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we start going into the details of how to start ethical hacking, we need
    to configure a couple of things. In this section, we will learn what tools are
    needed to complete this book. Most of the tools we will be using in this book
    are available for free.
  prefs: []
  type: TYPE_NORMAL
- en: We will start by selecting the Python version used in this book. Then, we will
    shift our focus to the **Integrated Development Environments** (**IDEs**) used
    in this book. We will also learn how to set up virtual environments and understand
    how they can be useful. Later, we will dive into selecting **Operating Systems**
    (**OSes**) both for the attacker as well as the target/victim. We will explore
    different OSes and finally settle on the ones we will use in this book. We will
    also test a sample Python script at the end to check that everything is configured
    properly and see whether we are good to go.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll go through the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up VirtualBox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring IDEs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up networking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using virtual environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to complete this chapter, you will need a decent working PC with sufficient
    hard disk space and memory to run two virtual OSes. As a rough estimate, 100 GB
    storage and 8 GB RAM should be sufficient.
  prefs: []
  type: TYPE_NORMAL
- en: 'The source code for the project is located at the following link: [https://github.com/PacktPublishing/Python-Ethical-Hacking](https://github.com/PacktPublishing/Python-Ethical-Hacking).'
  prefs: []
  type: TYPE_NORMAL
- en: Setting up VirtualBox
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As mentioned earlier, we will be configuring our setup for **penetration testing**
    (**pen testing**) in this chapter. The first thing we will need is virtualization
    software. Virtualization software helps us to run a complete OS on top of our
    existing OS. The main advantage of virtualization is that you can run a complete
    OS without needing to buy additional physical hardware, such as a PC, while enjoying
    all the features that come with such hardware. Once we move forward, you will
    understand these advantages in more detail. Here''s a list of popular virtualization
    software:'
  prefs: []
  type: TYPE_NORMAL
- en: '**VMware Workstation Player**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VirtualBox**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Though there are other options available, I recommend using one of these. I
    will be using VirtualBox in this book since it is free. VMware Player is also
    free, but it can't be used commercially without proper licensing.
  prefs: []
  type: TYPE_NORMAL
- en: 'To download VirtualBox, go to the following link: [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).'
  prefs: []
  type: TYPE_NORMAL
- en: 'There you will find the link to download it. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose the VirtualBox installation package for Windows and download it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once downloaded, open the installer and follow the instructions to install it
    on your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The installation process should be fairly simple. During installation, it may
    ask you for permission to install certain drivers. Please allow the installer
    to install these drivers as well.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once installed, the interface should look something like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.1 – VirtualBox interface'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_01.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.1 – VirtualBox interface
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the virtualization software gives us a foundation on which to build
    our lab. Going forward, we'll use this foundation to build the components needed
    to run the lab. Up next, we'll look at OSes and choose and configure what we need.
  prefs: []
  type: TYPE_NORMAL
- en: Installing virtual OSes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will need one OS to be used as an attack machine and one to be used as a
    target machine. In practical cases, most of the time, the attack machine is mostly
    a Linux distribution-based system and the target/victim machine will be a Windows-based
    system. We will use the term target and victim interchangeably throughout this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: Attack machine OS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are a lot of options for a pen testing machine. However, there are a
    few Linux-based distributions that stand out:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parrot OS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are other options as well. However, I recommend using Kali Linux, since
    it's stable and widely used for pen testing. Kali has a lot of tools preconfigured,
    which can save a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To download a virtual image for Kali Linux, go to Kali''s download page: [https://www.kali.org/downloads/](https://www.kali.org/downloads/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s begin the installation process:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Download** section, select **Kali Linux 64-bit VirtualBox**. This is
    a complete image of an already-installed Kali OS, so you will not need to install
    anything:![Figure 2.2 – Kali Linux VirtualBox image
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B14788_02_02.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.2 – Kali Linux VirtualBox image
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The download should take some time depending on your internet speed. Once the
    image is downloaded, simply import the downloaded image into VirtualBox. To import
    the Kali machine, click on the **Import** button in the **Tools** tab, as shown
    in the following screenshot:![Figure 2.3 – Importing the Kali virtual machine
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B14788_02_03.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.3 – Importing the Kali virtual machine
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This will open a dialog box and you can select the **kali machine ova** file
    you just downloaded.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'During boot, you will be asked for the password to log in to the Kali Linux
    system. The default credentials for the image are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](image/Table_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You may need to disable USB 2 support in the settings to properly start the
    machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the system is started, it should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – Kali Linux home screen'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_04.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.4 – Kali Linux home screen
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've set up our attacker machine, let's move on to the machine for
    the victim.
  prefs: []
  type: TYPE_NORMAL
- en: Victim machine OS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the victim machine, we will use Windows 10 as our OS. Here you have two
    options; either you can install a Windows 10 OS from scratch using an ISO file
    or you can download a prebuilt image for VirtualBox. The second option is easier,
    and I recommend using that. However, the downside of this is that it is quite
    large, around 20 GB, and can only be used for 90 days, after which it expires.
    This time should be enough for most purposes, however. If your needs go beyond
    the 90-day period, you can manually install Windows 10 on VirtualBox. There are
    a lot of tutorials available on the internet for this purpose.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s go with the prebuilt option for this chapter. Use the following link
    to download the prebuilt image: [https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/](http://ebay.co.uk).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at how to use this in VirtualBox:'
  prefs: []
  type: TYPE_NORMAL
- en: Once you have downloaded the Windows 10 VirtualBox image, go to VirtualBox and
    click on **Add**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A dialog box will open; select the Windows 10 image you just downloaded.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you performed the steps properly, your Windows 10 should be up and running
    now. The VirtualBox interface for virtual Windows should look like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.5 – Windows virtual machine'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_05.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.5 – Windows virtual machine
  prefs: []
  type: TYPE_NORMAL
- en: 'The topology of our system will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 – Host Windows 10 OS'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_06.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.6 – Host Windows 10 OS
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the virtual OSes are installed, the VirtualBox software will look like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.7 – VirtualBox'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_07.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.7 – VirtualBox
  prefs: []
  type: TYPE_NORMAL
- en: Until now, we have installed the virtual OSes on our host machines. Next, we
    will focus on configuring these machines to our liking so we can use them for
    the remainder of this book. In the next section, we will download and install
    Python 3 on these virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The next thing we will need to set up in this chapter is Python. We will be
    using Python version 3, or **python3**, in this book. Python 3 is a *major* version
    of Python and it is incompatible with the older version 2\. To download Python,
    go to [https://www.python.org/](https://www.python.org/) and download the latest
    version. At the time of writing, Python 3.8 is the recommended version; however,
    every Python version above 3.2 should be fine for this book. The 64-bit version
    of Python is recommended. I will be assuming that you are using Windows as the
    main OS; however, the code mentioned in this book should work on Linux and macOS
    as well since we will be running virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The procedure for installing Python on Windows is fairly simple. Open the Windows
    10 virtual machine you just installed in the *Installing virtual OSes* section.
    Note that from now on, most of the work will be done on these virtual machines
    and not the guest OS hosting these virtual machines. During installation, just
    check the **Add Python 3.8 to PATH** option (the version number will depend on
    the version you downloaded) so that you can access Python from anywhere in Command
    Prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.8 – Python installation'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_08.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.8 – Python installation
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you''ve selected this option highlighted in *Figure 2.8*, click on **Install
    Now**. Once the installation is complete, close the installation window and open
    a terminal/Command Prompt. Inside Command Prompt, just enter the **python** command.
    You should see the following output in the terminal. The Python shell should be
    open now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 – Python shell'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_09.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.9 – Python shell
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've set up Python in Windows, let's move on to the Kali installation
    and set it up there as well.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on Kali Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Most pen testing OSes come with Python already installed. To check whether
    your distribution has Python installed, open Kali and search for **Terminal**.
    Open terminal and write the following command in the terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: python --version
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.10 – Python version'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_10.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.10 – Python version
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding result shows that Python version 2 is already installed; however,
    we need Python 3\. Let''s check again with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: python3 --version
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.11 – Python 3 version number'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_11.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.11 – Python 3 version number
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows that Python 3 is also installed in Kali, so we
    don't have to install it again.
  prefs: []
  type: TYPE_NORMAL
- en: Integrated development environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'An IDE is a piece of software that helps us to write code efficiently. You
    can write Python script in a notepad as well; however, IDEs provide functionalities
    that help us to write code easily. There are a lot of options available. We will
    focus on free IDEs. The best option I found is **Visual Studio Code** (**VS Code**),
    which is completely free. Go ahead and download VS Code for both virtual OSes,
    Windows 10 and Kali: [https://code.visualstudio.com/download](https://code.visualstudio.com/download).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Installation in Windows is simple: you need to follow the installer. Installation
    in Linux requires you to download a Debian package file. Open terminal and navigate
    to the location of the downloaded file. Then, run this command:'
  prefs: []
  type: TYPE_NORMAL
- en: sudo dpkg -i /path/to/file
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s what it''ll look like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.12 – VS Code installation in Kali'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_12.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.12 – VS Code installation in Kali
  prefs: []
  type: TYPE_NORMAL
- en: Note that it will prompt you for a password to install.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once it is installed, you will have to install the extension. Open VS Code
    and click on the **Extensions** tab to the left of VS Code and search for **Python**.
    It should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.13 – Python extension'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_13.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.13 – Python extension
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Install** button and it should take a few seconds to install.
    Now you have everything almost set up to begin your ethical hacking journey. Until
    now, we have set up our virtual OS, installed Python on these machines, and installed
    VS Code with relevant extensions that will help us along our journey. In the next
    section, we will make some network configurations to help us along.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By default, all virtual machines create a separate virtual interface for networking.
    This means that the virtual OS devices are in a separate subnet as compared to
    your host OS. To make sure that all the OSes are in the same subnet, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the settings of each virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the network settings, select **Bridged Adapter** for the **Attached to**
    option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Make sure you do it both for the Windows and the Kali installation:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.14 – Setting the network adapter'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_14.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.14 – Setting the network adapter
  prefs: []
  type: TYPE_NORMAL
- en: Now all your devices will be in the same subnet. You should be able to ping
    the Kali installation from the Windows 10 installation.
  prefs: []
  type: TYPE_NORMAL
- en: Updating Kali
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before proceeding, it is a good idea to update Kali so that everything is up
    to date. Kali can be updated with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: sudo apt-get update
  prefs: []
  type: TYPE_NORMAL
- en: sudo apt-get upgrade
  prefs: []
  type: TYPE_NORMAL
- en: The update process will take some time as it will update all repositories.
  prefs: []
  type: TYPE_NORMAL
- en: Using virtual environments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python has a very neat feature called virtual environments. Using these virtual
    environments, you can keep track of dependencies of different Python projects
    and keep different projects separate from the main environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s create a new folder in Kali where all our project files will be present:'
  prefs: []
  type: TYPE_NORMAL
- en: Open your Kali home directory and create a new folder called **python-hacking**.
    All our future work will be done here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open this folder in VS Code:![Figure 2.15 – Folder structure inside VS Code
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](image/B14788_02_15.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.15 – Folder structure inside VS Code
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Inside the **python-hacking** folder, create a new folder called **m1-hello-world**.
    Here we will test our virtual environment. Inside the **m1-hello-world** folder,
    create a new file called **main.py**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Check whether the Python package manager, **pip**, is installed properly in
    Kali using the following command in terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**pip3 –version**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You should see the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.16 – pip not installed'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/B14788_02_16.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.16 – pip not installed
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If you see an output similar to the preceding one, it means that **pip** is
    not installed on the system. To install **pip**, run the following command. Make
    sure that the system is updated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**sudo apt install python3-pip**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once **pip** is installed properly, the output will be like this:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.17 – pip installation'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '](image/B14788_02_17.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 2.17 – pip installation
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Also install **pip3** in Windows if it doesn't exist already.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now open the **main.py** file and write some Python code. We will just use the
    following code. To open a terminal in VS Code, press *Ctrl* + *`*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now we will install a Python virtual environment module. Run the following
    command to install it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**apt-get install python3-venv**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once the Python virtual environment module is installed, we can create a **virtual-env**
    folder by simply running the following command in the terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**python3 -m venv my-virtualenv**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If the command runs successfully, you will see a new folder created with the
    name **my-virtualenv**. This folder contains a Python environment that is isolated
    from the system environment. To enable this environment, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**source my-virtualenv/bin/activate**'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'It''ll look like the output in *Figure 2.18*:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.18 – Activating an environment'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_18.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.18 – Activating an environment
  prefs: []
  type: TYPE_NORMAL
- en: Once the environment is activated, you will see that the environment name, **my-virtualenv**,
    is shown at the start of every terminal line. Now every package you install using
    **pip** in this shell will be installed only in this environment and will be isolated
    from the main environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Write the following code in the **python** file to test whether everything
    is working properly:'
  prefs: []
  type: TYPE_NORMAL
- en: 'if __name__ == "__main__":'
  prefs: []
  type: TYPE_NORMAL
- en: print("Hello world")
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.19 – Sample Python script'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_19.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.19 – Sample Python script
  prefs: []
  type: TYPE_NORMAL
- en: 'To run it, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: python3 main.py
  prefs: []
  type: TYPE_NORMAL
- en: 'You should see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.20 – Running the Python script'
  prefs: []
  type: TYPE_NORMAL
- en: '](image/B14788_02_20.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.20 – Running the Python script
  prefs: []
  type: TYPE_NORMAL
- en: If you see the output **hello world** displayed, it means everything is installed
    properly.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's summarize what we did in this chapter. We started with downloading and
    installing virtual OSes on our host machine. Then we configured Python in our
    system, which we will use throughout the rest of the book. Then we configured
    our network for virtual machines, and at the end of this chapter, we learned how
    to use virtual environments in Python. These will be very helpful in later chapters
    when we want to create distributable binaries from our code. In the next chapter,
    we will cover an introduction to networking and how it can be used for ethical
    hacking.
  prefs: []
  type: TYPE_NORMAL
