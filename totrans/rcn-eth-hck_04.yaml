- en: '4'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Domain and DNS Intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the internet continues to grow, there’s more access to information. **Open
    Source Intelligence** (**OSINT**) can be collected from any publicly available
    sources, such as the internet. Hackers collect OSINT about their target to help
    improve the **Tactics, Techniques, and Procedures** (**TTPs**) for their cyber-attack
    and operations. Hence, it’s important for cybersecurity professionals such as
    ethical hackers and penetration testers to have a solid understanding of how an
    adversary can collect and leverage OSINT, with the intention of the ethical hacker
    to use the same TTPs to help reduce the risk of a cyber-attack or threat and improve
    the cyber defenses of their organization.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the course of this chapter, you will learn about and gain practical
    skills commonly used by ethical hackers and penetration testers to gather publicly
    available information from various online sources and use popular techniques and
    tools to efficiently profile an organization. You will learn how to leverage data
    collected from internet search engines, acquire domain intelligence, identify
    sub-domains from organizations, and perform **Domain Name System** (**DNS**) reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Leveraging search engines for OSINT
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering sub-domains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DNS reconnaissance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux: [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leveraging search engines for OSINT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The internet is the largest network in the world, and navigating and finding
    resources can be challenging at times, especially if we don’t know the domain
    name or **Uniform Resource Locator** (**URL**) of a specific website. To help
    us quickly find the right domain name for a website, we can use an internet search
    engine. Internet search engines crawl and index everything on the internet, which
    enables a person to perform an internet search using keywords to find all relevant
    resources while providing safe results.
  prefs: []
  type: TYPE_NORMAL
- en: Without internet search engines, a person needs to know the right domain name,
    hostname, or URL for the website they want to visit. For instance, imagine a world
    without internet search engines; each person would need to keep an up-to-date
    record of each new website and its IP address. If an organization changed its
    domain name, perhaps due to rebranding, the information would need to be shared
    with all internet subscribers. However, since the world is a very large place,
    the update may not reach everyone immediately, and some people may attempt to
    connect to the old domain name, which may not resolve to the new domain or website.
  prefs: []
  type: TYPE_NORMAL
- en: Hence, internet search engines play an important role on the internet by crawling
    billions of domain names, websites, and their pages using web crawlers. Web crawlers
    (bots or spiders) enable the internet search engine provider to navigate the internet,
    download each web page, and follow web links to efficiently discover new websites
    and pages that are available on the internet. Hence, internet search engines are
    tools to help us find and collect intelligence about an organization. As ethical
    hackers, we can use various internet search engines to find and collect information
    about our organization and determine what the company has exposed through data
    leaks.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are common internet search engines:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Google: [https://www.google.com/](https://www.google.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yahoo!: [https://www.yahoo.com/](https://www.yahoo.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bing: [https://www.bing.com/](https://www.bing.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DuckDuckGo: [https://duckduckgo.com/](https://duckduckgo.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yandex: [https://yandex.com/](https://yandex.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The DuckDuckGo internet search engine focuses on privacy and does not store
    the user’s internet searches or track their browser. Yandex is a Russian-based
    internet search engine that focuses on content within the Asia and Europe regions.
  prefs: []
  type: TYPE_NORMAL
- en: A typical person may choose one of the preceding internet search engines, perform
    an internet search using a keyword(s), and will most likely click on a link on
    the first page of the search results. As an ethical hacker, it’s important to
    understand that page 1 of the search results usually provides the most accurate
    data based on the search criteria; however, checking through page 2 and onward
    will provide additional information that may be meaningful to us about the target.
    Since internet search engines collect and record data, it’s essential to examine
    all the search results for any connections to the targeted organization.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, each internet search engine uses a unique algorithm for how they
    crawl and index websites on the internet. As an ethical hacker, using only one
    internet search engine may not provide the same results that another internet
    search engine may provide. For instance, if you’re looking for specific data about
    a target, one internet search engine may not provide it due to its algorithm,
    while another may provide it to you. Hence, it’s recommended to always use multiple
    internet search engines to collect and analyze data found on the first 10 pages
    of each internet search engine’s result pages.
  prefs: []
  type: TYPE_NORMAL
- en: On many websites, you will find a **robots.txt** file that contains a list of
    directories. This file is commonly used by web administrators to allow or disallow
    the indexing of specific directories of a website by internet web crawlers. For
    instance, if a web administrator wanted to prevent internet search engines from
    indexing and displaying the administrator portal of their website to anyone searching
    the organization’s domain name, they could insert a **disallow /administrator/**
    statement within the **robots.txt** file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the contents of a sample **robots.txt** file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – robots.txt file](image/B19448_04_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – robots.txt file
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the **robots.txt** file seems to contain
    a listing of sensitive directories that should not appear on internet searches.
    Since the **robots.txt** file is publicly available on a website, ethical hackers
    can collect and analyze the data found within it to discover hidden directories
    of a target, which can be used to plan future operations. Furthermore, visiting
    each hidden directory may lead to discovering additional data leaks and resources
    exposed by an organization.
  prefs: []
  type: TYPE_NORMAL
- en: However, since you’ll be directly accessing the **robots.txt** file on the target’s
    website, this is a form of active reconnaissance, and the target will know you’ve
    made contact. Therefore, it’s always recommended to anonymize your internet traffic
    to help conceal your online identity and reduce your threat level during the reconnaissance
    phase.
  prefs: []
  type: TYPE_NORMAL
- en: Google hacking techniques
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Google hacking** (**dorking**) is a common technique used by ethical hackers
    to leverage Google’s internet search algorithm to find sensitive information about
    people, places, organizations, and other things on the internet. The term *Google
    hacking* does not mean we’re actually hacking into Google’s infrastructure or
    systems in any way; it is simply a term that’s used to describe how we are leveraging
    the power of Google’s search engine to find specific details about our target
    without performing illegal activities.'
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, searching for an organization based on a single keyword provides
    billions of results, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – Google search](image/B19448_04_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.2 – Google search
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, it’s important to collect and analyze the data found not
    only on page 1 of the search results but all others to create a better profile
    of the target. However, as with any typical internet search on Google, it provides
    generic results that are associated with the keyword.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Ensure you are not signed in to your Google account or the Chrome web browser
    when collecting information about a target.
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform Google hacking techniques, it’s essential to understand how advanced
    Google search operators can help us filter specific results. The following are
    common Google advanced search operators:'
  prefs: []
  type: TYPE_NORMAL
- en: '**-** (minus)—The dash is used to negate a term from the search results. For
    instance, **cybersecurity -Cisco** will provide results that contain the word
    *cybersecurity* but remove all entries that contain *Cisco*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OR**—This is a conditional operator to provide results of either one term
    or the other. For example, **cybersecurity OR networking** will provide results
    containing either the word *cybersecurity* or *networking* in them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AND**—This conditional operator is used to provide results that include two
    terms. For instance, **football AND england** will return results that contain
    both keywords.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**intitle:**—This operator is used to search for title pages that contain a
    specific term(s). For instance, **intitle: administrator** will search for all
    websites where *administrator* is found in the title and return these results.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**inurl:**—This operator searches for URLs that contain a specific keyword.
    For example, **inurl:security** provides all URLs that contain the keyword *security*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**intext:**—This operator enables Google to examine whether a specific keyword
    is found within the body of a website and provide results for those websites only.
    For example, **intext:cryptocurrency** provides results of web pages that contain
    the word *cryptocurrency* within their body.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ext:**/ **filetype:**—These operators are used to specify a file extension.
    For instance, **cybersecurity filetype:pdf** will provide results that contain
    the word *cybersecurity* and a PDF file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**site:**—This operator is used to provide results for a specific domain name.
    For example, **site:microsoft.com** will provide results for [microsoft.com](http://microsoft.com)
    only.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**before:** **yyyy-mm-dd**—This operator filters results before a particular
    time. This is useful if you’re interested in finding results or data that was
    published before a certain time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**after:** **yyyy-mm-dd**—This operator filters results after a particular
    time. This is useful if you’re interested in finding results or data that was
    published after a certain time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '***** (asterisk)—This operator is used as a wildcard to match any keyword.
    For example, **cyber *** will provide results showing anything that starts with
    *cyber*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Keyword1 keyword2**—This search format is used to provide results with specific
    keywords. For instance, **cybersecurity microsoft** provides results on these
    related terms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**" "** (quotation marks)—Quotation marks are used to enclose a specific search
    term such as **"****John Doe"**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following are common scenarios for using Google advanced search operators
    to collect intelligence on a target:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine you want to filter the Google results for a specific domain only. Using
    the **site:domain-name** syntax provides the following results:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.3 – Filtering for a specific domain](image/B19448_04_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.3 – Filtering for a specific domain
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine you’re interested in searching for a specific security vulnerability
    on a particular domain such as Microsoft’s website. Using the **printnightmare
    site:microsoft.com** syntax will provide results for **PrintNightmare** on Microsoft’s
    website:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.4 – Combining a keyword with the site operator](image/B19448_04_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.4 – Combining a keyword with the site operator
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re interested in finding the customer portals on a targeted website,
    using the **customer AND login site:domain-name** syntax filters the search results
    to look for customers and logins on a specific domain, as shown in the following
    screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.5 – Finding customer portals on a domain](image/B19448_04_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.5 – Finding customer portals on a domain
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re looking for login portals on a specific domain, using the **"login"
    site:domain-name** syntax will filter results with the specific keyword *login*
    on the domain, as shown in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.6 – Finding login portals](image/B19448_04_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.6 – Finding login portals
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine you’re interested in finding specific file types on a domain. Using
    **site:domain-name filetype:txt** or **site:domain-name filetype:pdf** filters
    the Google search results, as shown in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.7 – Searching for file types on a domain](image/B19448_04_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.7 – Searching for file types on a domain
  prefs: []
  type: TYPE_NORMAL
- en: 'Imagine you’re interested in looking for all websites that contain the word
    *login* within their title for a specific domain. You can do this by using the
    **site:domain-name intitle:login** syntax, as shown in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.8 – Finding login portals](image/B19448_04_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.8 – Finding login portals
  prefs: []
  type: TYPE_NORMAL
- en: 'To find sub-domains for an organization, use the **site:domain-name -www**
    syntax to exclude the **www** parameter, as shown in the following screenshot:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.9 – Finding sub-domains](image/B19448_04_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.9 – Finding sub-domains
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you can use the **site:*.domain.com -site:www.domain.com** Google
    dork syntax to find sub-domains of a target. For instance, if you want to find
    sub-domains of *microsoft.com*, the **site:*.microsoft.com -site:www.microsoft.com**
    syntax will filter the Google search results.
  prefs: []
  type: TYPE_NORMAL
- en: Many possible combinations of Google advanced search operators will provide
    unique results for us. To help ease the learning curve with Google’s advanced
    search operators, Google has included an **Advanced Search** feature on their
    main Google search page that reduces the need to use specific advanced search
    operators.
  prefs: []
  type: TYPE_NORMAL
- en: 'To access Google’s **Advanced Search** feature, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to Google’s home page at [https://www.google.com/](https://www.google.com/)
    and click on **Settings**, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.10 – Google home page](image/B19448_04_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.10 – Google home page
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on **Advanced search** as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.11 – Advanced search](image/B19448_04_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.11 – Advanced search
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, you’ll access the **Advanced Search** menu, which provides many fields
    to help you perform advanced Google searches, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.12 – Google Advanced Search menu](image/B19448_04_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.12 – Google Advanced Search menu
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, **Exploit Database** ([https://www.exploit-db.com/](https://www.exploit-db.com/))
    manages the **Google Hacking Database** (**GHDB**), a public repository of advanced
    Google search operators and combinations to find exposed systems and resources
    on the internet. The GHDB can be found at [https://www.exploit-db.com/google-hacking-database](https://www.exploit-db.com/google-hacking-database).
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows some of the many Google dorks found on the GHDB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.13 – GHDB](image/B19448_04_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.13 – GHDB
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, each Google dork can be used to find sensitive
    and unintentionally exposed systems and files on the internet. Please be very
    mindful and careful when lurking around using Google hacking techniques. Do not
    use the information you find for malicious purposes or to cause harm to a system
    or network.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, Google dorks can help you find publicly exposed documents
    that contain metadata of username structures, which allows you to gain further
    insights into the way usernames are created for a targeted organization.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use internet search engines
    to collect intelligence about a target. In the next section, you will learn how
    to collect domain intelligence.
  prefs: []
  type: TYPE_NORMAL
- en: Domain intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Domain intelligence focuses on collecting and analyzing domain registry details
    and DNS records of a targeted organization to identify their systems, network
    infrastructure, and attack surface. As the internet continues to expand, there
    are more registered domain names on the internet as more organizations create
    an online presence to extend their market reach to new customers around the world.
    In addition, it’s quite easy for anyone to register a public domain name on the
    internet and use the namespace for their personal usage. Domain names have been
    around for quite some time, and they help us to easily access websites on the
    internet. For instance, imagine how challenging it would be for each person to
    know and record the IP addresses of each website they wanted to visit. If the
    IP address were unknown, then the user would not know how to connect to the destination
    website. Similarly to a postal service, if the destination mailing address is
    unknown, then the courier won’t be able to deliver the letter.
  prefs: []
  type: TYPE_NORMAL
- en: Domain names are easy-to-remember addresses that are unique on the internet,
    and they help us connect to websites such as [google.com](http://google.com) and
    [amazon.com](http://amazon.com). However, a domain name is a string of unique
    characters that are usually mapped to an IP address of a device on a network.
    Domain names usually end with a **Top Level Domain** (**TLD**) such as **.com**,
    **.net**, **.org**, and so on. Different root DNS servers are managed by the **Internet
    Assigned Numbers Authority** (**IANA**). For instance, the **.com** root DNS server
    will contain the records for all domain names that have the **.com** TLD and their
    associated IP addresses. Therefore, if a user wants to retrieve the IP address
    for [www.google.com](http://www.google.com), they will need to query the **.com**
    root DNS server, which searches its database for all records of [google.com](http://google.com).
    Once the [google.com](http://google.com) domain is found within the DNS server,
    the server then searches for the **www** record and its associated IP address
    and responds to the user’s computer. You can think of DNS servers as very large
    directories that contain many records of hostnames and their associated IP addresses,
    which helps many people around the world to easily connect to their destination
    websites and servers.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: DNS is a common network protocol that allows a device to resolve a hostname
    to an IP address. DNS operates on **User Datagram Protocol** (**UDP**) port **53**
    to handle DNS queries and responses between clients and the DNS server. However,
    DNS servers also use **Transmission Control Protocol** (**TCP**) port **53** for
    the zone transfer of records between one DNS server and another.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the concept of a root DNS server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.14 – Root DNS server structure](image/B19448_04_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.14 – Root DNS server structure
  prefs: []
  type: TYPE_NORMAL
- en: Prior to using DNS servers for domain name resolution, each computer used a
    **Hosts** file that contained a list of hostnames and their associated IP addresses.
    This **Hosts** file required frequent updates to ensure it had the latest records.
    However, managing this file on all client computers became a challenging task,
    and DNS servers were used to overcome this issue. However, the **Hosts** file
    on Windows-based operating systems can be found in the **C:\Windows\System32\drivers\etc**
    folder directory. However, when a computer connects to a network, the **Dynamic
    Host Configuration Protocol** (**DHCP**) server usually provides the network’s
    DNS server IP addresses to the client. Therefore, the host operating system of
    the client device no longer queries the **Hosts** file, instead sending all DNS
    queries to the DNS servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the contents of the **Hosts** file of a Windows
    11 operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.15 – Hosts file](image/B19448_04_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.15 – Hosts file
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the file was originally created to map
    hostnames to IP addresses. However, all the lines are commented by default to
    prevent the operating system from reaching any of its contents, including the
    default entries.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the general steps taken when performing a DNS query for a
    hostname:'
  prefs: []
  type: TYPE_NORMAL
- en: 'When a user enters a domain name or hostname into the address bar of their
    web browser, the client device checks its local DNS cache for any previous entries
    that match the hostname. If no previous entries are found, the client device sends
    a DNS query to the preferred DNS server, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.16 – DNS query](image/B19448_04_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.16 – DNS query
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: The **ipconfig /displaydns** command will display the local DNS cache on a Windows-based
    operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The DNS server will check its local database for the request record and respond
    with a DNS reply to the client device with the IP address for the hostname, as
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.17 – DNS response](image/B19448_04_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.17 – DNS response
  prefs: []
  type: TYPE_NORMAL
- en: 'When the client device receives the IP address, it will insert it as the destination
    IP address within the **Layer 3** header of the IP packet and send it out on the
    network to establish a connection to the destination web server, as shown in the
    following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.18 – Connection to the destination server](image/B19448_04_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.18 – Connection to the destination server
  prefs: []
  type: TYPE_NORMAL
- en: 'Domain owners and DNS server administrators can create various types of DNS
    records for a domain, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**: This record maps a hostname to an IPv4 address'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AAAA**: This record maps a hostname to an IPv6 address'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MX**: This record is used to specify the (e)mail exchange servers for the
    domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NS**: Contains the name servers for the domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CNAME**: Specifies the canonical name (alias) for the domain or a sub-domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PTR**: Used to resolve an IP address to a hostname'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RP**: Used to specify the responsible person for the domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TXT**: This record allows the domain owner to specify a text record, which
    is commonly used to validate ownership of the domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SRV**: Used to specify a service port'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SOA**: This record is used for storing administrative information about the
    domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public DNS servers are available to anyone on the internet and usually contain
    a copy of the DNS records for many registered domain names. As an ethical hacker
    or penetration tester, you can leverage both the domain registration details and
    DNS records of a domain name to help you better understand the target’s network
    infrastructure, publicly available servers, and additional assets that are owned
    by the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows a visual mind map of key areas for collecting domain
    intelligence:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.19 – Domain intelligence mind map](image/B19448_04_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.19 – Domain intelligence mind map
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding diagram, ethical hackers can collect domain registration
    details from public WHOIS databases, identify sub-domains using various tools
    and internet search engines, and retrieve DNS records from public DNS servers.
  prefs: []
  type: TYPE_NORMAL
- en: Working with WHOIS databases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Registering a domain name on the internet is quite a simple process. The user
    visits an online domain registrar, checks the availability of a preferred domain,
    and registers it for a number of years. During the registration process, the domain
    registrar collects a lot of **Personally Identifiable Information** (**PII**)
    about the new domain owner, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Full name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telephone number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Organization name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By registering a domain on the internet, the registration details are publicly
    available by default, enabling anyone to identify the owner of the domain name
    and other sensitive details. However, many domain registrars provide an additional
    paid service to keep the registration details private for the duration of the
    lease. In addition, during the registration process, many people and organizations
    will choose to pay an additional fee to protect their privacy and keep their domain
    registration details private. However, not everyone chooses to pay the additional
    privacy charges, thus leaving their registration details exposed on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an ethical hacker, you can leverage the information found on a WHOIS database
    to create a profile about a target and identify their contact details and physical
    location. The following are public WHOIS databases:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://who.is/](https://who.is/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.whois.com/whois/](https://www.whois.com/whois/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://whois.domaintools.com/](https://whois.domaintools.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The preceding list is just a few of the many public WHOIS online databases available.
    When performing a WHOIS lookup, it’s important to query the targeted domain on
    multiple WHOIS databases to ensure the information is accurate and available.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with performing WHOIS lookup and retrieving domain registration
    information, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on your **Kali Linux** virtual machine and verify there’s internet
    connectivity on it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal on Kali Linux and use the **whois** command, like so:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the **whois** response for the targeted domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.20 – whois response](image/B19448_04_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.20 – whois response
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the **whois** tool attempted to retrieve
    all the domain registration details, such as the domain registration period, the
    name servers, the owner’s personal information, and their contact details. However,
    the domain owner has domain privacy to protect their registration details from
    being exposed on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, open the web browser within Kali Linux, go to [https://mxtoolbox.com/Whois.aspx](https://mxtoolbox.com/Whois.aspx),
    and enter a targeted domain name, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.21 – MXToolbox Whois Lookup](image/B19448_04_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.21 – MXToolbox Whois Lookup
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, the MXToolbox WHOIS database provided
    the name servers of the domain and registration details:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.22 – WHOIS results](image/B19448_04_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.22 – WHOIS results
  prefs: []
  type: TYPE_NORMAL
- en: Most organizations will opt to pay additional fees to ensure their registration
    details are kept private from users on the internet. However, it’s a good practice
    to perform a WHOIS lookup because you may find something interesting to help you
    plan future operations in ethical hacking.
  prefs: []
  type: TYPE_NORMAL
- en: Using nslookup for reconnaissance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **nslookup** tool is a popular network administration tool that is built
    into many operating systems such as Windows and Linux and enables IT professionals
    to troubleshoot DNS issues on a network. As an ethical hacker, you can leverage
    **nslookup** to retrieve domain information such as DNS records from the targeted
    DNS server and other publicly available DNS servers on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with learning how to use **nslookup**, please use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, open the Terminal on Kali Linux and execute the **nslookup** command.
    After executing the command, the Terminal prompt will change, and all queries
    on the Terminal will be sent to the IP address of the DNS server that’s configured
    on Kali Linux.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To change the current server to Google’s DNS server, use the **server 8.8.8.8**
    command. This command will send all DNS queries that are performed on the Terminal
    to Google’s DNS servers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, enter a domain such as [amazon.com](http://amazon.com) to perform a query,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.23 – nslookup tool](image/B19448_04_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.23 – nslookup tool
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, **nslookup** sends the DNS query to **8.8.8.8**
    (Google’s DNS server), retrieves the DNS **A** records for the domain name, and
    shows the public IPv4 addresses of their web servers.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The non-authoritative answer means the information was retrieved from a DNS
    server other than the server with the original DNS records. Non-authoritative
    DNS servers usually have a cached copy of the original DNS records.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **set type=mx** command to change the query type and enter the
    targeted domain again to retrieve the email server information:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.24 – Retrieving email server information](image/B19448_04_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.24 – Retrieving email server information
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the hostname of the email server was found.
  prefs: []
  type: TYPE_NORMAL
- en: 'To resolve the email server hostname to an IP address, use the **set type=a**
    command, then enter the hostname of the email server, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.25 – Resolving a hostname to an IP address](image/B19448_04_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.25 – Resolving a hostname to an IP address
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the public IPv4 address of the email server
    was retrieved from a public DNS server. Hence, it’s important to understand the
    type of records that are created on a DNS server and how ethical hackers can collect
    and analyze such information to create a profile about a target.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering sub-domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sub-domains are used to both organize and develop a hierarchical structure for
    domain names, such as dividing a parent domain into smaller parts that can be
    easily managed by IT professionals. Furthermore, sub-domains are easily created
    by adding a prefix value to an existing parent domain. For instance, Google owns
    the [google.com](http://google.com) domain and created [mail.google.com](http://mail.google.com)
    as a sub-domain that points to its online email platform. This means that sub-domains
    can have their own IP address, content, and hosting server, and can be managed
    separately from the parent domain.
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, it’s important to discover sub-domains of a target as
    they can provide valuable information during your reconnaissance phase. They can
    help you identify additional systems and network infrastructure and determine
    the security posture of the target. In addition, you can expand the attack surface,
    discovering security vulnerabilities that can lead to compromising the target
    and gaining a foothold. Furthermore, ethical hackers can spoof sub-domains that
    appear to be legitimate to a target’s domain name during a social engineering
    attack, tricking employees into revealing sensitive details such as their user
    credentials and even downloading malware onto their company-owned systems.
  prefs: []
  type: TYPE_NORMAL
- en: Certificate searching
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Certificate Search** is an online database that collects information from
    digital certificates that are publicly available and found on the internet. Digital
    certificates enable a user to validate the authenticity of a system on an untrusted
    network such as the internet. For instance, hackers can easily set up fake websites
    on the internet to perform social engineering attacks on their victims, such as
    tricking a person into revealing their user credentials for their online account.
    Digital certificates are used to help a user verify the identity of a website
    or device while identifying the certificate issuer, the organization, and its
    location.'
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that digital certificates play an important role in e-commerce
    as they are used to help improve the security of online transactions and communication
    to ensure all transmitted data between the user’s web browser and the server is
    encrypted, thus ensuring the encrypted data can only be decrypted by the intended
    recipient.
  prefs: []
  type: TYPE_NORMAL
- en: 'Digital certificates are commonly issued by a third-party, trusted organization
    known as a **certificate authority** (**CA**) on the internet. The CA is responsible
    for validating the identity of the certificate holder; therefore, the issued certificate
    contains the following data:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Subject name**—This field contains the name of the entity that will be using
    the certificate. The entity can be a person, website, server, or organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Public key**—This field contains the public key that will be used with the
    entity to perform data encryption between the client and server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issuer name**—This field contains the name of the CA that issued the certificate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Validity dates**—This field indicates the validity duration of the certificate,
    after which the certificate will expire and become untrusted if it’s not renewed
    by the entity/certificate holder.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Certificate serial number**—The serial number is a unique value assigned
    by the CA for identifying the certification.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Signature algorithm**—This field contains the cryptographic algorithms that
    are used by the CA to digitally sign the certificate.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Thumbprint**—This field contains a **unique identifier** (**UID**) value
    that is used for verification.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows general information on a digital certificate
    for [www.amazon.com](http://www.amazon.com):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.26 – Certificate details](image/B19448_04_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.26 – Certificate details
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, anyone can identify the CA as DigiCert
    Global Root CA, the intermediate CA as DigiCert Global CA GA, the holder of the
    certificate as [www.amazon.com](http://www.amazon.com), and its details. Additionally,
    the **Subject Alt Names** field indicates this digital certificate can be used
    with the additional sub-domains listed within this field. As an ethical hacker,
    this field helps us to easily discover additional sub-domains of a targeted organization,
    which can lead to additional points of entry into a target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Certificate Search can help us to efficiently discover the digital certificates
    of an organization using passive reconnaissance. To get started with using Certificate
    Search as an online OSINT tool to discover the sub-domains of an organization,
    please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the web browser on your computer or Kali Linux [virtual machin](https://crt.sh/)e,
    and go to the official website of Certificate Search at [https://crt.sh/](https://crt.sh/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the website loads, enter a public domain and click on the **Search** button,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.27 – Certificate Search](image/B19448_04_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.27 – Certificate Search
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Certificate Search allows anyone to enter
    an identity such as a domain name or organizational name, or a certificate fingerprint.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, Certificate Search will return all results from its database showing
    all digital certificates that contain **apple.com** as the domain, and sub-domains:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.28 – Certificate results](image/B19448_04_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.28 – Certificate results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the results contain the **crt.sh** ID,
    the logged date, validity period, **Common Name** (**CN**), matching identities,
    and additional details. The **Matching Identities** field displays the sub-domains
    of the organization; these hostnames can be easily resolved to IP addresses using
    the DNS protocols.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on any **crt.sh** ID to view the details within a digital certificate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.29 – Certificate details](image/B19448_04_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.29 – Certificate details
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the digital certificate contains the locale
    information about the organization, which can be used to find the physical location
    of the company. Such information is important when conducting a black-box penetration
    test on a target when only the organization name is given to the ethical hacker
    or penetration tester. It’s important that the ethical hacker finds the accurate
    physical location of the company to identify the company’s wireless networks and
    physical security presence.
  prefs: []
  type: TYPE_NORMAL
- en: As you have seen in the preceding steps, Certificate Search is a valuable resource
    to help us discover digital certificates associated with a target and displays
    their locale and sub-domain information, which helps ethical hackers to create
    a profile about their targets. Next, you will learn how to discover sub-domains
    using an OSINT tool on Kali Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Recon-ng
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Recon-ng** is a popular open source reconnaissance tool that helps ethical
    hackers and penetration testers collect and analyze OSINT from the internet. This
    tool can be used to identify whether an organization is leaking sensitive data
    that can be leveraged by potential threat actors when planning a future cyber-attack.
    Recon-ng provides a command-line interface and contains various modules that are
    designed for specific tasks and collecting OSINT from various data sources.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some advantages of using Recon-ng for collecting and analyzing
    OSINT:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Automation**—Recon-ng can be automated to collect OSINT from online data
    sources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modules**—There are a lot of built-in modules that can be customized to provide
    additional features and capabilities'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data management**—Recon-ng has tools that enable a user to both organize
    and manage collected data efficiently during reconnaissance'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reporting**—There are multiple reporting modules and features that enable
    the user to generate reports in formats such as **HyperText Markup Language**
    (**HTML**), **Extensible Markup Language** (**XML**), and **Comma-Separated Values**
    (**CSV**) files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To get started with using Recon-ng to discover and collect sub-domains of a
    target, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and execute the following command to start Recon-ng:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, Recon-ng has an online marketplace with additional modules that can be
    downloaded and installed. To install all modules from the marketplace, use the
    following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the additional modules are being downloaded
    and installed on Recon-ng:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.30 – Installing modules](image/B19448_04_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.30 – Installing modules
  prefs: []
  type: TYPE_NORMAL
- en: 'After the modules are installed, Recon-ng will reload all modules on the application,
    and you will see a lot of warning messages similar to these:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.31 – Missing application programming interface (API) keys](image/B19448_04_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.31 – Missing application programming interface (API) keys
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, many Recon-ng modules require a valid
    API key to communicate with an online data source to query and retrieve data about
    a target. In a later step, you will learn how to add API keys for various Recon-ng
    modules.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to display a list of API keys and the associated module, use the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following screenshot, there are no API keys assigned to any
    module by default:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.32 – Checking API keys](image/B19448_04_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.32 – Checking API keys
  prefs: []
  type: TYPE_NORMAL
- en: Next, to get an API key for **BuiltWith**, go to [https://builtwith.com/](https://builtwith.com/)
    and create a free account. After creating an account, log in and cli[ck on **Tools**
    > **API**](https://hunter.io/) **Access** to get your API key.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, to get an API key for **HunterIO**, go to [https://hunter.io/](https://hunter.io/)
    and create a free account. When you’re logged in, click on your profile and select
    **</> API** to view your API key for this platform.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the previous steps to get API keys from **VirusTotal** at [https://www.virustotal.com/](https://www.virustotal.com/),
    **Censys** at [https://search.censys.io/](https://search.censys.io/), and **Shodan**
    at [https://www.shodan.io/](https://www.shodan.io/). Feel free to get additional
    API keys for supported modules on Recon-ng.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, to add an API key to an API-supported module, use the **keys add <API
    module name> <API key value>** command on Recon-ng—for instance, **keys add**
    **builtwith_api 12345**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, use the **keys list** command to verify the API keys were added successfully,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.33 – Verifying API keys](image/B19448_04_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.33 – Verifying API keys
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, when collecting data about a target, it’s good practice to keep your
    physical and digital workspace organized to easily find information when needed.
    Therefore, use the following commands to create a digital workspace on Recon-ng:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the following command to view a list of all created workspaces within
    Recon-ng:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following screenshot, the newly created workspace is available
    and we’re currently operating within it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.34 – Viewing workspaces](image/B19448_04_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.34 – Viewing workspaces
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use the **modules search** command to find the **bing_domain**
    module that will help us identify the geo-location and sub-domains of a target:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows two modules were identified and returned:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.35 – Search results](image/B19448_04_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.35 – Search results
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use the **recon/domains-hosts/bing_domain_web** module and display
    its description:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the module’s description and the required options
    to use the module:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.36 – Displaying module descriptions](image/B19448_04_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.36 – Displaying module descriptions
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the **SOURCE** value must be set before
    using the module to collect OSINT from the internet.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s set microsoft.com as the target and execute the module using the
    following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To unset a value within a module, use the **options unset <****parameter/value>**
    command.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the module has started collecting OSINT about
    the targeted domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.37 – Running a module](image/B19448_04_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.37 – Running a module
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the module has finished collecting OSINT on the target, execute the **show
    hosts** command to view the collected data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.38 – Viewing collected data](image/B19448_04_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.38 – Viewing collected data
  prefs: []
  type: TYPE_NORMAL
- en: To exit the current module on Recon-ng, type **back** and hit *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The **show** command can be used with **show** **[companies]** **[credentials]
    [hosts]** **[locations]** **[ports]** **[pushpins]** **[vulnerabilities] [contacts]**
    **[domains]** **[leaks]** **[netblocks]** **[profiles] [repositories]** to view
    specific information that was collected by Recon-ng.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, display a summary of all OSINT that was collected by Recon-ng:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the summary of activities that were performed
    and collected by Recon-ng:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.39 – Activity summary on Recon-ng](image/B19448_04_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.39 – Activity summary on Recon-ng
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to generate a report using an HTML reporting module, use the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the execution of the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.40 – Using the reporting module](image/B19448_04_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.40 – Using the reporting module
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, a report was generated and stored in the
    **/****home/kali/** directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the report using a web browser, open a new Terminal and use the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the HTML version of the report with the data
    collected about the target domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.41 – HTML report](image/B19448_04_41.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.41 – HTML report
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, to access the web interface of Recon-ng, open a new Terminal and execute
    the **recon-web** command, then open a web browser and go to **http://127.0.0.1:5000/**,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.42 – Recon-ng web interface](image/B19448_04_42.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.42 – Recon-ng web interface
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned the fundamentals of using Recon-ng
    to collect and analyze OSINT. Next, you will learn how to perform DNS reconnaissance
    on a target.
  prefs: []
  type: TYPE_NORMAL
- en: DNS reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DNS reconnaissance is a common technique used by ethical hackers and threat
    actors to collect information about a target by gathering publicly available information
    from DNS servers on the internet. If you recall, DNS is a network protocol that
    allows a system to resolve a hostname to an IP address, and there are many DNS
    servers on the internet that contain public DNS records about various registered
    domain names.
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, DNS reconnaissance focuses on sending DNS queries to either
    the target-owned DNS server or a public DNS server to retrieve DNS records about
    the target’s domain name, IP addresses, and sub-domains. The collected responses
    are analyzed to identify any valuable information about the target such as their
    systems and network architecture, potential security vulnerabilities, and application
    platforms.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you will learn how to use various tools and techniques to efficiently
    collect and analyze DNS information to create a profile about a target.
  prefs: []
  type: TYPE_NORMAL
- en: Using DNSenum
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**DNSenum** is a common DNS enumeration tool that’s used to collect OSINT on
    domain names. It operates by sending various types of queries to a DNS server
    about a targeted domain name, IP addresses, email servers, name servers, and sub-domains.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using DNSenum to collect DNS information about a targeted
    domain name, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following command to query Google’s DNS
    server for DNS records that belong to **apple.com**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following screenshot, DNSenum is attempting to retrieve all
    DNS record types and name servers of the target domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.43 – DNSenum output](image/B19448_04_43.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.43 – DNSenum output
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, DNSenum was able to retrieve the public
    IP addresses of the target’s web server, name servers, and email servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once DNSenum has collected general DNS record details, it will automatically
    attempt to perform sub-domain enumeration by using a default wordlist to identify
    common sub-domains of the target, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.44 – Sub-domain enumeration](image/B19448_04_44.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.44 – Sub-domain enumeration
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, DNSenum was able to enumerate many sub-domains
    of the target by performing a brute-force query to Google’s DNS server.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned how to automate the collection
    of DNS records of a target from a public DNS server. Next, you will learn how
    to use DNSRecon for performing DNS reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: Working with DNSRecon
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**DNSRecon** is another common DNS reconnaissance tool that enables ethical
    hackers and penetration testers to discover DNS records about their target’s domain
    name. This tool helps automate the processes of retrieving various DNS records
    found on public DNS servers about a specific domain name.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using DNSRecon, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following commands to query Google’s DNS
    server for the DNS records of **apple.com**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following screenshot, DNSRecon was able to retrieve the public
    DNS records of the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.45 – DNSRecon output](image/B19448_04_45.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.45 – DNSRecon output
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, DNSRecon was able to retrieve various
    types of DNS records such as **A**, **AAAA**, **MX**, **TXT**, **NS**, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, DNSRecon attempted to automatically enumerate the **SRV** record for
    the targeted domain, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.46 – Enumerating SRV records](image/B19448_04_46.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.46 – Enumerating SRV records
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned how to enumerate DNS records
    using the DNSRecon tool to find sub-domains and IP addresses of a target. Next,
    you will learn how to perform DNS zone transfers on a misconfigured DNS server.
  prefs: []
  type: TYPE_NORMAL
- en: Performing DNS zone transfers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you have learned so far, DNS servers have an important role in internal networks
    and on the internet. A DNS zone transfer is the process of copying the zone records
    or entire contents of a DNS zone from a primary DNS server onto another DNS server.
    DNS zone transfers are used to ensure DNS data is synchronized between primary
    and secondary DNS servers. However, the primary (master) DNS server holds the
    master zone record, and the secondary DNS server holds a copy of the same zone
    record file. Whenever there’s a change to the master zone record on the primary
    DNS server, the secondary DNS server needs to update its copy of the zone record
    too, hence the need for DNS zone transfers between DNS servers.
  prefs: []
  type: TYPE_NORMAL
- en: However, if a DNS server is misconfigured on a network or on the internet, an
    ethical hacker can attempt to copy the master zone records of an organization
    to identify security vulnerabilities on the assets owned by the target. Imagine
    a targeted organization did not separate its internal and external namespaces
    on its DNS server. If a DNS zone transfer is possible, the ethical hacker will
    be able to retrieve information about the organization’s internal systems and
    external systems. Keep in mind that it’s important to ensure ethical hackers obtain
    explicit permission before attempting to perform DNS zone transfers on customers’
    DNS servers.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: The folks at *DigiNinja* ([https://digi.ninja](https://digi.ninja)) have created
    a vulnerable DNS server environment for learning how DNS zone transfers can impact
    organizations and have created the [zonetransfer.me](http://zonetransfer.me) domain,
    which contains a DNS zone transfer security vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with learning how to perform a DNS zone transfer on a vulnerable
    DNS server, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal on Kali Linux and execute the following commands to
    discover the DNS records of the **zonetransfer.me** domain:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the DNS **A** and **MX** records for the targeted
    domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.47 – Finding DNS records](image/B19448_04_47.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.47 – Finding DNS records
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following command to retrieve the name servers of the targeted
    domain:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the name servers of the targeted domain were
    found:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.48 – Retrieving name servers](image/B19448_04_48.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.48 – Retrieving name servers
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the preceding screenshot, the following are the two name servers
    for the domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '**nsztm2.digi.ninja**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nsztm1.digi.ninja**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As ethical hackers, we can use these two name servers to determine whether the
    targeted domain is leaking zone records.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s query the targeted domain name with one of the newly discovered
    name servers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the DNS records that were retrieved from the
    **nsztm1.digi.ninja** name server for the **zonetransfer.me** domain name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.49 – DNS records](image/B19448_04_49.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.49 – DNS records
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, there are many sensitive and interesting
    hostnames found within the results. Some of these hostnames and IP addresses may
    not be intentionally exposed by the organization; however, such information can
    be leveraged by an ethical hacker to expand the attack surface.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: When performing DNS reconnaissance and zone transfers, ensure you query all
    name servers for a targeted domain as one server may lack proper security configuration
    compared with the others.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use **DNSenum** to automate the DNS zone transfer process on the
    target domain name:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows that DNSenum was able to successfully perform
    a DNS zone transfer from the vulnerable **nsztm2.digi.ninja** name server of the
    target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.50 – DNS zone transfer](image/B19448_04_50.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.50 – DNS zone transfer
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, DNSenum was able to retrieve additional interesting records from
    the vulnerable DNS server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.51 – Zone records](image/B19448_04_51.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.51 – Zone records
  prefs: []
  type: TYPE_NORMAL
- en: The information collected from zone transfers can help ethical hackers to identify
    the network infrastructure of the targeted organization such as the hostname of
    systems and their IP addresses. Having completed this exercise, you have learned
    how to use perform DNS zone transfers on a vulnerable DNS server. Next, you will
    how SpiderFoot helps ethical hackers during their reconnaissance phase in penetration
    testing.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring SpiderFoot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**SpiderFoot** is a popular OSINT tool used by cybersecurity professionals
    for reconnaissance, **threat intelligence** (**TI**), and investigation purposes.
    SpiderFoot can help ethical hackers to automate the collection of OSINT from various
    data sources on the internet. For instance, SpiderFoot operates by collecting
    data from various internet search engines, social media platforms, DNS records,
    WHOIS databases, and other publicly available sources. Then, SpiderFoot will both
    organize the collected data and present information in a way that helps ethical
    hackers easily analyze it.'
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about the SpiderFoot project, please visit [https://github.com/smicallef/spiderfoot](https://github.com/smicallef/spiderfoot).
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using SpiderFoot for reconnaissance, please use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal on Kali Linux and execute the following command to
    start the SpiderFoot web interface:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the web interface for SpiderFoot has started:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.52 – Starting the web interface for SpiderFoot](image/B19448_04_52.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.52 – Starting the web interface for SpiderFoot
  prefs: []
  type: TYPE_NORMAL
- en: Next, open the web browser within Kali Linux and go to **http://127.0.0.1:1234**
    to access the web interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, click **New Scan**, set a **Scan Name** value, set a **Scan Target**
    value, select **Passive**, and click on **Run Scan Now**, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.53 – Setting up a new scan](image/B19448_04_53.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.53 – Setting up a new scan
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the scan will start, and SpiderFoot will automatically populate the scan
    progress with the collected OSINT, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.54 – Summary data](image/B19448_04_54.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.54 – Summary data
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, selecting the **Browse** sub-tab within the current scan will display
    the number of collected data elements for each type of artifact:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.55 – Viewing artifact data](image/B19448_04_55.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.55 – Viewing artifact data
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, select the **Internet Name** artifact to view a list of sub-domains for
    the targeted domain name:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.56 – Viewing sub-domains](image/B19448_04_56.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.56 – Viewing sub-domains
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, click on **Browse** > **Physical Location** to view a list of the target’s
    geo-location data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.57 – Geo-locations](image/B19448_04_57.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.57 – Geo-locations
  prefs: []
  type: TYPE_NORMAL
- en: After the entire scan is completed, ensure you visit all the artifact categories
    to view all collected OSINT about the target to improve the profile of the target
    and identify any security vulnerabilities that can be exploited to gain a foothold.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use various tools and
    techniques to efficiently discover sensitive information about a target such as
    its hostname, IP address, and even geo-locations.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you have learned how to use leverage internet search engines
    to discover sensitive information about organizations. Additionally, you have
    gained hands-on skills to perform Google hacking techniques to find interesting
    domain names and sub-domains for a company. Furthermore, you have explored how
    to use various techniques and tools to discover and collect OSINT on domain names,
    sub-domains, and DNS information.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this chapter has been informative for you and helpful in your journey
    in the cybersecurity industry. In the next chapter, *Organizational Infrastructure
    Intelligence*, you will gain the practical skills needed to identify the network
    and organizational infrastructure of a targeted organization.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'DNS servers: [https://www.cloudflare.com/learning/dns/what-is-a-dns-server/](https://www.cloudflare.com/learning/dns/what-is-a-dns-server/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'DNS records: [https://www.cloudflare.com/learning/dns/dns-records/](https://www.cloudflare.com/learning/dns/dns-records/'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: )
  prefs: []
  type: TYPE_NORMAL
- en: 'SpiderFoot: [https://github.com/smicallef/spiderfoot](https://github.com/smicallef/spiderfoot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
