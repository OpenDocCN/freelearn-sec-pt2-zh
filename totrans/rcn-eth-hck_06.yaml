- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagery, People, and Signals Intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Photographs can tell you a lot and threat actors collect imagery intelligence
    on their targets to identify their geo-locations and any sensitive data in the
    background of pictures that can be used to improve their operations. People around
    the world are always posting pictures of themselves, their family members, and
    their locations on social media platforms without fully understanding how adversaries
    can track their whereabouts.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to analyze imagery and maps to identify
    the physical location of a target, and collect and analyze data from public databases
    to identify valid usernames and passwords of people. Additionally, you will learn
    how to perform wireless signals intelligence to identify wireless devices within
    an area and profile a targeted wireless network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Image and metadata analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: People and user intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless signals intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux: [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Trace Labs OSINT VM: [https://www.tracelabs.org/initiatives/osint-vm](https://www.tracelabs.org/initiatives/osint-vm)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kali Linux ARM: [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Google Earth Pro: [https://www.google.com/earth/versions/](https://www.google.com/earth/versions/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Raspberry Pi Imager: [https://www.raspberrypi.com/software/](https://www.raspberrypi.com/software/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Rufus: [https://rufus.ie/](https://rufus.ie/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raspberry Pi 3 B+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 32-GB Samsung EVO+ microSD card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A microSD card reader
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A micro-USB cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Alfa AWUS036NHA - Wireless B/G/N USB adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A VK-162 G-Mouse USB GPS Dongle Navigation Module
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A portable power bank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image and metadata analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Exchangeable Image File** (**EXIF**) is a standard that specifies the formatting
    of sounds and images that are commonly used in image handling devices such as
    scanners and digital cameras. Put simply, EXIF is the metadata embedded into photo
    files taken by a digital camera and includes camera data such as the geo-location,
    time and date, manufacturer, resolution, and so on. Images with EXIF data can
    be leveraged by ethical hackers for reconnaissance and social engineering.'
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, you can collect publicly available images of your target
    and analyze them for EXIF data. The collected EXIF data may reveal the target’s
    geo-location, the type of device used for capturing the photo, and the time the
    picture was taken. For instance, if a picture was taken with a digital camera
    within a server room of an organization, an ethical hacker who is hired to simulate
    real-world cyberattacks can identify whether the geo-location data is available
    and use it determine the physical location of the server room and the targeted
    company. Additionally, the EXIF data can be used by ethical hackers to improve
    their social engineering attacks by identifying the geo-location of the photo
    and sending spear phishing email messages that appear to originate from the same
    physical location as the target, therefore attempting to trick the target into
    thinking the email originates from a trusted source.
  prefs: []
  type: TYPE_NORMAL
- en: However, many smartphone and mobile operating system vendors have improved the
    security of their devices and implemented security mechanisms to prevent sensitive
    EXIF data from being attached to photos and videos captured using their devices.
    Imagine if all the photos uploaded on the internet contained EXIF data; then cyber
    criminals would be able to track their potential victims a lot easier than before
    by using a smartphone or computer. Therefore, the EXIF location data has been
    made a bit more secure over the years and reduces the risk of someone collecting
    the **Global Positioning System** (**GPS**) data from a photo, and some social
    media platforms have implemented security mechanisms to remove the EXIF data from
    photos before they are published on the online platform.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Digital forensic investigators can use EXIF data from a photo to determine when
    the picture was taken and where. Such information is useful during investigations
    as it helps identify a potential suspect and focus on the timeline of an attack.
  prefs: []
  type: TYPE_NORMAL
- en: EXIF provides a lot of data, which can be leveraged the right way by an ethical
    hacker to determine the whereabouts of a target, the device used for capturing
    the picture, the direction to target was facing, the device settings, and much
    more.
  prefs: []
  type: TYPE_NORMAL
- en: EXIF data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In this exercise, you will learn how to identify and analyze EXIF data from
    a photo and determine the geo-location of where it was captured. To get started
    with this exercise, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Power on the **Trace Labs OSINT virtual machine** and log in using **osint**/**osint**
    as the username and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you’re logged in to the Trace Labs OSINT virtual machine, open the **web
    browser** and go to [https://osint.tools](https://osint.tools) for a practice
    file. In the menu on the left column, you will see a list of resources – click
    on **Exif Example 1** as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.1 – EXIF file](image/Figure_6.01_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.1 – EXIF file
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, a picture will load on the web page. Right-click on it and select **Save
    Image As...** to download and save the image to the **Trace Labs virtual machine**
    as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.2 – EXIF picture](image/Figure_6.02_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.2 – EXIF picture
  prefs: []
  type: TYPE_NORMAL
- en: By default, all downloads are automatically saved in the **/home/osint/Downloads**
    directory on the Trace Labs virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use **exiftool** to extract the EXIF data from the image file. Open the
    **Terminal** and execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the output from executing the preceding command:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – EXIF data](image/Figure_6.03_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.3 – EXIF data
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, we are able to view the EXIF data from
    the image. The time and date, geo-location, device type and model, and resolution
    can be collected and analyzed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let’s use the **exifprobe** tool to extract EXIF data from the same picture:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following screenshot, the exifprobe tool extracted the EXIF
    and geo-location data from the picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4 – The exifprobe tool](image/Figure_6.04_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.4 – The exifprobe tool
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, open the web browser again and go to [https://fotoforensics.com/](https://fotoforensics.com/),
    where you can upload a picture to extract the EXIF data. Simply click on **Browse...**
    to attach the file and select **Upload** to perform the extraction and analysis
    as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.5 – Fotoforensics website](image/Figure_6.05_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.5 – Fotoforensics website
  prefs: []
  type: TYPE_NORMAL
- en: After a few seconds or minutes, the website will display all the EXIF data and
    provide various specific categories of data to view.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, select **Analysis** | **Metadata** to view the EXIF data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.6 – Viewing metadata](image/Figure_6.06_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.6 – Viewing metadata
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows all the EXIF data that was found in the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.7 – EXIF data from the uploaded image](image/Figure_6.07_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.7 – EXIF data from the uploaded image
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, scroll down the end of the EXIF results page to view the geo-location
    of the image:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.8 – Geo-location data](image/Figure_6.08_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.8 – Geo-location data
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the GPS data was found and applied to
    a mapping system to identify the approximate location of where the photo was taken.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, you can copy the GPS coordinates from the previous step and enter them
    into [https://maps.google.com](https://maps.google.com) (Google Maps) to get a
    second opinion on the location as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.9 – Google Maps](image/Figure_6.09_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.9 – Google Maps
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, GPS coordinates can be used on Google
    Maps to gain better insights into the vicinity and street view of a location.
  prefs: []
  type: TYPE_NORMAL
- en: Reverse image search
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Reverse image search allows anyone to perform an internet search for pictures
    by either uploading a photo or providing a URL that points to an image. Just as
    most people are familiar with using internet search engines to find websites and
    domain names based on keywords, reverse image search enables us to find similar
    pictures of various sizes amd resolutions, different versions of the same picture,
    and even pictures that contain the same objects.
  prefs: []
  type: TYPE_NORMAL
- en: Reverse image search is very useful for ethical hackers as it enables them to
    identify the source and location of the picture, and determine where the picture
    has been used on the internet. If you’re trying to identify the location of where
    a picture was taken by your target, this technology provides you with the capabilities
    to find the location.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are popular search engines for performing reverse image searches:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Google: [https://images.google.com](https://images.google.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Bing: [https://www.bing.com](https://www.bing.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Yandex: [https://yandex.com](https://yandex.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TinEye: [https://tineye.com](https://tineye.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To gain a better understanding of how reverse image search helps ethical hackers
    to identify the geo-location of a target, let’s consider the following scenario:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You’re given a photo and need to identify the location of where the picture
    was taken. In this exercise, we are using a publicly available photo taken by
    photographer Mauro Lima from [https://unsplash.com](https://unsplash.com) as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.10 – An example photograph](image/Figure_6.10_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.10 – An example photograph
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding figure, it’s a lovely picture taken by a photographer
    showing a religious place of worship. Sometimes, it’s recommended to remove any
    objects or subjects from a photo before performing a reverse image search to ensure
    the search engine is better able to identify similar pictures on the internet.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Being able to identify specific architecture styles, signage, flora, and fauna
    can help you determine the specific region of the world a picture was taken. For
    instance, specific types of trees can only be found in certain countries.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use **Cleanup.pictures** ([https://cleanup.pictures](https://cleanup.pictures))
    to remove specific objects from the picture, such as the person and vehicles.
    The following screenshot shows the Cleanup.pictures website with the upload field,
    upload your image here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.11 – Cleanup.pictures website](image/Figure_6.11_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.11 – Cleanup.pictures website
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the eraser brush to select the objects and people you want to remove
    and enable the **Artificial Intelligence** (**AI**) to automatically fill in the
    highlighted area:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.12 – Objects and people](image/Figure_6.12_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.12 – Objects and people
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, ensure you download and save the AI-modified image:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.13 – AI modified image](image/Figure_6.13_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.13 – AI modified image
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use **Remote Background** at [https://www.remove.bg](https://www.remove.bg)
    to remove backgrounds from pictures.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to perform a reverse image search, go to **Google Images** at [https://images.google.com](https://images.google.com)
    and upload the modified image to view the results as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.14 – Reverse image search results](image/Figure_6.14_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.14 – Reverse image search results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the location and similar images were found.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Google Images** has integrated **Google Lens** to improve its image search.
    This technology enables you to select a specific area of the image, or the entire
    thing.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enter the location **Convento de Santo Domingo, Cartagena** within **Google
    Maps** at [https://maps.google.com](https://maps.google.com) as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.15 – Google Maps](image/Figure_6.15_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.15 – Google Maps
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, using the **Street View** feature on Google Maps, you can virtually
    navigate around the location to collect additional intelligence:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.16 – Google Maps Street View](image/Figure_6.16_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.16 – Google Maps Street View
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, we have found the location where the photo
    was taken by the photographer.
  prefs: []
  type: TYPE_NORMAL
- en: As you have now learned, reverse image searching helps ethical hackers to identify
    the geo-location and whereabouts of a target, along with using global mapping
    systems to view the surroundings of the location. This knowledge is also useful
    when performing a physical penetration testing assessment to identify the points
    of entry into a building or compound with the least resistance.
  prefs: []
  type: TYPE_NORMAL
- en: Geo-location analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mapping systems are excellent data sources for ethical hackers to identify the
    physical location of a targeted organization and its vicinity. Imagine you need
    to perform a wireless penetration test on a targeted organization during a black-box
    assessment. You can perform Google searches on the organization’s name to identify
    its websites and check whether its address is listed. Additionally, you can use
    publicly available online maps such as **Google Maps** to identify the physical
    location of an organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, we can use Google Maps to find the physical location of Twitter
    HQ (red pin) and gain a better understanding of the surroundings as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.17 – Locating a company](image/Figure_6.17_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.17 – Locating a company
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Google Maps was able to provide us with
    a picture of the building to better identify the target, its street address, its
    hours of operations, and its contact details, which can be used during future
    operations such as social engineering attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Changing to Satellite view on Google Maps helps us to gain a better visual
    of the layout and surrounding areas of the company, such as identifying a place
    to set up wireless attacks as an ethical hacker:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.18 – Satellite view](image/Figure_6.18_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.18 – Satellite view
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, we can observe there are nearby restaurants that employees are
    likely to visit frequently and may connect their mobile devices to the restaurants’
    wireless networks. As an ethical hacker, you could set up a rogue wireless network
    to trick an employee of your target into connecting and redirect their traffic
    to phishing websites and perform **Domain Name System** (**DNS**) poisoning attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Google Maps provides the Street View feature, which enables ethical hackers
    to interact with panoramic views of streets, allowing you to view the vicinity
    of the target’s building and look for car parks, points of entry, and security
    checkpoints.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows you a street view of the Twitter headquarters
    without you leaving your computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.19 – Street View](image/Figure_6.19_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.19 – Street View
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, you can leverage Street View to look at the sides and
    other pathways that may be convenient and have less security presence for physical
    penetration testing and wireless network assessments.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a side view of the Twitter building with a small
    restaurant:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.20 – Side view](image/Figure_6.20_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.20 – Side view
  prefs: []
  type: TYPE_NORMAL
- en: While ethical hackers use these tactics and techniques to help organizations,
    threat actors are also using them for malicious purposes. Hence, it’s important
    that organizations ensure they perform OSINT penetration testing to ensure their
    cyber defenses are improved and to reduce their attack surface.
  prefs: []
  type: TYPE_NORMAL
- en: During this section, you gained the hands-on skills to collect and analyze imagery
    and geo-location intelligence and gain further insights into how threat actors
    are able to use publicly available information to profile their targets. In the
    next section, you will learn how to collect intelligence on people and users from
    organizations.
  prefs: []
  type: TYPE_NORMAL
- en: People and user intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: People OSINT focuses on collecting information about a person’s names, address,
    telephone numbers, usernames, and even their social media accounts. Such information
    is useful when identifying the employees of a targeted organization and improving
    social engineering attacks to gain a foothold within the target’s network. People
    often create social media accounts and add their company, job title, and contact
    details, which helps threat actors to easily harvest such data when planning their
    attacks. For instance, employees sometimes include their company’s email address
    in their contact information on social media platforms such as LinkedIn and Facebook.
  prefs: []
  type: TYPE_NORMAL
- en: 'Organizations use various formats for their employees’ email addresses, such
    as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**firstname @ domain .** **com**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**firstnameinitial + lastname @ domain .** **com**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**firstname.lastnameinitial @ domain .** **com**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**firstname + lastnameinitial @ domain .** **com**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**fullname @ domain .** **com**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Therefore, if an attacker is collecting OSINT on a targeted organization, collecting
    email addresses from current employees found on social media allows them to determine
    the email format used within the organization. Some companies even publicly post
    their organizational charts on their websites outlining various high-profile employees
    and their departments. Such information can be used to identify specific persons
    and determine their email address format to plan spear-phishing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, there are many online forums where students, professionals, and
    researchers can get help with technical issues such as **Stack Overflow** ([https://stackoverflow.com](https://stackoverflow.com)).
    Attackers can use the information on Stack Overflow to identify the technologies
    and security vulnerabilities that exist within a targeted organization. For instance,
    imagine the technical team is experiencing some issues with an application and
    decides to create an account on Stack Overflow using their real name, job title,
    and organizational name on their profiles. They then proceed to make a post containing
    the technical details of their infrastructure, host operating systems, application
    name, and service version. While this information is useful for anyone providing
    assistance with good intentions, such information reveals a lot to a threat actor
    about their target and makes it easier to identify the attack surface.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an ethical hacker, it’s important to fully understand the tactics and techniques
    that are commonly used by threat actors to collect and analyze data leaks from
    the internet. Sometimes, finding people can be a challenging task, whether you’re
    helping law enforcement or identifying the employees of a targeted organization.
    There are many people-based search engines that can be used for collecting names,
    addresses, telephone numbers, social media accounts, and usernames of individuals.
    The following is a list of both free and commercial people-based search engines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[www.peekyou.com](http://www.peekyou.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[thatsthem.com](http://thatsthem.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[radaris.com](http://radaris.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[www.beenverified.com](http://www.beenverified.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[www.skopenow.com](http://www.skopenow.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: During a penetration test, ethical hackers commonly perform a technique known
    as **password spraying**, whereby a common password is used with multiple usernames
    on the same application or system. The purpose of using password spraying is to
    identify users that have configured their accounts with weak passwords or used
    the same one as others within the organization. Sometimes, the name (user) portion
    of an email address is an employee’s username for accessing a company-owned system
    or application. In some cases, the entire email address is used as the employee’s
    username.
  prefs: []
  type: TYPE_NORMAL
- en: When harvesting email addresses from various data sources on the internet, it’s
    essential to identify whether an address is valid or blacklisted and whether there’s
    an online social media account associated with it. This can be done by performing
    a search on social media websites using the target’s email address to identify
    their social media account on the platform if it exists.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following websites can be used to determine the reputation and validity
    of an email address:'
  prefs: []
  type: TYPE_NORMAL
- en: 'MXToolBox: [https://mxtoolbox.com/emailhealth](https://mxtoolbox.com/emailhealth)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Simply Email Reputation: [https://emailrep.io](https://emailrep.io)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cisco Talos: [https://www.talosintelligence.com/reputation_center/email_rep](https://www.talosintelligence.com/reputation_center/email_rep)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, **Hunter** ([https://hunter.io](https://hunter.io)) enables ethical
    hackers to discover employees, their job titles, and any email addresses associated
    with a targeted domain. Hunter allows you to perform a lookup using the domain
    name of your target, then searches its database and multiple data sources on the
    internet for individuals’ contact details related to this domain name.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows a lookup that was performed on the [microsoft.com](http://microsoft.com)
    domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.21 – Hunter domain lookup](image/Figure_6.21_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.21 – Hunter domain lookup
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Hunter is a useful tool for ethical hackers
    as it helps you to harvest organizational and people intelligence from the internet.
    The data collected from Hunter can be used to plan social engineering attacks
    on a targeted organization.
  prefs: []
  type: TYPE_NORMAL
- en: People and geolocation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are many platforms on the internet that enable people to upload and share
    pictures of themselves and places they’ve visited. Social media and photo-sharing
    platforms are valuable repositories for ethical hackers to identify targets and
    their locations. For instance, imagine you’re given the task of identifying the
    high-profile employees of a targeted organization, determining their whereabouts,
    and identifying any places of interest associated with your target.
  prefs: []
  type: TYPE_NORMAL
- en: You can use social media platforms such as LinkedIn, Facebook, and Twitter to
    perform a lookup/search using the organization’s name and filter the results as
    needed. On an employee’s profile, they may include the target organization and
    their location. Some people often use the check-in feature on social media, which
    provides useful data for threat actors including insights into how often a person
    visits a particular location, travels for work, and when and where the person
    goes on vacation.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get a better understanding of how data can be collected and leveraged by
    adversaries, let’s observe the following Twitter profile of a famous person of
    our times:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.22 – Twitter profile](image/Figure_6.22_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.22 – Twitter profile
  prefs: []
  type: TYPE_NORMAL
- en: The preceding screenshot shows their public profile with lots of data. For instance,
    if you’re looking for a photo of a target, their social media profile will most
    likely have an up-to-date picture of themselves. In addition, the public profile
    picture can then be used with reverse image lookup to identify additional data
    sources that may contain the same or similar pictures on the internet. The preceding
    screenshot also shows the location of the individual, their website, and the age
    of their profile. As previously mentioned, the location helps you identify the
    target’s general location or city. The website on the profile can be used to find
    additional intelligence. Lastly, you can view all the posts and media uploaded
    by the target; much sensitive information can be found within these to help you
    identify the infrastructure of a given target organization.
  prefs: []
  type: TYPE_NORMAL
- en: Social media apps on smartphones enable a user to include their geo-location
    data on their posts to allow their followers, connections, and friends to know
    their location at the time the post was made. Imagine you want to identify all
    the employees of a target organization but all you have is the address of the
    company. As an ethical hacker, you can use **Google Maps** to find the specific
    location of the organization and obtain the GPS coordinates.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get a better understanding of how to geolocate people based on their GPS
    data, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the web browser and go to **Google Maps** at [https://maps.google.com](https://maps.google.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, left-click anywhere on the map to place a point as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.23 – Collecting GPS data](image/Figure_6.23_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.23 – Collecting GPS data
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the preceding screenshot, Times Square was used as an example.
    Once you’ve clicked on a specific spot on Google Maps, a pin is inserted and the
    URL is updated to include the GPS data coordinates: **40.757791,-73.9854071**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to find all the people who’ve posted from this location, go to [https://twitter.com](https://twitter.com)
    and enter the following syntax within the **Search** field:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The preceding syntax will show the results for all profiles that posted within
    1 km of the GPS coordinates as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.24 – Filtering posts based on GPS data](image/Figure_6.24_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.24 – Filtering posts based on GPS data
  prefs: []
  type: TYPE_NORMAL
- en: The preceding exercise is a proof-of-concept that can be used to obtain the
    GPS coordinates of a targeted organization and filter the posts made by people
    from that location. Some of the posts found will most likely be made by employees;
    hence, it’s important to analyze all the collected data to ensure it’s useful
    for your OSINT operations and for planning future attacks.
  prefs: []
  type: TYPE_NORMAL
- en: When profiling a person or employee, it’s important to ensure you’re not collecting
    data on a fake profile or performing a reverse image lookup on a fake profile
    picture. A website such as **WhatsMyName** ([https://whatsmyname.app](https://whatsmyname.app))
    is useful for ethical hackers and penetration testers to search usernames across
    multiple data sources and websites on the internet to identify where a specific
    username is registered. The results help you to determine additional areas on
    the internet where a target may be posting more useful information.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the WhatsMyName website with the lookup field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.25 – WhatsMyName lookup](image/Figure_6.25_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.25 – WhatsMyName lookup
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, you can use websites such as **TinEye** ([https://tineye.com](https://tineye.com))
    and **PimEyes** ([https://pimeyes.com](https://pimeyes.com)) to perform a reverse
    image search on a person’s picture to identify where on the internet similar images
    or the same images are found. These tools are useful for law enforcement when
    trying to find a missing person and track their movement.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the search results for a fake picture of a non-existent
    person on TinEye:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.26 – TinEye results](image/Figure_6.26_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.26 – TinEye results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, TinEye was able to identify similar pictures
    on the internet with their data sources, URLs, filenames, and first-seen data.
  prefs: []
  type: TYPE_NORMAL
- en: 'PimEyes uses face recognition to better identify the person within a picture.
    The following screenshot shows the PimEyes results of a fake picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.27 – PimEyes results](image/Figure_6.27_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.27 – PimEyes results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, PimEyes was able to identify people with
    very similar facial structures and attributes, while providing the source of the
    data and more.
  prefs: []
  type: TYPE_NORMAL
- en: User credential OSINT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many people commonly configure weak passwords or have experienced their accounts
    being compromised by a hacker. Often, when accounts are compromised, the breached
    data is used by adversaries to expand their operations and for future attacks,
    and can also be sold on the dark web for profit. As an ethical hacker, access
    to breached data is beneficial as it provides us with user credentials for a targeted
    organization.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, imagine you’re performing a penetration test on a network and
    attempting to gain a foothold into Windows-based systems that are connected to
    the domain. If the company was breached prior to the penetration test, there’s
    a chance the breached data is available on the dark web or online databases. Within
    the breached data, you may find users’ credentials for their domain accounts.
    Some users may change their passwords after a breach, while others may not. For
    users who haven’t changed their password after their accounts were compromised,
    you can leverage their user credentials from the breached data to gain a foothold
    into the network and perform various types of password-based attacks to identify
    additional security vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are free and commercial repositories and databases that help
    ethical hackers and penetration testers to identify the user credentials of their
    target:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Have I Been Pwned?: [https://haveibeenpwned.com](https://haveibeenpwned.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Intelligence X: [https://intelx.io](https://intelx.io)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dehashed: [https://www.dehashed.com](https://www.dehashed.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Ethical hackers can use **Have I Been Pwned?** to identify whether email addresses
    and telephone numbers were found in batches of leaked data. For instance, an ethical
    hacker can perform a lookup on their target’s email address as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.28 – Have I Been Pwned?](image/Figure_6.28_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.28 – Have I Been Pwned?
  prefs: []
  type: TYPE_NORMAL
- en: '*Have I Been Pwned?* provides results showing which data breaches contained
    the email address as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.29 – Search results](image/Figure_6.29_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.29 – Search results
  prefs: []
  type: TYPE_NORMAL
- en: The preceding data can be analyzed by ethical hackers to further determine the
    validity of the email address and its holder, and the websites on which the target
    used the email address to register for an account. In addition, hackers usually
    expose compromised account data such as usernames and passwords on the internet.
    Without some additional research, you may be able to find the password for the
    email account. Sometimes, users are not aware of data breaches and don’t always
    change their passwords often. You may be lucky enough to find valid user credentials
    belonging to your target and use them to gain a foothold into their accounts,
    systems, or networks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, if you scroll all the way down to the end of the results page
    on *Have I Been Pwned?*, you will get the pastes (sources) for all data breaches
    containing the given email address, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.30 – Breached data sources](image/Figure_6.30_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.30 – Breached data sources
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, **Intelligence X** helps ethical hackers to locate user credentials
    from breached data. For instance, you can perform an email lookup to identify
    all relevant data associated with the email address, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.31 – Intelligence X email lookup](image/Figure_6.31_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.31 – Intelligence X email lookup
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the data provided by Intelligence X:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.32 – Intelligence X results](image/Figure_6.32_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.32 – Intelligence X results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Intelligence X provides some results freely,
    while other results contain redacted data. A paid account/subscription is required
    to view the redacted data on Intelligence X.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an ethical hacker, you can click on a data collection to view all its contents,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.33 – Data collection](image/Figure_6.33_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.33 – Data collection
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, some data collections contain a lot of
    entries, so using the search field will help you find specific results within
    a data collection.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, **Dehashed** is an online database that allows ethical hackers to purchase
    user credentials from data breaches. This website is a valuable tool for ethical
    hackers and penetration testers who are performing password-based attacks on accounts
    and systems of a targeted organization. It allows you to perform lookups on email
    addresses, usernames, IP addresses, names, addresses, telephone numbers, and domain
    names.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to collect and analyze OSINT
    on people and their geo-locations, and locate data breaches that contain user
    credentials. In the next section, you will learn how to collect and analyze data
    on wireless signals.
  prefs: []
  type: TYPE_NORMAL
- en: Wireless signals intelligence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Wireless **Signals Intelligence** (**SIGINT**) is a common technique used by
    ethical hackers, penetration testers, and red teamers to intercept and analyze
    wireless traffic to discover and exploit security vulnerabilities found in both
    radio and wireless transmissions. SIGINT is typically used in military operations
    by governments to monitor the communication channels of other countries and identify
    potential threats. However, using various tools and techniques, cybersecurity
    professionals can employ SIGINT to identify their target’s wireless network infrastructure
    (such as access points and associated clients), intercept and monitor **Wireless
    Local Area Network** (**WLAN**) frames, which can then be used to retrieve passphrases
    for accessing the network, and locate devices within a vicinity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Organizations obtain the following benefits from performing SIGINT techniques
    on their wireless infrastructure:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identifying security vulnerabilities**: Ethical hackers can capture and analyze
    the WLAN traffic on their target’s network to identify any security vulnerabilities
    such as weak wireless security standards, weak encryption algorithms, and insecure
    authentication protocols'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reconnaissance**: Ethical hackers can perform wireless SIGINT to gain insights
    into things such as the targeted wireless network infrastructure, the type of
    wireless devices and their usage, and what security countermeasures can be implemented
    to reduce the attack surface'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing security controls**: After implementing cyber defenses and security
    controls, its good practice to test the effectiveness of those countermeasures
    to ensure they are working as expected to reduce the risk of a potential cyberattack
    or threat'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improving incident response and handling**: If an attacker was able to gain
    a foothold into an organization’s network via their wireless infrastructure, cybersecurity
    professionals could perform wireless SIGINT to identify the tools, techniques,
    and source of the attack to improve their **Cyber Threat** **Intelligence** (**CTI**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generally, wireless SIGINT helps organizations to better understand the attack
    surface of their wireless network infrastructure from an adversary’s perspective
    and the techniques that can be used to potentially compromise the network. The
    data collected during SIGINT helps ethical hackers to provide recommendations
    to their customers and organizations for improving their security posture, situational
    awareness, and incident response and handling. However, keep in mind that ethical
    hackers must obtain legal permission from the relevant authorities before performing
    wireless SIGINT.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will learn how to build a portable/mobile infrastructure for performing
    wireless SIGINT.
  prefs: []
  type: TYPE_NORMAL
- en: Building a SIGINT infrastructure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Many ethical hackers and penetration testers use a laptop with an external wireless
    network adapter that supports monitoring mode and packet injection to collect
    and analyze wireless signals within a vicinity. However, if you want to create
    a more compact setup that can be placed in a backpack for war-walking or mounted
    on an aerial drone for war-flying, then a laptop isn’t the best choice due to
    its size and weight. We can leverage the power of microcomputers such as a **Raspberry
    Pi** running **Kali Linux ARM** to perform reconnaissance on a target’s wireless
    network.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a list of materials that will be needed to set up our portal
    wireless signals infrastructure:'
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi 3 B+
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 32-GB Samsung EVO+ microSD card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A micro-USB cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Alfa AWUS036NHA Wireless B/G/N USB adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A VK-162 G-Mouse USB GPS Dongle Navigation Module
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A portable power bank
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raspberry Pi is a microcomputer with sufficient computing power to run **Kismet**,
    a wireless signals intelligence tool for monitoring IEEE 802.11, Bluetooth, and
    RF signals and detecting wireless network intrusions. The microSD card will be
    used to store the Kali Linux ARM operating system and all the data collected.
    The Alfa AWUS036NHA wireless network adapter supports monitoring mode and packet
    injection and connects to Raspberry Pi. The VK-162 G-Mouse USB GPS Dongle is used
    to collect the GPS coordinates of wireless stations (clients) and access points
    when they are found. The portable power bank will supply power to Raspberry Pi
    while war-walking, war-driving, or war-flying.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the signals intelligence infrastructure when assembled:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 6.34 – Signal\uFEFFs intelligence infrastructure](image/Figure_6.34_B19448.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 6.34 – Signals intelligence infrastructure
  prefs: []
  type: TYPE_NORMAL
- en: In addition, we’ll configure Raspberry Pi as an access point with a **Dynamic
    Host Configuration Protocol** (**DHCP**) server to provide IP addresses and subnet
    masks to any device that’s connected to its **wlan0** interface. This enables
    us to easily connect our laptop and use **Secure Shell** (**SSH**) to securely
    access the Kali Linux ARM operating system that’s running on Raspberry Pi during
    our wireless penetration testing assessments.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with setting up Raspberry Pi for signals intelligence, please
    use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 – Installing Kali Linux ARM
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, download and install **Raspberry Pi Imager** from [https://www.raspberrypi.com/software/](https://www.raspberrypi.com/software/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, download the official **Kali Linux ARM** operating system from [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)
    for your version of Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.35 – Kali Linux ARM](image/Figure_6.35_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.35 – Kali Linux ARM
  prefs: []
  type: TYPE_NORMAL
- en: Next, connect the microSD card to your host computer using an SD card reader.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To load the Kali Linux ARM operating system onto the microSD card, launch **Raspberry
    Pi Imager** and click on **CHOOSE OS** as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.36 – Raspberry Pi Imager](image/Figure_6.36_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.36 – Raspberry Pi Imager
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the **Operating System** window will appear. Click on **Use custom**
    as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.37 – Operating System menu](image/Figure_6.37_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.37 – Operating System menu
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, select the **Kali Linux ARM** file and click on **Open** to load it onto
    **Raspberry** **Pi Imager**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.38 – Kali Linux ARM file](image/Figure_6.38_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.38 – Kali Linux ARM file
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, return to the main menu on **Raspberry Pi Imager**, click on **CHOOSE
    STORAGE**, and select the microSD card as the **Storage** device. Then, click
    on the gear icon to open the advanced options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.39 – Writing the operating system](image/Figure_6.39_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.39 – Writing the operating system
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the **Advanced options** menu will appear. Check the **Enable SSH** box,
    set a username and password (**kali**/**kali**), and click on **SAVE**, as shown
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.40 – Enabling SSH](image/Figure_6.40_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.40 – Enabling SSH
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you will automatically be returned to the **Raspberry Pi Imager** main
    window. Click on **WRITE** to begin writing the Kali Linux ARM OS image to the
    microSD card:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.41 – Write button](image/Figure_6.41_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.41 – Write button
  prefs: []
  type: TYPE_NORMAL
- en: This process usually takes a few minutes to write and verify.
  prefs: []
  type: TYPE_NORMAL
- en: Once the write process is completed, insert the microSD card into Raspberry
    Pi, connect the GPS dongle and wireless network adapter, and power up the device
    by connecting it to a power source.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, connect Raspberry Pi to your wired network using a network cable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to your modem, router, or DHCP server to determine the IP address assigned
    to Raspberry Pi. The IP address will be required for the next steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 2 – Setting up Kismet with GPS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are using a **Windows 10** computer, open **Command Prompt** and execute
    the **powershell** command before proceeding to the next step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you are using a **Windows 11** or Linux-based operating system, open the
    **Terminal** and use the **ssh kali@ip-address** syntax, where **ip-address**
    is the IP address of Raspberry Pi on your network. Log in using the default user
    credentials of **kali**/**kali** as the username and password as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 6.42 – Connecting to Raspberry P\uFEFFi](image/Figure_6.42_B19448.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 6.42 – Connecting to Raspberry Pi
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, we are using SSH to securely access Raspberry
    Pi over the network to perform additional configurations and continue the setup
    process.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Press *Ctrl* + *P* to change the layout of the Terminal prompt.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following command to update the software package repository file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, install the latest version of Kismet and the GPS packages on Raspberry
    Pi using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use the **dmesg | grep tty** command to display the kernel messages
    associated with the **teletypewriter** (**tty**) subsystem. This command helps
    you to determine whether an attached USB device is detected and recognized by
    the operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you’ll need to modify Kismet’s configurations to ensure the **gpsd**
    package is able to connect to the GPS dongle and send data to Kismet. To do this,
    use the following command to open the **kismet.conf** file in the **nano** command-line
    text editor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the down arrow on your keyboard to scroll down the text file until
    you’ve found the GPS settings. Then, insert the following on a new line:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This should look as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.43 – Modifying the GPS settings in Kismet](image/Figure_6.43_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.43 – Modifying the GPS settings in Kismet
  prefs: []
  type: TYPE_NORMAL
- en: Next, to save the modifications to the **kismet.conf** file, press *Ctrl* +
    *X*, then *Y*, and hit *Enter*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, configure **gpsd** to work with the GPS receiver on USB0 with the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Reboot Raspberry Pi using the **sudo reboot** command and log in again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, having ensured the GPS dongle has a clear vertical line of sight to the
    sky, use either the **cgps –s** or **gpsmon** commands to receive GPS data from
    orbital satellites, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.44 – cgps data](image/Figure_6.44_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.44 – cgps data
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, the GPS software and dongle were able
    to identify and connect to a few satellites (right column). Additionally, Raspberry
    Pi was able to retrieve its current GPS coordinates (blurred for privacy) and
    other data for positioning and tracking. Press *Ctrl* + *C* to stop **cgps** from
    running.
  prefs: []
  type: TYPE_NORMAL
- en: Part 3 – setting up an access point on Raspberry Pi
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Setting up Raspberry Pi to function as an access point enables us to connect
    wirelessly to it using a mobile device such as a laptop or smartphone, hence removing
    the need for a wired connection. This makes Raspberry Pi fully autonomous and
    mobile for war-driving, war-walking, or war-flying exercises. Let’s do this as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On Raspberry Pi, download and install the **dnsmasq** and **hostapd** packages
    for configuring wireless and IP services:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the following commands to stop the **dnsmasq** and **hostapd** services
    until they’re needed later:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, we need to set the parameters for the wireless network that will be broadcasted
    from the **wlan0** interface. Use the following command to edit the **hostapd.conf**
    file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, insert the following configurations into the **hostapd.conf** file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Keep in mind, you can change **MyNetwork** to any wireless network name of
    your choice, and **Password123** to a stronger password for the network. The following
    screenshot shows the preceding configurations within the **hostapd.conf** file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.45 – Hostapd configurations](image/Figure_6.45_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.45 – Hostapd configurations
  prefs: []
  type: TYPE_NORMAL
- en: Press *Ctrl* + *X*, then press *Y*, and hit *Enter* to save the file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, install the **dhcpcd** package, which we will use to configure a static
    IP address on the **wlan0** interface of Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, modify the **dhcpcd** configuration file to assign the **192.168.4.1**
    address to the **wlan0** wireless adapter using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Insert the following parameters at the end of the **dhcpcd.conf** file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding parameters inserted at the end
    of the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.46 – dhcpcd file](image/Figure_6.46_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.46 – dhcpcd file
  prefs: []
  type: TYPE_NORMAL
- en: Press *Ctrl* + *X*, then press *Y*, and hit *Enter* to save the file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, restart the **dhcpcd** service and enable it to automatically start on
    system boot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, back up the **dnsmasq** configuration file and create a new file using
    the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Then, insert the following parameters in the new **dnsmasq** configuration
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The following screenshot shows the preceding parameters within the **dnsmasq**
    configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.47 – DNSmasq configurations](image/Figure_6.47_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.47 – DNSmasq configurations
  prefs: []
  type: TYPE_NORMAL
- en: The configurations shown in the preceding screenshot are used to provide an
    IP address and subnet mask to any client that connects to the wireless network
    that’s generated from the **wlan0** interface on Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enable and restart the **dnsmasq** and **hostapd** services with the
    following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Lastly, use the **sudo reboot** commands to reboot Raspberry Pi. After the device
    is rebooted, you will see the **MyNetwork** wireless network is available. Now
    you can connect to Raspberry Pi using the wireless network, and your device will
    receive an IP address within the **192.168.4.2** – **192.168.4.20** range. Then,
    you can access Raspberry Pi over SSH with the **192.168.4.1** address that’s statically
    configured on its **wlan0** interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 4 – Monitoring and data collection
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You’ll need to change the operating mode of your external wireless network
    adapter from manage to monitor mode. Use the **iwconfig** command to view the
    list of wireless adapters on Raspberry Pi as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.48 – Wireless network adapters](image/Figure_6.48_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.48 – Wireless network adapters
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, **wlan0** is the embedded wireless adapter
    that’s used for the access point on Raspberry Pi and **wlan1** is the external
    adapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use **airmon-ng** to enable monitoring mode on the **wlan1** adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the expected results when creating **wlan1mon**,
    the adapter with monitor mode:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure \uFEFF6.49 – Enabling monitor mode](image/Figure_6.49_B19448.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 6.49 – Enabling monitor mode
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **iwconfig** command to verify **wlan1mon** was created and that
    it’s operating in monitor mode as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.50 – Verifying the adapter](image/Figure_6.50_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.50 – Verifying the adapter
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, create a new directory called **wardrive** to store the collected data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: When Kismet is running, you’ll be required to stay connected to the Kismet terminal.
    Any disruption of the connection will stop Kismet. To prevent this issue, we’ll
    use **Tmux**, which is a multiplexer terminal that lets us send terminal windows
    to the background without losing the session. Therefore, we can start a Tmux session,
    disconnect from Raspberry Pi, and then reconnect and regain access to the Tmux
    session. To learn more about Tmux, please see [https://github.com/tmux/tmux](https://github.com/tmux/tmux).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, start a **Tmux** session using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Once the new Tmux session has opened, use the following commands to run **Kismet**
    and attach the monitor-mode wireless adapter to it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows Kismet running with the GPS daemon attached,
    and our signals intelligence monitoring has started:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.51 – Starting Kismet](image/Figure_6.51_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.51 – Starting Kismet
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, you can access the Kismet web interface
    by going to [http://ip-address-rasp-pi:2501](http://ip-address-rasp-pi:2501).
  prefs: []
  type: TYPE_NORMAL
- en: Next, to send the current Tmux session to the background, press *Ctrl* + *B*,
    then press *D*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At this point, if your Raspberry Pi is connected to a portable power bank, you
    can also terminate the SSH session and start war-driving, war-walking, or war-flying
    to collect signals intelligence within an area.
  prefs: []
  type: TYPE_NORMAL
- en: Part 5 – Using the Kismet web interface
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: While you’re still connected to the access point from Raspberry Pi, open your
    web browser and go to [http://ip-address-rasp-pi:2501](http://ip-address-rasp-pi:2501)
    to access the Kismet web interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, set your preferred login credentials to access Kismet and log in. The
    following screenshot shows the main dashboard of Kismet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.52 – Kismet web interface](image/Figure_6.52_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.52 – Kismet web interface
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, beacons and probes are captured and analyzed
    by Kismet. Beacons are WLAN frames sent from access points and probes are sent
    from clients. Additionally, in the top-right corner, you will notice your GPS
    coordinates will appear.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to display all access points within the vicinity, click on **Devices**
    | **Wi-Fi Access Points** as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.53 – Filtering access points](image/Figure_6.53_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.53 – Filtering access points
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the dashboard will display only access points. Using the interface, you
    can identify their signal strength, view the amount of data transmitted, see the
    wireless security features, and more. Click on any wireless access point to view
    specific data, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.54 – Access point intelligence](image/Figure_6.54_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.54 – Access point intelligence
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, we are able to identify the specific 2.4-GHz
    channel and the frequency used by the target, along with the signal strength,
    MAC address of the access point, and manufacturer. Such information helps you
    to better profile the target device and determine the operating channel and approximate
    distance between your device and the targeted access point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, expand the **Wi-Fi (802.11)** tab to view the wireless network settings
    as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.55 – Wireless settings](image/Figure_6.55_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.55 – Wireless settings
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Kismet is able to identify the amount
    of WLAN frames (traffic) traveling through the targeted access point, advertised
    **Service Set Identifiers** (**SSIDs**), and whether there are multiple SSIDs
    advertised from the same access point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, on the same **Wi-Fi (802.11)** tab, you can see a list of stations (clients)
    that are associated with the access point:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.56 – Stations](image/Figure_6.56_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.56 – Stations
  prefs: []
  type: TYPE_NORMAL
- en: The stations are represented by their MAC addresses. Clicking on a station provides
    additional details such as data transmitted, connection status, and times of first
    and last connected. If an access point is configured with MAC address filtering,
    obtaining a list of authorized MAC addresses will be useful during a wireless
    network penetration testing assessment.
  prefs: []
  type: TYPE_NORMAL
- en: 'To view more details about a station, click on **View Client Details** to open
    a new window as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.57 – Viewing a station’s details](image/Figure_6.57_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.57 – Viewing a station’s details
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, Kismet helps us determine the associated
    wireless network of a client, and whether the client is sending probes for any
    additional wireless networks. As an ethical hacker, you can set up a rogue access
    point to advertise the SSIDs found within probes. This technique can be used to
    trick the target into connecting to the fake network and capturing the WPA or
    WPA2 handshake, which can then be used to perform password cracking.
  prefs: []
  type: TYPE_NORMAL
- en: Part 6 – Mapping the data onto Google Earth
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After you’ve collected the data, use the **tmux ls** command to view the Tmux
    session ID for the background session:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: As shown here, session ID **0** is the background session that’s running Kismet.
  prefs: []
  type: TYPE_NORMAL
- en: 'To re-attach the background session to Tmux, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshots the Kismet session re-attached and running as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.58 – Kismet](image/Figure_6.58_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.58 – Kismet
  prefs: []
  type: TYPE_NORMAL
- en: 'To gracefully stop Kismet and save the collected data, press *Ctrl* + *C* to
    stop the process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 6.59 – Stopping Kismet](image/Figure_6.59_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.59 – Stopping Kismet
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Kismet is stopped, a **.kismet** file is automatically created containing
    all the collected data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.60 – Kismet file](image/Figure_6.60_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.60 – Kismet file
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, type **exit** to leave the Tmux terminal and return to the default shell
    on the Linux terminal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the following commands to convert the **.kismet** file into a **.****kml**
    file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following screenshot shows the output during the conversion process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.61 – Creating a KML file](image/Figure_6.61_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.61 – Creating a KML file
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: '**Keyhole Markup Language** (**KML**) is a data format that is used to represent
    geographic data and visualization within 2D and 3D mapping systems such as **Google
    Earth**.'
  prefs: []
  type: TYPE_NORMAL
- en: Next, reconnect Raspberry Pi to your network and use a tool such as **WinSCP**
    to securely connect and download the **.kml** file onto your host computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, download and install **Google Earth Pro** from [https://www.google.com/earth/versions/](https://www.google.com/earth/versions/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, launch the **Google Earth Pro** application on your computer and click
    on **File | Open...** to attach the **.kml** file as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 6.62 – Google Earth Pro \uFEFFFile menu](image/Figure_6.62_B19448.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 6.62 – Google Earth Pro File menu
  prefs: []
  type: TYPE_NORMAL
- en: 'After the **.kml** file is loaded, Google Earth Pro shows yellow pins that
    represent the locations of wireless devices such as access points and stations
    discovered using Kismet, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.63 – Mapping wireless devices](image/Figure_6.63_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.63 – Mapping wireless devices
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, signals intelligence helps you to better understand the
    wireless landscape around your target, which is especially useful if you’re trying
    to find your target’s wireless networks and clients. Having completed this section,
    you have learned how to perform wireless signals intelligence.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During this chapter, you learned how images contain a lot of data that can be
    leveraged by adversaries to identify the location of a target and their whereabouts.
    In addition, you gained the skills to extract EXIF data from images and use it
    with global mapping systems to identify a target’s geo-location at the time the
    picture was taken. Furthermore, you learned how to collect and analyze intelligence
    on people and search data breaches to identify user credentials for gaining access
    to a target’s account, system, or network.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, you learned about the importance of performing wireless SIGINT as an
    ethical hacker and gained the hands-on skills for constructing a mobile wireless
    SIGINT infrastructure for war-driving, war-walking, and war-flying.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this chapter has been informative and helpful for your journey in the
    cybersecurity industry. In the next chapter, *Working with Active Reconnaissance*,
    you will learn how to determine open ports and running services, profile operating
    systems, and enumerate resources on hosts.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OSINT attack surface diagrams: [https://www.osintdojo.com/diagrams/main](https://www.osintdojo.com/diagrams/main)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'OSINT tools and tutorials: [https://osint.tools/](https://osint.tools/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'SIGINT: [https://www.techtarget.com/whatis/definition/SIGINT-signals-intelligence](https://www.techtarget.com/whatis/definition/SIGINT-signals-intelligence)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Understanding location data: [https://www.quadrant.io/resources/location-data](https://www.quadrant.io/resources/location-data)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Part 2: Scanning and Enumeration'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will learn how to perform advanced scanning techniques
    to discover hosts, identify security vulnerabilities on systems, enumerate common
    network services, collect intelligence on websites, and identify reconnaissance
    activities in a network.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B19448_07.xhtml#_idTextAnchor111), *Working with Active Reconnaissance*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B19448_08.xhtml#_idTextAnchor129), *Performing Vulnerability
    Assessments*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B19448_09.xhtml#_idTextAnchor145), *Delving into Website Reconnaissance*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B19448_10.xhtml#_idTextAnchor165), *Implementing Recon Monitoring
    and Detection Systems*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
