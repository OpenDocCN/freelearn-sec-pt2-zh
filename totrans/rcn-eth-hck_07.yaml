- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Working with Active Reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The more information known about a target, the more ethical hackers are able
    to identify security vulnerabilities, which can be exploited to get unauthorized
    access to the systems and networks of organizations. Active reconnaissance helps
    ethical hackers and penetration testers to collect and analyze information about
    a target that’s not accessible or available during passive reconnaissance. Since
    passive reconnaissance relies on **Open Source Intelligence** (**OSINT**) and
    publicly available information from multiple online sources, the information may
    not be up to date, and inaccuracy affects planning future operations such as weaponization
    and exploitation of the target. With active reconnaissance, ethical hackers collect
    data in real time to better identify security vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, you will learn how to efficiently scan hosts on a network to
    identify their operating systems, open ports, and running services using automated
    tools and techniques. In addition, you will gain hands-on experience in spoofing
    your identity and evading threat detection systems, such as firewalls and **Intrusion
    Detection Systems** (**IDSes**), while performing host discovery on a network.
    Lastly, you will learn how to enumerate sensitive data from vulnerable systems
    on a network and perform wireless reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Automating reconnaissance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spoofing your identity on a network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering live hosts on a network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using evasion techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enumerating network services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wireless reconnaissance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Kali Linux: [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Metasploitable 3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An Alfa AWUS036NHA – Wireless B/G/N USB adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unlike passive reconnaissance, which leverages OSINT to help ethical hackers
    create a profile of a target, active reconnaissance uses a more direct approach
    by sending probes to the targeted systems and networks to collect sensitive and
    specific details. For instance, during passive reconnaissance, the threat actor
    depends on the accuracy of the collected data from multiple online sources. If
    the data is outdated or inaccurate, it can affect both the weaponization and exploitation
    phases and prevent ethical hacking from gaining access to the target. With active
    reconnaissance, the collection of data is performed in real time, enabling ethical
    hacking to collect and analyze current data to help improve future operations.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Scanning is intrusive and illegal in many countries, so ensure that you obtain
    legal permission from the authorities before scanning any system or network you
    do not own.
  prefs: []
  type: TYPE_NORMAL
- en: 'Active reconnaissance plays an important role during ethical hacking and penetration
    testing, as it helps cybersecurity professionals to collect data about live systems
    on a network, and such data can be leveraged to identify the attack surface, which
    consists of the vulnerable points of entry that can be exploited to gain a foothold
    into a target. The following are the various types of data that can be collected
    to better profile the target or the targeted systems:'
  prefs: []
  type: TYPE_NORMAL
- en: The number of live hosts on a network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open service ports on systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running services (banner grabbing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The operating systems of host devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying security vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The network topology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The placement of networking devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying security appliances
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To identify live hosts, an ethical hacker sends specially crafted probes on
    the network. This helps the ethical hacker to determine whether a targeted host
    is online or not before attempting any future actions, such as enumeration and
    vulnerability analysis. This is commonly referred to as **network scanning** or
    **host discovery**.
  prefs: []
  type: TYPE_NORMAL
- en: After the targeted host(s) are discovered on the network, the next step is to
    identify any open service port on the device. These ports are the entry and exit
    points within an operating system, and they are associated with an application-layer
    protocol within the **Transmission Control Protocol/Internet Protocol** (**TCP/IP**)
    networking model. Before a client sends packets onto a network, it opens an ephemeral/dynamic
    port for the outgoing traffic. When a server runs an application such as Apache
    HTTP Server, it opens either port **80** or **443** to listen for incoming packets.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the source and destination addressing information
    that will be included within a packet from a client to a web server over a network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1 – The HTTP request message](image/Figure_7.01_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.1 – The HTTP request message
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows how the source information from the client is used
    to send a response from the server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2 – The HTTP response](image/Figure_7.02_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.2 – The HTTP response
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, identifying open ports helps us to determine the running
    services on a targeted system. In addition, you can attempt to perform banner
    grabbing to identify the service versions of all running services. The service
    version can be leveraged to find known security vulnerabilities and their severity
    for a specific service on the targeted system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table shows the categories of port numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3 – Port number ranges](image/Figure_7.03_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.3 – Port number ranges
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding table, ports **1**–**1023** are commonly referred
    to as well-known ports, as these ports are associated with common application-layer
    protocols such as **Hypertext Transfer Protocol Secure** (**HTTPS**), **Domain
    Name System** (**DNS**), and **Simple Mail Transfer Protocol** (**SMTP**). Registered
    ports are simply network service ports that are designated to specific application-layer
    protocols or services, and private/dynamic ports are temporarily open to send
    packets from a client to other systems on a network.
  prefs: []
  type: TYPE_NORMAL
- en: Next, it’s important to identify the operating system of targeted hosts, as
    it helps ethical hackers to identify possible security vulnerabilities that can
    be exploited to gain a foothold on the target. In addition, different operating
    systems have different security controls and mechanisms, and architectures that
    can make them more or less secure to various types of cyberattacks and threats.
    Therefore, such information can be leveraged by ethical hackers to customize their
    exploits and payloads for specific security vulnerabilities on a specific operating
    system.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, if your target runs outdated versions of an operating system such
    as Microsoft Windows 7, you can research known security vulnerabilities and how
    they can be exploited. For example, **Microsoft Security Bulletin MS17-010** describes
    a known security vulnerability within Microsoft Windows 7–Windows Server 2016
    operating systems, which enables an attacker to perform **Remote Code Execution**
    (**RCE**) by exploiting the Microsoft **Server Message Block** (**SMB**) version
    1 service on the host. Such information is useful when performing vulnerability
    analysis and developing a payload for the exploitation phase.
  prefs: []
  type: TYPE_NORMAL
- en: When scanning a network, ethical hackers can determine the layout of the network
    topology, such as identifying the placement of network switches and routers, and
    security appliances such as firewalls. This information helps you to understand
    what type of devices are between your attacker machine and the targeted host.
    If there are routers on the network, these routers may be configured with packet-filtering
    capabilities such as **Access Control Lists** (**ACLs**) to filter specific layer
    3 and layer 4 traffic between a source and destination. If firewalls are present
    on the network, they may be configured to perform **Deep Packet Inspection** (**DPI**)
    to inspect application-layer traffic for malicious code and advanced filtering
    between networks. Hence, understanding the network topology helps you to better
    plan your attacks and future operations.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned the importance of active reconnaissance
    and how it helps ethical hackers during their security assessments. Next, you
    will learn how to spoof your device’s identity on a network.
  prefs: []
  type: TYPE_NORMAL
- en: Spoofing your identity on a network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ethical hackers commonly use the same **Tactics, Techniques, and Procedures**
    (**TTPs**) as real adversaries and threat actors, with the intention of efficiently
    discovering hidden security vulnerabilities on a target’s systems and network
    before a real hacker is able to discover and exploit them. A common technique
    used during ethical hacking, penetration testing, and red teaming is concealing
    your identity by spoofing your device’s IP address and **Media Access Control**
    (**MAC**) address.
  prefs: []
  type: TYPE_NORMAL
- en: A device can be assigned an IP address via a **Dynamic Host Configuration Protocol**
    (**DHCP**) server on a network or statically assigned by a user. Any of these
    methods allow an IP address to be assigned to the device’s **Network Interface
    Card** (**NIC**). There’s a unique 48-bit hexadecimal MAC address that’s embedded
    into the firmware of the network adapter by its manufacturer. Whenever a device
    sends a frame (message) on a network, the source MAC address of the sender and
    the destination MAC address of the target are inserted into the frame header.
    The first 24 bits of a MAC address are unique to the manufacturer, which is known
    as the **Organizational Unique Identifier** (**OUI**), and anyone can perform
    a vendor lookup on any MAC address using various online databases to determine
    the manufacturer and type of device. Cybersecurity and networking professionals
    can capture and analyze packets on a network to identify unauthorized devices
    based on their IP and MAC addresses.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are online databases to perform MAC vendor lookup:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Wireshark OUI Lookup tool: [https://www.wireshark.org/tools/oui-lookup.html](https://www.wireshark.org/tools/oui-lookup.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'MAC Vendors: [https://macvendors.com/](https://macvendors.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'MACaddress.io: [https://macaddress.io/](https://macaddress.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As an ethical hacker, consider changing the MAC address of your attacker machine
    to something that is very common on a typical network within an organization,
    such as an IP phone, network printer, or a popular brand of devices. The tactic
    is to ensure that your device does not stand out or attract the attention of the
    security team during your ethical hacking and penetration testing exercises. Therefore,
    if your device is assigned the MAC address of a network printer or an IP phone,
    an inexperienced security professional may not notice your device sending probes
    to other systems on the network to collect information.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with spoofing the identity of your attacker machine, please
    use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on your **Kali Linux** virtual machine and log in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following commands to verify the MAC address
    of the **eth1** network adapter that’s connected to the **172.30.1.0/24** (*PentestNet*)
    network within our lab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that the **eth1** network adapter is assigned the
    **08:00:27:7d:98:8e** MAC address:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.4 – Verifying the MAC address](image/Figure_7.04_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.4 – Verifying the MAC address
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, change the **eth1** network adapter status to **down**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, we can use the pre-installed **macchanger** tool to view the different
    options for altering the MAC address on the network adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows there are various options to change the MAC address
    on the network adapter, such as randomly generating one, statically setting the
    MAC address of your preference, and assigning an address based on a vendor:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.5 – The MAC changer menu](image/Figure_7.05_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.5 – The MAC changer menu
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, assign a randomly generated MAC address to the **eth1** network adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the current (original) MAC address and the new
    randomly generated address on the network adapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.6 – The spoofed MAC address](image/Figure_7.06_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.6 – The spoofed MAC address
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following command to re-enable the **eth1** network adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use either the **ip address show eth1** or **ifconfig eth1** commands
    to verify the **eth1** network adapter is up and assigned the spoofed MAC address,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.7 – Verifying the interface status](image/Figure_7.07_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.7 – Verifying the interface status
  prefs: []
  type: TYPE_NORMAL
- en: Any frames that originate from the **eth1** network adapter of your Kali Linux
    machine will be assigned the spoofed MAC address as the new source MAC address.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to spoof the MAC address
    of a network adapter to spoof the identity of your device. In the next section,
    you will learn how to discover and profile hosts on a network.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering live hosts on a network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Host discovery is an important part of ethical hacking and penetration testing,
    as it enables an ethical hacker to identify which systems on a network are discoverable
    and live within an organization. If your targeted host is offline, you won’t be
    able to identify security vulnerabilities and send an exploit to it.
  prefs: []
  type: TYPE_NORMAL
- en: There are various techniques and tools that help ethical hackers efficiently
    discover live hosts on a network and identify open ports and running services.
    This section will help you develop the skills and knowledge to perform host discovery
    as an ethical hacker.
  prefs: []
  type: TYPE_NORMAL
- en: Performing passive scanning with Netdiscover
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Netdiscover** is a pre-installed tool within Kali Linux that enables ethical
    hackers to either actively scan a network range or passively listen and analyze
    network packets to discover live hosts. Active scanning sends probes to each device
    within the network to determine which hosts are online. When using passive-mode,
    network packets that are captured by the attacker’s machine will be analyzed to
    identify the IP and MAC addresses of other devices. However, passive-mode within
    Netdiscover reduces your threat detection level on the network unless the security
    team actively scans their network infrastructure to identify unauthorized devices.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Netdiscover in passive-mode, please use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and log in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, power on the **Metasploitable 3** virtual machine. This machine will be
    used to generate traffic on the **PentestNet** network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal on Kali Linux and use the following commands to verify
    the IP address and subnet mask of the **eth1** network adapter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, **eth1** is connected to the **172.30.1.0/24**
    network (*PentestNet*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.8 – Checking the interface status](image/Figure_7.08_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.8 – Checking the interface status
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to verify which network adapter on your attacker machine is connected
    to the targeted network. If you start scanning the wrong network or range of IP
    addresses, you can land yourself in some legal trouble, as scanning is considered
    illegal, and you’ll be breaching the legal penetration testing agreement.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, enable **Netdiscover** to operate in passive-mode and listen on the **eth1**
    interface for network traffic:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Netdiscover was able to identify the MAC and IP
    addresses of devices that transmitted messages on the **172.30.1.0/24** network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.9 – Passive scanning](image/Figure_7.09_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.9 – Passive scanning
  prefs: []
  type: TYPE_NORMAL
- en: Passive-mode in Netdiscover can only analyze network traffic if it’s detected
    on the **eth1** network adapter on a Kali Linux virtual machine. If you’re not
    seeing any results appearing, simply log in to the Metasploitable 3 virtual machine
    with the **Administrator**/**vagrant** user credentials and send **ping** messages
    to the Kali Linux virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: While passive scanning may reduce your threat detection by the target, it may
    not provide the expected results needed to move forward with your ethical hacking
    and penetration testing methodology. Next, you will learn how to perform a ping
    sweep across an entire network.
  prefs: []
  type: TYPE_NORMAL
- en: Performing a ping sweep
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **ping sweep** is a common technique used by IT and security professionals
    to easily identify live hosts on a network. It involves sending **ICMP ECHO Request**
    messages to each host on the network; when a live host receives the ICMP ECHO
    Request message, it will respond by sending an **ICMP ECHO Reply** message to
    the sender, which indicates that the host is online. Within client and server
    operating systems, there’s a **Ping** utility, which leverages **Internet Control
    Message Protocol** (**ICMP**), a network protocol that helps networking professionals
    to identify common network issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows a Wireshark packet capture of ICMP messages between
    a client and Google’s DNS server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.10 – Ping messages](image/Figure_7.10_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.10 – Ping messages
  prefs: []
  type: TYPE_NORMAL
- en: If you want to perform a ping sweep across the *PentestNet* network within our
    lab environment, you will need to ping each host on the **172.30.1.0/24** network
    that ranges from **172.30.1.1**–**172.30.1.254**. This is usually a manual, mundane,
    and time-consuming task for many. However, as an aspiring ethical hacker, you
    can automate the ping sweep process using various programming languages and even
    the native **Bourne Again Shell** (**BASH**) in Linux-based operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'To automate the ping sweep process on Kali Linux using BASH, please use the
    following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on both the **Kali Linux** and **Metasploitable 3** Windows virtual
    machines.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, log in to **Kali Linux** and use the following commands within the Terminal
    to create a new BASH script file, using the **nano** command-line text editor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, when Nano opens on the Terminal, type the following code to create the
    script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: When the preceding code executes, it will prompt the user to enter the network
    ID and subnet mask of the targeted network. It will calculate the range of host
    IP addresses and send one ICMP ECHO Request message to each host IP address.
  prefs: []
  type: TYPE_NORMAL
- en: To save the file, press the *Ctrl* + *X* keys, then press *Y*, and hit *Enter*
    to confirm and exit.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, add execution privileges to the **ping-sweep.sh** file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the following commands to execute the script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that the script has prompted the user input of
    the network ID and subnet mask, and then it proceeds to check whether the hosts
    are online:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.11 – A ping sweep](image/Figure_7.11_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.11 – A ping sweep
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, the Ping utility and the preceding script
    used the ICMP network protocol to perform the ping sweep across the **172.30.1.0/24**
    network:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.12 – Wireshark packet capture](image/Figure_7.12_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.12 – Wireshark packet capture
  prefs: []
  type: TYPE_NORMAL
- en: While the preceding method seems efficient for discovering live hosts on a network,
    system administrators and security professionals often disable ICMP responses
    from critical assets, such as servers and firewalls, to reduce the likelihood
    of a novice hacker identifying these systems. In addition, sending too many ICMP
    messages on a network can generate a lot of *noise*,which will increase the detection
    level of the ethical hacker on the network. Next, you will learn how to automate
    and improve your scanning techniques while reducing the detection level, using
    a powerful network scanner.
  prefs: []
  type: TYPE_NORMAL
- en: Host discovery with Nmap
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Network Mapper** (**Nmap**) is a powerful network scanning tool with lots
    of advanced capabilities to help ethical hackers and penetration testers to efficiently
    profile their targets. Nmap enables ethical hackers to discover live hosts and
    identify open **Transmission Control Protocol** (**TCP**) and **User Datagram
    Protocol** (**UDP**) ports, running services and their versions, and the operating
    system of a target.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Nmap for host discovery, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on both the **Kali Linux** and **Metasploitable 3** virtual machines.
    As always, the attacker machine will be Kali Linux and the target will be Metasploitable
    3.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On **Kali Linux**, open the Terminal and use either the **ip address** or **ifconfig**
    command to identify the IP address that’s assigned to the **eth1** interface,
    which is connected to the **172.30.1.0/24** network (*PentestNet*).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If important to identify the IP address of your attacker machine (Kali Linux)
    so that you do not scan your own device during security assessments; otherwise,
    you’ll need to remove its details from the results.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, perform a ping sweep on the entire **172.30.1.0/24** network while excluding
    the IP address of the Kali Linux machine, using the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, the **-sn** syntax specifies performing
    a ping scan on the target, while **--exclude** allows us to exclude a host, a
    range of addresses, or a network during the scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.13 – A ping scan using Nmap](image/Figure_7.13_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.13 – A ping scan using Nmap
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, the ping scan was able to identify that the
    **172.30.1.45** host is online.
  prefs: []
  type: TYPE_NORMAL
- en: Nmap does not send typical ICMP messages during a ping scan to a target. If
    the targeted device is configured not to respond to ICMP messages, then a typical
    ping sweep will fail to identify the status of the host on the network. Instead,
    Nmap sends specially crafted TCP **Synchronization** (**SYN**) packets to the
    targeted host, with the intention of triggering a TCP **Acknowledgement** (**ACK**)
    as a response from a live/online host.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows a packet capture within Wireshark of the Nmap ping
    scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.14 – Wireshark packet capture](image/Figure_7.14_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.14 – Wireshark packet capture
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, Kali Linux (**172.30.1.49**) sent a **TCP
    SYN** message to the target (**172.30.1.45**) on service port **443** (HTTPS),
    and the target responded with a **TCP ACK/RST** packet to acknowledge and reset
    the connection. This response indicates that port **443** is open and the target
    is live. While devices may be configured to not respond to ICMP messages, TCP/IP
    is designed to respond to **TCP SYN** packets on an open service port, and Nmap
    uses this technique to better determine whether a target is online or not.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about how TCP establishes a connection with a three-way handshake,
    please see [https://hub.packtpub.com/understanding-network-port-numbers-tcp-udp-and-icmp-on-an-operating-system/](https://hub.packtpub.com/understanding-network-port-numbers-tcp-udp-and-icmp-on-an-operating-system/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, perform a port scan to identify the top 1,000 service ports that are
    open on Metasploitable 3:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, Nmap was able to identify the top 1,000
    service ports that opened on the target and determined their service:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.15 – Identifying the top 1,000 service ports](image/Figure_7.15_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.15 – Identifying the top 1,000 service ports
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, Nmap helps us to better identify which ports
    are open and the associated services for each open port. Such information can
    be leveraged to identify the role, function, and the attack surface of a targeted
    device on a network. For instance, the preceding snippet shows that port **22**
    is open and running **Secure Shell** (**SSH**), a remote access service that can
    be compromised by an ethical hacker to gain a foothold into a system. It’s important
    to research the services for each open port to identify security vulnerabilities
    and how a real attacker can compromise the target.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: By default, Nmap scans TCP ports only.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **-p-** syntax to specify all 65,535 ports and the **-T4** syntax
    to increase the scanning speed, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that Nmap has identified additional open service
    ports on the target system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.16 – Scanning all ports](image/Figure_7.16_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.16 – Scanning all ports
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, it’s important to scan all service ports on a targeted
    device to identify whether there are additional running services and determine
    whether they are vulnerable to cyber-attacks and threats. In addition, if your
    goal is to gain a foothold into the targeted system, you may be able to exploit
    a security vulnerability found on a running service.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Nmap can scan a range of host addresses on a network by using the **nmap 172.30.1.10-100**
    syntax. Additionally, you can scan the selected host by using the **nmap 172.30.1.10,172.30.1.20,172.30.1.40-50**
    command. **-T<0-5>** allows you to set the timing template on an Nmap scan; higher
    is faster. Keep in mind that faster scans increase the amount of noise generated
    on a network and can raise the suspicions of the security team.
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, Nmap performs a ping scan on a targeted host to determine whether
    it’s online, and then it proceeds to scan. However, if the targeted host is configured
    to block ping probes from Nmap, we can perform a scan without pinging the target
    with the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the execution of the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.17 – Don’t ping scan](image/Figure_7.17_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.17 – Don’t ping scan
  prefs: []
  type: TYPE_NORMAL
- en: 'To scan the top 1,000 UDP service ports on a targeted system, use the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Nmap was able to identify open UDP ports on the
    target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.18 – UDP port scanning](image/Figure_7.18_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.18 – UDP port scanning
  prefs: []
  type: TYPE_NORMAL
- en: Since Nmap scans the top 1,000 ports by default, you can use the **nmap -sU
    -p- 172.30.1.45** command to scan all 65,535 UDP ports on the target. Additionally,
    you can use the **-p** syntax to specify a specific port or a range of ports –
    for instance, **-p22** and **-p1-65535**. The **–U** syntax allows you to specify
    a UDP port scan with the **-p** **U:53** syntax.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Filtered ports indicate whether there’s a firewall or another security mechanism
    that’s blocking the port, and Nmap is unable to determine whether the port is
    open or closed on the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'To identify the service versions of running services on a targeted device,
    use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Nmap was able to identify the service versions
    of each running service:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.19 – Identifying the service versions](image/Figure_7.19_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.19 – Identifying the service versions
  prefs: []
  type: TYPE_NORMAL
- en: Identifying the service versions helps us to determine whether the running application
    or service is outdated, and whether there are any known security vulnerabilities
    that can be exploited to gain authorized access. If you recall, one of the reasons
    to perform reconnaissance is to determine the attack surface of a target, such
    as discovering security vulnerabilities and points of entry.
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform operating system detection on a targeted host, use the **-O** syntax,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Nmap was able to identify the target host as running
    Microsoft Windows 7, 8, or Server 2008:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.20 – Identifying the operating system](image/Figure_7.20_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.20 – Identifying the operating system
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, identifying the operating system architecture
    and build number helps us to better plan future attacks during ethical hacking
    and penetration testing. For instance, you can research known security vulnerabilities
    and develop and test exploits for this specific operating system version, before
    preceding to the exploitation phase.
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, Nmap enables us to perform operating system detection, service version
    detection, script scanning, and traceroute by using the **-A** syntax, as shown
    here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, the **-A** syntax enables Nmap to perform
    multiple types of scanning techniques at the same time:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.21 – Multiple scans](image/Figure_7.21_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.21 – Multiple scans
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, the **-A** syntax further enables Nmap to
    perform banner grabbing on each running service. Banner grabbing enables us to
    collect additional information about a service, such as the header details of
    a Microsoft IIS service.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, the following is the remaining portion of the scan, which shows
    the SMB version, operating system version, computer name/hostname, and workgroup
    or domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.22 – OS and SMB detection](image/Figure_7.22_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.22 – OS and SMB detection
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, Nmap is a powerful network scanning tool, with many features
    and capabilities to help ethical hackers and penetration testers collect sensitive
    information during active reconnaissance of their targets.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Nmap and its scanning capabilities, please see [https://nmap.org/book/man.html](https://nmap.org/book/man.html).
    In addition, you can use the **man nmap** command on the Terminal to view the
    Nmap manual page.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to perform host discovery
    in active reconnaissance. In the next section, you will learn how to perform evasion
    techniques during network scanning.
  prefs: []
  type: TYPE_NORMAL
- en: Using evasion techniques
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a device such as a computer sends a packet to a network, the sender’s IP
    and MAC addresses are inserted into the packet header. As such, when ethical hackers
    perform host discovery on a network, their IP and MAC addresses are also included
    within each packet from their machine to the targeted hosts. Ethical hackers and
    penetration testers always try to remain undetected during security assessments,
    as part of simulating real-world cyberattacks on an organization’s network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are various evasion techniques that can be used during host discovery
    to reduce the risk of being detected and traced by threat detection systems and
    the security team of a target. To get started, please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Power on both the **Kali Linux** and **Metasploitable 3** virtual machines.
    Ensure you’re logged in to Kali Linux.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure you identify the IP address of Metasploitable 3, as this virtual machine
    will be the target of this exercise.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Nmap enables us to perform a scan using decoys to trick the target into thinking
    the source of the scan originates from different sources, rather than a single
    device. The **-D** syntax allows you to specify any number of decoy addresses,
    as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Before Nmap performs the scan on the target, it checks each decoy address on
    the network to ensure that these systems are online. If a decoy address is not
    reachable by Nmap, it will be excluded from the scan. Therefore, I recommend performing
    a status check on the decoy systems before performing a scan.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nmap enables you to automatically spoof your MAC address when scanning a target
    by using the **--spoof-mac** syntax, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The **-ST** syntax specifies performing a **TCP Connect** scan by establishing
    the TCP three-way handshake, **-PN** specifies not pinging the host, and **--spoof-mac
    0** indicates spoofing a random MAC address. The following snippet shows the random
    spoof MAC address during the scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.23 – Spoofing the random MAC address](image/Figure_7.23_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.23 – Spoofing the random MAC address
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to spoof a specific vendor’s MAC address, Nmap allows you to insert
    the vendor’s name, as shown in the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that Nmap uses a spoof MAC address from Dell:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.24 – Spoofing the vendor address](image/Figure_7.24_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.24 – Spoofing the vendor address
  prefs: []
  type: TYPE_NORMAL
- en: 'If there’s a specific MAC address you want to spoof, it can be included, as
    shown in the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that the custom MAC address was used as the spoof
    address during the Nmap scan:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.25 – Using a specific spoof address](image/Figure_7.25_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.25 – Using a specific spoof address
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, Nmap provides the capability to send probes as smaller fragments on
    the network to reduce detection by network security systems. The following command
    is an example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows a Wireshark capture of Kali Linux (**172.30.1.44**)
    sending multiple fragmented IP packets of 42 bytes to Metasploitable 3 (**172.30.1.45**):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.26 – Fragmenting packets](image/Figure_7.26_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.26 – Fragmenting packets
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Using the **-sS** syntax enables Nmap to perform a **stealth scan** (sometimes
    referred to as a *half-open scan*) on a target. The stealth scan does not establish
    a full TCP three-way handshake with the target. However, the Nmap stealth scan
    can be easily detected by seasoned cybersecurity professionals. To learn more
    about the Nmap stealth scan, please see [https://nmap.org/book/synscan.html](https://nmap.org/book/synscan.html).
  prefs: []
  type: TYPE_NORMAL
- en: As you learned in this section, there are various techniques that are used by
    ethical hackers to evade detection during host discovery. In the next section,
    you will explore various enumeration techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Enumerating network services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During the host discovery phase of ethical hacking, many open ports and running
    services can be found. The information collected during the host discovery phase
    is used to perform additional research to find known security vulnerabilities
    within those running services and how they can be exploited to gain unauthorized
    access to a target. Enumerating network services on targeted systems helps ethical
    hackers and penetration testers to better understand the target’s network infrastructure
    and attack surfaces and which attack vectors can be used to deliver a payload
    to the target.
  prefs: []
  type: TYPE_NORMAL
- en: NetBIOS and SMB enumeration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Network Basic Input/Output System** (**NetBIOS**) is an old legacy network
    protocol that’s commonly used within Windows-based environments for file and print
    sharing, and name resolution services on a **Local Area Network** (**LAN**). SMB
    is a newer network protocol that’s also used within Windows-based environments
    for file and print-sharing services. As an ethical hacker, performing NetBIOS
    and SMB enumeration helps you identify which systems on a network have network
    shares. A misconfigured system enables an ethical hacker to access sensitive directories
    and files over a network.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with NetBIOS and SMB enumeration, please use the following instruction:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** and **Metasploitable 3** virtual machines.
    Kali Linux will be the attacker machine and Metasploitable 3 will operate as the
    target.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, use **nbtscan** to retrieve the NetBIOS name and MAC address of Metasploitable
    3:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The **-r** syntax is used to specify a remote host on the network, as shown
    in the following snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.27 – A NetBIOS scan](image/Figure_7.27_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.27 – A NetBIOS scan
  prefs: []
  type: TYPE_NORMAL
- en: If there are any logged-in users on the target, their usernames will appear
    within the **User** field.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use **Nmap** to identify whether SMB runs the Metasploitable 3 by scanning
    port **445**, using the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, port **445** is open, and Nmap was able
    to profile the host operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.28 – Identifying SMB on a target](image/Figure_7.28_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.28 – Identifying SMB on a target
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use Nmap to perform a NetBIOS scan of Metasploitable 3 with the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, Nmap was able to verify the operating system
    of the host:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.29 – Identifying the target operating system](image/Figure_7.29_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.29 – Identifying the target operating system
  prefs: []
  type: TYPE_NORMAL
- en: 'Since SMB is found running on Metasploitable 3, use the **smbclient** tool
    to enumerate network scans on the target; **-U** specifies the username:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'When prompted for a password, use **vagrant** to allow **smbclient** to enumerate
    the shares, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.30 – Network shares](image/Figure_7.30_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.30 – Network shares
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, there are multiple network shares on the
    target.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To access a network share, use the **smbclient -L //172.30.1.45/sharename -U
    vagrant** command. Ensure you adjust the IP address, share name, and username
    accordingly for your target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **smbmap** tool to identify the permissions on each network share:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The **-u** and **-p** syntax allows us to specify the username and password
    to access the target, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.31 – Share permissions](image/Figure_7.31_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.31 – Share permissions
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, some shares enable network users to both
    read and write to the directory. Access to sensitive directories is useful during
    ethical hacking and penetration testing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following commands to perform SMB enumeration of shares with
    Nmap:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that Nmap attempted to find and enumerate shares
    on the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.32 – Nmap SMB enumeration script](image/Figure_7.32_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.32 – Nmap SMB enumeration script
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, we can use Nmap to identify SMB vulnerabilities on a target using the
    following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, Nmap was able to identify a security vulnerability
    on the target system and provide us with reference information:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.33 – SMB vulnerability discovery](image/Figure_7.33_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.33 – SMB vulnerability discovery
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use various tools and
    techniques to perform service enumeration. In the next section, you will learn
    how to perform wireless reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: Wireless reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Wireless reconnaissance enables ethical hackers and penetration testers to identify
    their target’s wireless network and determine associated clients, network settings,
    operating frequencies and channels, and the approximate distance between you and
    the access point.
  prefs: []
  type: TYPE_NORMAL
- en: When an access point is powered on, it sends **beacons** to advertise its presence
    and network information to nearby wireless clients. Within these beacons, the
    access point inserts the network name or **Service Set Identifier** (**SSID**),
    which helps clients to identify one wireless network from the other. Once a client
    is connected (associated) with a wireless network, it automatically saves the
    network information and password within its **Preferred Network List** (**PNL**).
    From then on, when wireless capabilities are enabled on the client, it will send
    **probes** to seek any of the saved networks from the PNL; once a network is found
    and within range, the client will attempt to automatically establish an association.
    As an ethical hacker, capturing and analyzing beacons and probes from wireless
    networks and clients helps us to identify whether the targeted wireless network
    is vulnerable to wireless-based attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use **Wigle.net** to find wireless networks around the world. The website
    also allows users to upload Kismet data and helps ethical hackers to locate their
    target networks.
  prefs: []
  type: TYPE_NORMAL
- en: To get started with wireless reconnaissance, follow the following instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Part 1 – attaching a wireless network adapter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To attach a wireless network adapter, follow these steps.
  prefs: []
  type: TYPE_NORMAL
- en: Connect the Alfa AWUS036NHA – Wireless B/G/N USB adapter to your host computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open **VirtualBox Manager**, select the **Kali Linux** virtual machine,
    and click on **Settings**, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.34 – VirtualBox Manager](image/Figure_7.34_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.34 – VirtualBox Manager
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, select the **USB** category from the left menu, and then select either
    the USB 2.0 or 3.0 controller, depending on your USB interface types on your host
    computer, and click on the **Add USB device** icon, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.35 – The Settings menu](image/Figure_7.35_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.35 – The Settings menu
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking on the **Add USB device** icon, a side menu will appear, displaying
    all your connected USB devices. Select the wireless network adapter, as shown
    here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.36 – Selecting the wireless network adapter](image/Figure_7.36_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.36 – Selecting the wireless network adapter
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you will automatically return to the main **Settings** menu. Click on
    **OK** to save:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.37 – The wireless network adapter](image/Figure_7.37_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.37 – The wireless network adapter
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, the wireless network adapter is now connected
    to the Kali Linux virtual machine as a USB device.
  prefs: []
  type: TYPE_NORMAL
- en: Part 2 – enabling monitor mode
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To enable monitor mode, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Power on the **Kali Linux** virtual machine and log in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the **iwconfig** command to identify the wireless
    network adapter, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.38 – Verifying the network adapter](image/Figure_7.38_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.38 – Verifying the network adapter
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, the wireless network adapter is displayed
    as the **wlan0** interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **sudo airmon-ng check kill** command to terminate any conflicting
    processes that may prevent changing the **wlan0** interface to monitor mode:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.39 – Killing processes](image/Figure_7.39_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.39 – Killing processes
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **sudo airmon-ng start wlan0** command to enable monitor mode
    on the **wlan0** interface:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.40 – Enabling monitor mode](image/Figure_7.40_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.40 – Enabling monitor mode
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the **iwconfig** command to verify the new interface. **wlan0mon**
    is created and available on Kali Linux, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.41 – Verifying the interface status](image/Figure_7.41_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.41 – Verifying the interface status
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, **wlan0mon** operates in monitor mode, which
    enables us to capture beacons and probes on wireless networks.
  prefs: []
  type: TYPE_NORMAL
- en: Part 3 – performing wireless reconnaissance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To perform wireless reconnaissance, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the **Airodump-ng** tool to monitor (capture and analyze) nearly all the
    beacons and probes by using the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, airodump-ng was able to identify wireless
    networks, access points, and clients (stations):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.42 – Wireless networks and clients](image/Figure_7.42_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.42 – Wireless networks and clients
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a description of each field shown in the preceding snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '**BSSID**: This is the **Basic Service Set Identifier** (**BSSID**) or the
    MAC address of the access point.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PWR**: The power level helps ethical hackers to determine the distance between
    themselves and an access point or client (station). Lowering the power level means
    you are further away from the target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Beacons**: This field contains the number of beacons that have been sent
    from access points.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#Data**: This field indicates the amount of captured packets on the network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#/s**: This field helps us to determine the number of packets over a 10-second
    interval.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CH**: This field indicates the operating channel of the wireless network
    on the access point.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MB**: This field helps us to determine the maximum speed of the wireless
    network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ENC**: This field specifics the wireless security standard for the wireless
    network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AUTH**: This field indicates the authentication type or protocol of the wireless
    network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ESSID**: This is the **Extended Service Set Identifier** (**ESSID**), which
    is equivalent to the SSID or network name.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**STATION**: This field contains the MAC addresses of nearly wireless clients,
    either connected or not connected to a wireless network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Probes**: This field displays the saved networks from each client from their
    PNL.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following snippet shows the station-to-access point associations by observing
    the **BSSID** and **STATION** fields:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.43 – Identifying the wireless clients](image/Figure_7.43_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.43 – Identifying the wireless clients
  prefs: []
  type: TYPE_NORMAL
- en: 'If the targeted wireless network operates on a specific channel, use the **-c**
    syntax to listen on a specific channel, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, Airodump-ng listens on channel **6** only:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.44 – Listening on a specific channel](image/Figure_7.44_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.44 – Listening on a specific channel
  prefs: []
  type: TYPE_NORMAL
- en: This technique helps ethical hackers to filter out any unwanted output and focus
    on their target.
  prefs: []
  type: TYPE_NORMAL
- en: 'To set the focus on a specific target, the **--essid** syntax can be used to
    specify a targeted ESSID network name by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, only the **Corp_Wi-Fi** network and its
    associated clients are displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.45 – Filtering the networks](image/Figure_7.45_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.45 – Filtering the networks
  prefs: []
  type: TYPE_NORMAL
- en: Associated stations that transmit data on a wireless network will be displayed
    under the **STATION** field. However, there may be idle stations that are associated
    with the target network but not shown on Airodump-ng.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As an ethical hacker, you can perform a dis-association attack on the target
    network to force all associated clients to disconnect and reconnect. This technique
    enables us to identify all associated clients for a specific network. To perform
    this action, open a new Terminal and use **Aireplay-ng** to send 100 de-authentication
    wireless frames to the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'The following snippet shows aireplay-ng sending the de-authentication attack
    to the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.46 – The de-authentication attack](image/Figure_7.46_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.46 – The de-authentication attack
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, by checking the **Airodump-ng** window, you will see all other associated
    stations and their PNL, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 7.47 – Observing stations](image/Figure_7.47_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.47 – Observing stations
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to perform active reconnaissance
    on wireless networks.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During this chapter, you learned about the importance of active reconnaissance
    and how it helps ethical hackers to discover live hosts and identify open ports
    and running services. In addition, you gained the skills to perform reconnaissance
    on wireless network infrastructure to identify targeted access points and clients,
    as well as network settings.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this chapter has been informative for you and helpful in your journey
    in the cybersecurity industry. In the next chapter, *Performing Vulnerability
    Assessments*, you will learn how to set up and work with vulnerability assessment
    tools.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'How port numbers work: [https://www.techtarget.com/searchnetworking/definition/port-number](https://www.techtarget.com/searchnetworking/definition/port-number)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'TCP three-way handshake: [https://www.techopedia.com/definition/10339/three-way-handshake](https://www.techopedia.com/definition/10339/three-way-handshake)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
