- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Delving into Website Reconnaissance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the internet continues to grow, there are many websites created almost every
    day by organizations to help reach new and potential customers beyond traditional
    borders. Threat actors usually perform a lot of reconnaissance to gather as much
    information as possible and collect intelligence about their targets’ websites
    and domains. This information is valuable to threat actors in planning future
    cyber-attacks on a target. As an ethical hacker, it’s important to identify the
    attack surface and determine how web reconnaissance can be leveraged by real attackers
    in planning a cyber-attack.
  prefs: []
  type: TYPE_NORMAL
- en: During this chapter, you will learn how to use common tools and techniques to
    efficiently collect information about a target, such as its IP addresses and sub-domains,
    discover hidden directories, and identify the attack surface. Furthermore, you
    will learn how to use web vulnerability scanners to identify web application weaknesses
    and work with web reconnaissance frameworks to automate the collection and analysis
    of data.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Collecting domain information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sub-domain enumeration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Performing directory enumeration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web application vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web reconnaissance frameworks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s dive in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To follow along with the exercises in this chapter, please ensure that you
    have met the following hardware and software requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux installed – [https://www.kali.org/get-kali/](https://www.kali.org/get-kali/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Collecting domain information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As an ethical hacker, collecting the **Domain Name System** (**DNS**) information
    and IP addresses and determining the backend infrastructure helps you to better
    understand the attack surface and attack vectors of a target. For instance, if
    you’re performing an external network penetration test or **Open Source Intelligence**
    (**OSINT**) penetration test on an organization, finding the target’s domain and
    website are good starting points. A domain name can lead you to discover the website
    and the sub-domains and IP addresses assigned to servers owned by the target.
  prefs: []
  type: TYPE_NORMAL
- en: This section focuses on using various tactics and techniques to retrieve the
    IP addresses, discovering any infrastructure details, and running web technologies
    on a target’s web server and domain.
  prefs: []
  type: TYPE_NORMAL
- en: Retrieving IP addresses
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By retrieving the IP addresses of a target domain and its sub-domain, ethical
    hackers are able to map the external network topology and identify potential security
    vulnerabilities that can be exploited by an attacker to gain unauthorized access.
    Furthermore, without identifying the IP addresses of a target, ethical hackers
    won’t be able to simulate real-world cyber-attacks to determine the security posture
    of an organization.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with identifying the IP addresses for a domain name, use the
    following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine and ensure it has internet
    connectivity.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the **host <domain-name>** command to retrieve
    the IPv4 and IPv6 addresses of a target, as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.1 – host command](image/Figure_9.01_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.1 – host command
  prefs: []
  type: TYPE_NORMAL
- en: A domain name is simply a namespace on a network such as the internet; however,
    the IP addresses that are associated with a domain or host indicate the network
    location of the target. As shown in the preceding snippet, performing an IP lookup
    on the addresses can reveal the geo-location of the hosting servers or target.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To identify the geo-location of the network address, go to [https://whatismyipaddress.com/ip-lookup](https://whatismyipaddress.com/ip-lookup)
    to perform an IP lookup on any public IP address.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the **nslookup** tool is used to troubleshoot **DNS** issues and retrieve
    the IP addresses of a hostname. To get the IP addresses of a domain name, use
    the **nslookup <domain-name> <DNS-server>** command as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.2 – The nslookup tool](image/Figure_9.02_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.2 – The nslookup tool
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, **nslookup** sent the DNS queries to Google’s
    DNS server at **8.8.8.8** and the response provides the IP addresses shown in
    the output.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: There are different DNS records, such as **A**, which resolves a hostname to
    an IPv4 address; **AAAA**, which resolves a hostname to an IPv6 address; **MX**,
    which specifies the mail exchange server; **CNAME**, which specifies a canonical
    name or alias for a domain; **PTR**, which resolves an IP address to a hostname;
    **TXT**, which specifies a text record; **RP**, which specifies the person responsible
    for the domain; and **NS**, which specifies the authoritative name server for
    the domain.
  prefs: []
  type: TYPE_NORMAL
- en: 'The **dig** utility on Linux-based systems enables you to query a specific
    DNS server using the **@** syntax, then followed by the domain name. To retrieve
    the DNS records for a domain name, use the **dig @<dns-server> <target-domain>**
    command as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.3 – The dig command](image/Figure_9.03_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.3 – The dig command
  prefs: []
  type: TYPE_NORMAL
- en: 'To retrieve a specific DNS record type, simply append the **A**, **AAAA** **MX**,
    **NS**, **PTR**, **CNAME**, or **RP** record type at the end of the command as
    shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4 – Retrieving specific DNS records](image/Figure_9.04_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.4 – Retrieving specific DNS records
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, **dig** was able to retrieve the name servers
    for the domain name.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If an attacker is able to compromise the name servers of a domain, the hacker
    can manipulate the DNS records stored on the server. This enables the attacker
    to perform various types of DNS-based and spoofing attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the **dnsrecon** tool enables you to automate the retrieval of public
    DNS records for a domain; use the **dnsrecon -d <domain-name> -n <dns-server>**
    command as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.5 – The dnsrecon tool](image/Figure_9.05_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.5 – The dnsrecon tool
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned how to retrieve the IP addresses
    and DNS records of a target domain. Next, you’ll learn how to identify the target’s
    domain infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying domain infrastructure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Identifying the domain infrastructure helps ethical hackers to map the attack
    surface of a target. This enables the ethical hacker to determine what systems
    and applications are in use, and this data can be leveraged to identify security
    vulnerabilities and attack vectors for delivering an exploit to the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with identifying domain infrastructure, use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s always recommended to implement a **Web Application Firewall** (**WAF**)
    in front of a web application server to prevent web application attacks. The **WAFW00F**
    tool helps ethical hackers to determine whether a target website is behind a WAF,
    so use the **wafw00f <target>** command as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.6 – Detecting WAFs](image/Figure_9.06_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.6 – Detecting WAFs
  prefs: []
  type: TYPE_NORMAL
- en: If the target is behind a WAF, you will not be able to retrieve the real public
    IP address of the target; instead, you’ll obtain the address of the WAF application
    due to the reverse proxy feature. In addition, the WAF will analyze all web traffic
    going to the targeted website and block any potentially malicious traffic.
  prefs: []
  type: TYPE_NORMAL
- en: 'The **WHOIS** tool enables you to retrieve the public domain registrar records
    of the target; use the **whois <domain>** command as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.7 – Collecting the domain registration details](image/Figure_9.07_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.7 – Collecting the domain registration details
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, an organization may not pay for additional privacy protection when
    registering a domain name, and its sensitive information will be publicly available,
    which can be leveraged by threat actors in planning future attacks such as social
    engineering.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the site report tool on **Netcraft** helps ethical hackers to profile
    the infrastructure and technologies of a website on the internet. Go to [https://sitereport.netcraft.com/](https://sitereport.netcraft.com/)
    and enter a domain as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.8 – Netcraft](image/Figure_9.08_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.8 – Netcraft
  prefs: []
  type: TYPE_NORMAL
- en: 'After a few seconds, Netcraft will provide the network and hosting details
    as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.9 – Network infrastructure details](image/Figure_9.09_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.9 – Network infrastructure details
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, Netcraft provides the IP block information that can be used to
    geo-locate the physical server that’s hosting the domain and website as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.10 – Network block details](image/Figure_9.10_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.10 – Network block details
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, **DNS Dumpster** is an online tool that performs extensive DNS reconnaissance,
    research, and analysis on a targeted domain. Go to [https://dnsdumpster.com/](https://dnsdumpster.com/)
    and enter a domain as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.11 – DNS Dumpster](image/Figure_9.11_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.11 – DNS Dumpster
  prefs: []
  type: TYPE_NORMAL
- en: 'After a few seconds, DNS Dumpster provides all the DNS records and name servers
    for the domain as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.12 – DNS information](image/Figure_9.12_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.12 – DNS information
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, DNS Dumpster automatically creates a map of the domain to provide
    insights on the available DNS records, IP addresses, and name servers as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.13 – Mapping of a domain](image/Figure_9.13_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.13 – Mapping of a domain
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, DNS Dumpster provides a graphical representation showing the backend
    infrastructure and how the records are mapped to each other in the domain:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.14 – DNS infrastructure graph](image/Figure_9.14_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.14 – DNS infrastructure graph
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, the visual map helps ethical hackers to better
    understand how the DNS records of a domain are associated with IP addresses and
    whether there are any unintentionally exposed systems on the internet that are
    owned by the target.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying web technologies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As an ethical hacker, it’s important to identify whether a website has any security
    vulnerabilities that can be exploited by a real attacker. Sometimes, an underlying
    web application or **Content Management System** (**CMS**) may be outdated or
    contain vulnerable plugins, which can be exploited to gain unauthorized access,
    steal data or manipulate the backend database. Additionally, this helps the ethical
    hacker better understand the web technologies that are running on the target and
    improve the attack plan to ensure the best suitable tactics and techniques are
    used to deliver the attack to the target.
  prefs: []
  type: TYPE_NORMAL
- en: While there are many web technologies in the industry, ethical hackers can leverage
    knowledge, experience, and research to find known security vulnerabilities in
    a web application just as a real attacker would. However, the intention is to
    discover security vulnerabilities before a real cyber-attack occurs and provide
    recommendations on mitigation and countermeasures to prevent future attacks and
    threats.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with identifying the technologies of a website, use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The **WhatWeb** tools help ethical hackers to profile the web technologies
    that are found on a target website. To identify web technologies, use the **whatweb
    <domain>** command within the Terminal as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.15 – Identifying web technologies](image/Figure_9.15_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.15 – Identifying web technologies
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, WhatWeb was able to retrieve specific web
    application and technology versions, which can be used to identify security vulnerabilities
    on the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, **Wappalyzer** is a browser add-on for identifying web technologies on
    a website. Open the **Mozilla Firefox** web browser, go to [https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/](https://addons.mozilla.org/en-US/firefox/addon/wappalyzer/),
    and click on **Add to Firefox** to install the plugin as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.16 – Wappalyzer](image/Figure_9.16_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.16 – Wappalyzer
  prefs: []
  type: TYPE_NORMAL
- en: After the add-on is installed on Mozilla Firefox, the Wappalyzer icon will automatically
    appear on the browser’s toolbar.
  prefs: []
  type: TYPE_NORMAL
- en: 'Wappalyzer will analyze the web applications on any website that you visit
    to identify the web technologies; simply click on the Wappalyzer icon on the browser’s
    toolbar to view the website details as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.17 – Wappalyzer details](image/Figure_9.17_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.17 – Wappalyzer details
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, **BuiltWith** is another Mozilla Firefox add-on for profiling the web
    technologies of a website. Go to [https://addons.mozilla.org/en-US/firefox/addon/builtwith/](https://addons.mozilla.org/en-US/firefox/addon/builtwith/)
    and click on **Add to Firefox** as shown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.18 – BuiltWith add-on page](image/Figure_9.18_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.18 – BuiltWith add-on page
  prefs: []
  type: TYPE_NORMAL
- en: 'After the BuiltWith add-on is installed on Firefox, its icon will automatically
    appear on the browser’s toolbar. Simply visit any website and click on the BuiltWith
    icon to view the web technologies of the website as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.19 – BuiltWith details](image/Figure_9.19_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.19 – BuiltWith details
  prefs: []
  type: TYPE_NORMAL
- en: These add-ons are very useful and conveniently and quickly identify the technologies
    that are running on any web application or server that you visit and should be
    within your arsenal of tools.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use various tools and
    techniques to collect information about a targeted domain name and website. Next,
    you will learn how to enumerate the sub-domains of a target.
  prefs: []
  type: TYPE_NORMAL
- en: Sub-domain enumeration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Threat actors such as hackers use both passive and active reconnaissance techniques
    to identify the sub-domains of a target. Usually, an organization will register
    a domain name (parent domain) and create additional sub-domains, where each sub-domain
    points to a different server that’s owned by the target. For instance, [domain.local](http://domain.local)
    points to the IP address of the web server and [mail.domain.local](http://mail.domain.local)
    points to the IP address of the email server. Therefore, enumerating the sub-domains
    and resolving their IP addresses helps attackers to identify security vulnerabilities
    and the attack surface of additional systems owned by the target.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, a sub-domain is used to host a test environment for users that are
    misconfigured, running a vulnerable or less secure application, and connected
    to the internal corporate network. If an attacker were to compromise this system,
    they would be able to pivot their attacks through the compromised system to the
    internal network of the target. Furthermore, the sub-domains of a target are not
    always configured with the same security policies and posture, which can further
    lead to having different security vulnerabilities that can be exploited in multiple
    ways to gain unauthorized access. As an ethical hacker, it’s important to identify
    the sub-domains of an organization to better determine its security posture and
    identify hidden vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering sub-domains using Sublist3r
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Sublist3r** is a popular tool that collects and analyzes OSINT to identify
    the sub-domains of a target.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Sublist3r for sub-domain enumeration, use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following commands to update the software
    package repository list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, download the Sublist3r setup files using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding GitHub repository is a working branch from the official repository
    at [https://github.com/aboul3la/Sublist3r](https://github.com/aboul3la/Sublist3r).
    Unfortunately, the packages from the official GitHub repository no longer work
    at the time of writing.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following commands to change the present working directory to
    the **Sublist3r** folder and install its requirements:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the execution of the preceding commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.20 – Installing the requirements](image/Figure_9.20_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.20 – Installing the requirements
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, use the following commands to perform sub-domain enumeration on a domain:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Sublist3r has searched through multiple data sources
    and discovered the sub-domains of the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.21 – Discovering sub-domains](image/Figure_9.21_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.21 – Discovering sub-domains
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned how to set up and work with
    Sublist3r to enumerate the sub-domains of a target. Next, you will learn how to
    use theHarvester to find additional sub-domains.
  prefs: []
  type: TYPE_NORMAL
- en: Finding sub-domains with theHarvester
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**theHarvester** is a popular tool used by ethical hackers during passive reconnaissance
    to collect email addresses, hostnames, IP addresses, and sub-domains of a target
    from multiple online data sources.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using theHarvester to find sub-domains, use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following commands to view available options
    and syntax for theHarvester:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the various forms of syntax and their usage:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.22 – theHarvester options](image/Figure_9.22_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.22 – theHarvester options
  prefs: []
  type: TYPE_NORMAL
- en: 'To gather the sub-domains, use the **theHarvester -d <target> -b <source>**
    command as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The **source** specifies the data source to use when collecting information
    about the target. The following snippet shows that theHarvester was able to collect
    sub-domains and their IP addresses for the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.23 – Sub-domains](image/Figure_9.23_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.23 – Sub-domains
  prefs: []
  type: TYPE_NORMAL
- en: As an ethical hacker, ensure you use different data sources when collecting
    intelligence on a target, as some data sources will provide more information than
    others. Having completed this exercise, you have learned how to use theHarvester
    to collect sub-domains and their IP addresses. Next, you will learn how to use
    Knockpy to aggressively enumerate sub-domains.
  prefs: []
  type: TYPE_NORMAL
- en: Collecting sub-domains using Knockpy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Knockpy** is a passive, sub-domain enumeration tool that leverages OSINT
    and performs dictionary scanning to identify sub-domains of a target.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Knockpy for sub-domain enumeration, use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following command to update the software
    package repository list and install **Knockpy**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, to perform sub-domain enumeration on a target, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the Knockpy results when tested with a public domain
    name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.24 – Knockpy results](image/Figure_9.24_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.24 – Knockpy results
  prefs: []
  type: TYPE_NORMAL
- en: As shown in the preceding snippet, Knockpy was able to retrieve IP addresses,
    hostnames, and server information about each sub-domain. Additionally, the HTTP
    status code indicates whether the resource was found (**200**) or not.
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to set up and use various
    tools to efficiently identify the sub-domains of a target. In the next section,
    you will learn how to discover hidden directories on a web application.
  prefs: []
  type: TYPE_NORMAL
- en: Performing directory enumeration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes, web administrators and IT professionals unintentionally expose sensitive
    and restricted directories and files on their web applications and servers on
    the internet. If a threat actor were to find confidential data within a hidden
    directory on a target’s web server, it can be leveraged to plan and perform future
    attacks on the target.
  prefs: []
  type: TYPE_NORMAL
- en: This section focuses on using various tools and techniques to discover hidden
    directories and files as an ethical hacker.
  prefs: []
  type: TYPE_NORMAL
- en: Using GoBuster to find hidden directories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**GoBuster** is a brute-force tool used to identify the sub-domains, directories,
    files, and hostnames of a target.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using GoBuster to find hidden directories and files of
    a domain, use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following commands to update the software
    package repository list and install **GoBuster**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To perform DNS sub-domain enumeration on a target, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**dns** is a syntax-specific DNS brute-force mode, and **-w** specifies an
    offline wordlist.'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Within Kali Linux, there are many offline wordlists within the **/usr/share/wordlists/**
    directory that are commonly used for brute-force attacks and enumerating directories.
    Furthermore, you can download additional wordlist files from [https://github.com/danielmiessler/SecLists](https://github.com/danielmiessler/SecLists).
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows GoBuster enumerating the sub-domains of a target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.25 – Sub-domain enumeration](image/Figure_9.25_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.25 – Sub-domain enumeration
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to discover the hidden directories of a domain/website, use the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows various directories that were found and a relevant
    HTTP status code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.26 – Directories](image/Figure_9.26_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.26 – Directories
  prefs: []
  type: TYPE_NORMAL
- en: HTTP status code 301 means the resource has permanently changed its location
    and a new **Uniform Resource Locator** (**URL**) is given in the response from
    the web server. Additionally, the HTTP status code **200** means the resource
    was found, which is good for ethical hackers.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about HTTP status codes and their meaning, please see [https://developer.mozilla.org/en-US/docs/Web/HTTP/Status](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).
  prefs: []
  type: TYPE_NORMAL
- en: As you saw in the preceding snippet, Gobuster performs an aggressive directory
    and file enumeration on a target. This tool can help ethical hackers identify
    sensitive and unintentionally exposed resources on a web server.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about GoBuster, please see [https://github.com/OJ/gobuster](https://github.com/OJ/gobuster).
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this exercise, you have learned how to use GoBuster to discover
    the sub-domains and hidden directories of a target. Next, you will learn how to
    perform directory enumeration using Dirb.
  prefs: []
  type: TYPE_NORMAL
- en: Directory enumeration with DIRB
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**DIRB** is a popular web application scanner that looks for hidden directories
    and files on a web server. DIRB uses a wordlist to perform a dictionary-based
    attack on a target, querying each word from the wordlist to identify web resources.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using DIRB to identify hidden web directories and files,
    use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and run the **OWASP JuiceShop** Docker container using
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, open a new Terminal window and use the following commands to perform
    a directory-based brute-force on the **Open Web Application Security Project**
    (**OWASP**) JuiceShop web application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows hidden directories that were found on the target
    using DIRB:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.27 – Directory enumeration](image/Figure_9.27_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.27 – Directory enumeration
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to manually visit every URL to determine whether the hidden resource
    is valuable and can be leveraged when planning future attacks on the target. For
    instance, the **/assets** directory may contain sensitive information such as
    the IP addresses of additional systems owned by the target, and the **/robots.txt**
    resource may contain additional sub-directories.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about DIRB, please see [https://www.kali.org/tools/dirb/](https://www.kali.org/tools/dirb/).
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use various tools to
    assist when discovering hidden directories and files on a web server of a target.
    In the next section, you will learn how to get started with discovering web vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Web application vulnerability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As an ethical hacker, it’s essential to understand web application security
    and the OWASP **Top 10** web application security risks. Web applications are
    special software that runs on a server to host websites and are easily accessible
    using a standard web browser. For instance, when you access your favorite search
    engine, your web browser creates a **Hypertext Transfer Protocol** (**HTTP**)
    or **HTTP Secure** (**HTTPS**) **GET** message to request the resource on the
    destination web server (the internet search engine). Once the web application
    receives the HTTP **GET** message (the request), it processes and provides a response
    with the requested data back to the web browser:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the communication between the browser and a web
    application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.28 – Web communication](image/Figure_9.28_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.28 – Web communication
  prefs: []
  type: TYPE_NORMAL
- en: Web applications are created with lots of code by developers. However, many
    web servers on the internet run outdated and insecure web applications that can
    be exploited by potential hackers. As with any software, web applications need
    to be regularly tested by developers and ethical hackers to identify any hidden
    security vulnerabilities and implement secure coding practices to resolve any
    issues. OWASP regularly updates its Top 10 web application security risks to help
    cybersecurity professionals, researchers, and software developers to better understand
    how to find security weaknesses using thorough security testing and recommends
    how to resolve these security flaws before a real hacker is able to discover and
    exploit them.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: This book focuses on reconnaissance for ethical hackers and does not cover exploitation.
    If you’re interested in learning more about web application security risks, please
    visit the OWASP website at [https://owasp.org/www-project-top-ten/](https://owasp.org/www-project-top-ten/).
  prefs: []
  type: TYPE_NORMAL
- en: There are many commercial web application scanners in the industry that work
    well. However, **Nikto** is a free web application scanner that’s designed to
    perform fast security checks on a target web application or server, which we will
    use here.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Nikto to discover web application vulnerabilities,
    please use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and execute the following commands to run the **OWASP
    JuiceShop** Docker container:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, open another Terminal and perform a web vulnerability scan on the OWASP
    JuiceShop web application using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As shown in the following snippet, Nikto is able to identify common web application
    security vulnerabilities in the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.29 – Nikto](image/Figure_9.29_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.29 – Nikto
  prefs: []
  type: TYPE_NORMAL
- en: It’s important to thoroughly research each bullet point (**+**) listed in the
    Nikto results as it will provide brief details on a potential security issue.
    Additionally, Nikto provides **Open Sourced Vulnerability Database** (**OSVDB**)
    references for known security vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: For a list of web vulnerability scanning tools, please see [https://owasp.org/www-community/Vulnerability_Scanning_Tools](https://owasp.org/www-community/Vulnerability_Scanning_Tools).
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to use Nikto, a free web
    application vulnerability scanner, to identify common security flaws on a web
    application. Next, you will learn how to automate your web reconnaissance techniques
    using reconnaissance frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Web reconnaissance frameworks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web reconnaissance frameworks help ethical hackers and penetration testers to
    simply automate many manual tasks, such as running multiple tools one after another,
    then collecting and consolidating the results to improve the analysis phase. With
    a reconnaissance framework, an ethical hacker can set the target domain and let
    the framework take care of thoroughly collecting information using passive and
    active techniques from multiple data sources and generating human-readable reports
    for post-analysis.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, you will learn how to set up and use the following web reconnaissance
    frameworks:'
  prefs: []
  type: TYPE_NORMAL
- en: Sn1per
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amass
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope you’re excited – let’s dive in.
  prefs: []
  type: TYPE_NORMAL
- en: Automating reconnaissance with Sn1per
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Sn1per** is designed to be an all-in-one web reconnaissance framework that’s
    built to perform extensive information gathering on discovering hidden assets
    and security vulnerabilities on a target, hence helping cybersecurity professionals
    and organizations with **Attack Surface Management** (**ASM**). Rather than running
    multiple reconnaissance tools for collecting and analyzing data from various sources,
    the Sn1per framework helps automate the entire process of data collection for
    a target, from analysis to providing a human-readable report at the end. Hence,
    it helps ethical hackers to automate time-consuming and mundane tasks to improve
    their reconnaissance phase and analyze data efficiently to create intelligence
    about a target.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with using Sn1per for reconnaissance, use the following instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following command to update the software
    packages repository list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, download the Sn1per files from their official GitHub repository:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Next, use the following command to change the present working directory to
    the **Sn1per** folder and execute the installation script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The installation process usually takes a few minutes to complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform active reconnaissance (a normal scan) using Sn1per, use the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: During a normal scan, Sn1per will attempt to perform DNS enumeration, carry
    out sub-domain discovery, perform multiple Nmap scans, scan HTTP/DNS scripts,
    grab HTTP banners, check for the presence of a WAF, and discover hidden files
    and directories on the target.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: During active reconnaissance (normal scanning) using Sn1per, it will attempt
    to directly connect to the target to collect sensitive information. Keep in mind
    that active reconnaissance scanning can trigger security alerts and notify the
    target.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following snippet shows an Nmap scan that was performed during a normal
    scan with Sn1per:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.30 – Port scanning](image/Figure_9.30_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.30 – Port scanning
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, the following snippet shows that Sn1per was able to identify
    the hidden files and directories on a target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.31 – Discovering hidden files and directories](image/Figure_9.31_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.31 – Discovering hidden files and directories
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform passive reconnaissance using Sn1per, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The **-o** syntax specifies to use OSINT and **-re** specifies reconnaissance.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Passive reconnaissance techniques and tools do not directly connect to the target
    but rather collect and analyze OSINT to create a profile about the target. Passive
    reconnaissance is recommended if you’re interested in reducing your threat level
    in triggering alerts on the target.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many types of modes and scans available in Sn1per; use the following
    command to view the entire listing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Sn1per scans can take a few minutes to complete each task as it performs extensive
    information gathering on the target. Once a scan is completed, the loot (collected
    data) is stored within the **/usr/share/sn1per/loot/** directory and a summary
    report in HTML format is generated and stored in the **/****usr/share/sn1per/loot/workspace/<target-name>/reports/**
    directory.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about Sn1per, please see the following link: [https://github.com/1N3/Sn1per](https://github.com/1N3/Sn1per).'
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will learn how to perform web reconnaissance using Amass.
  prefs: []
  type: TYPE_NORMAL
- en: Using Amass for web reconnaissance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Amass** is a web reconnaissance framework developed by OWASP to perform advanced
    DNS enumeration and help cybersecurity professionals and organizations with attack
    surface mapping. Amass works by identifying the external assets of an organization
    by using both passive and active reconnaissance techniques and tools through automation.
    Hence, it helps ethical hackers to efficiently collect and analyze data from multiple
    sources to create a profile of a target.'
  prefs: []
  type: TYPE_NORMAL
- en: Amass can collect information from various online databases using **Application
    Programming Interfaces** (**APIs**), digital certificates, DNS information, public
    routing databases, WHOIS records, and web-archiving databases.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started using Amass for web reconnaissance, please use the following
    instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, power on the **Kali Linux** virtual machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, open the Terminal and use the following command to update the software
    package repository list and install Amass:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The installation process usually takes a few minutes to complete.
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform sub-domain enumeration using passive reconnaissance on a target,
    use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows that Amass was able to identify the sub-domains
    of the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.32 – Sub-domain enumeration](image/Figure_9.32_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.32 – Sub-domain enumeration
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the task is completed, Amass provides the network block information showing
    where the sub-domains and their IP addresses are associated:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.33 – Network block information](image/Figure_9.33_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.33 – Network block information
  prefs: []
  type: TYPE_NORMAL
- en: The network block data can be used to identify the geo-location, hosting provider,
    country, **Autonomous System** (**AS**), and **Internet Service Provider** (**ISP**)
    details.
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform an intel scan to discover targets for enumeration, use the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The **-dir** syntax specifies where to store the output in a local folder on
    Kali Linux. The intel scan helps ethical hackers to collect OSINT about the target
    and identify additional root domain names that are associated with the target
    as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.34 – Intel scan](image/Figure_9.34_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.34 – Intel scan
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to perform passive DNS enumeration and map the attack surface of exposed
    assets to a target, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Amass was able to identify the sub-domains of a
    target by collecting information from various online sources:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.35 – DNS and attack surface mapping](image/Figure_9.35_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.35 – DNS and attack surface mapping
  prefs: []
  type: TYPE_NORMAL
- en: 'To perform active reconnaissance on a target, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows Amass was able to identify the associated IP addresses
    for each sub-domain of the target:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.36 – Mapping IP addresses to sub-domains](image/Figure_9.36_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.36 – Mapping IP addresses to sub-domains
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, to list the enumeration data that was collected on a target using Amass,
    use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the reports that were created by Amass during the
    enumeration process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.37 – Listing reports](image/Figure_9.37_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.37 – Listing reports
  prefs: []
  type: TYPE_NORMAL
- en: 'To generate a visual graph of the collected data, please use the following
    commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To open the visual graph using the web browser, use the following commands:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following snippet shows the visual graph from Amass:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.38 – Data visualization graph](image/Figure_9.38_B19448.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.38 – Data visualization graph
  prefs: []
  type: TYPE_NORMAL
- en: The visual graph helps ethical hackers to easily map sub-domains and IP addresses
    and identify the attack surface of a target.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Amass and its usage, please see [https://github.com/owasp-amass/amass/wiki/User-Guide](https://github.com/owasp-amass/amass/wiki/User-Guide).
  prefs: []
  type: TYPE_NORMAL
- en: Having completed this section, you have learned how to automate web reconnaissance
    using both the Sn1per and Amass frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over the course of this chapter, you learned how to perform web and domain reconnaissance
    using both passive and active information-gathering techniques. Additionally,
    you gained the hands-on skills that are needed by ethical hackers to identify
    the attack surface of a target and its sub-domains and discover hidden files and
    directories. Lastly, you explored how web reconnaissance frameworks can be used
    by ethical hackers to automate the discovery of an attack surface for a target.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this chapter has been informative for you and helpful in your journey
    in the cybersecurity industry. In the next chapter, *Implementing Reconnaissance
    Monitoring and Detection Systems*, you will learn how to implement various open
    source threat monitoring tools to identify network intrusions and determine whether
    reconnaissance-based attacks are happening within your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OWASP Top 10 – [https://owasp.org/www-project-top-ten/](https://owasp.org/www-project-top-ten/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP web reconnaissance – [https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/01-Information_Gathering/](https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/01-Information_Gathering/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
