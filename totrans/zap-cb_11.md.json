["```\n https://www.docker.com/products/docker-desktop\n```", "```\n     Windows: .\\zap.bat\n    ```", "```\n     Linux/Mac: ./zap.sh\n    ```", "```\n     Cross Platform: java -Xmx512m -jar zap-2.12.0.jar\n    ```", "```\n     OpenAPI: https://www.example.com/openapi.json\n    ```", "```\n     GraphQL: https://www.example.com/graphql\n    ```", "```\n    docker pull owasp/zap2docker-stable\n    ```", "```\n    docker run -t owasp/zap2docker-stable zap-api-scan.py -t https://www.example.com/openapi.json -f openapi\n    ```", "```\n Options: -c config_file config file for INFO, IGNORE or FAIL warnings -u config_url URL config file for INFO, IGNORE or FAIL warning -g gen_file generate default config file(all rules set to WARN) -r report_html file to write the full ZAP HTML report -w report_md file to write the full ZAP Wiki(Markdown) report -x report_xml file to write the full ZAP XML report -a include the alpha passive scan rules as well -d show debug messages -P specify listen port -D delay in seconds to wait for passive scanning -i default rules not in the config file to INFO -l level minimum level to show: PASS, IGNORE, INFO, WARN or FAIL, use with -s to hide example URLs -n context_file context file which will be loaded prior to scanning the target -p progress_file progress file which specifies issues that are being addressed -s short output format - don't show PASSes or example URLs -z zap_options ZAP CLI options (-z \"-config aaa=bbb -config ccc=ddd\")\n```", "```\n     http://<VM_IP_ADDR>:8080\n    ```", "```\n     Windows: C:\\ProgramData\\Jenkins\\.jenkins\\secrets\n    ```", "```\n     Linux: /var/lib/jenkins/secrets/\n    ```", "```\n     MacOS: /Users/Shared/Jenkins/Home/secrets/\n    ```", "```\n     pipeline {\n    ```", "```\n     agent any\n    ```", "```\n     parameters {\n    ```", "```\n     choice(name: \"ZAP_SCAN\", choices: [\"zap-baseline.py\", \"zap-full-scan.py\"], description: \"Parameter to choose type of ZAP scan\")\n    ```", "```\n     string(name: \"ENTER_URL\", defaultValue: \"http://192.168.1.1:3000\", trim: true, description: \"Parameter for entering a URL to be scanned\")\n    ```", "```\n     }\n    ```", "```\n     stages {\n    ```", "```\n     stage('Get Write Access'){\n    ```", "```\n     steps {\n    ```", "```\n     sh \"chmod 777 \\$(pwd)\"\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n     stage('Setting up OWASP ZAP docker container') {\n    ```", "```\n     steps {\n    ```", "```\n     echo \"Starting container --> Start\"\n    ```", "```\n     sh \"docker run --rm -v \\$(pwd):/zap/wrk/:rw --name owasp -dt owasp/zap2docker-live /bin/bash\"\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n     stage('Run Application Scan') {\n    ```", "```\n     steps {\n    ```", "```\n     sh \"docker exec owasp ${params.ZAP_SCAN} -t ${params.ENTER_URL} -I -j --auto\"\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n     stage('Stop and Remove Container') {\n    ```", "```\n     steps {\n    ```", "```\n     echo \"Removing container\"\n    ```", "```\n     sh '''\n    ```", "```\n     docker stop owasp\n    ```", "```\n     '''\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n     }\n    ```", "```\n    curl ij6azkfsiavavsmrjqpmj3pq54.odiss.eu\n    ```", "```\n    curl -X POST -H \"Content-Type: application/json\" ij6azkfsiavavsmrjqpmj3pq54.odiss.eu\n    ```", "```\n curl -X POST -H \"Content-Type: application/json\" -d '{\"key\": \"value\"}' secret.ij6azkfsiavavsmrjqpmj3pq54.odiss.eu\n```"]